// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GitopsSecret Construct(GitopsStack):  Snapshot Test 1`] = `
Stack {
  "_crossRegionReferences": false,
  "_logicalIds": LogicalIDs {
    "renames": {},
    "reverse": {},
  },
  "_missingContext": [],
  "_stackDependencies": {},
  "_stackName": "Default",
  "_versionReportingEnabled": undefined,
  "account": "\${Token[AWS.AccountId.2]}",
  "artifactId": "Default",
  "environment": "aws://unknown-account/unknown-region",
  "node": Node {
    "_children": {
      "codeCommitSecret": CreateGitopsSecretResource {
        "id": "\${Token[TOKEN.695]}",
        "node": Node {
          "_children": {
            "CreateGitopsSecretLambda": Role {
              "_allowCrossEnvironment": true,
              "_didSplit": false,
              "_physicalName": "AWSLambdaBasicExecutionRole-codeCommitSecret",
              "_roleId": "\${Token[TOKEN.16]}",
              "assumeRoleAction": "sts:AssumeRole",
              "assumeRolePolicy": {
                "Statement": [
                  {
                    "Action": "sts:AssumeRole",
                    "Effect": "Allow",
                    "Principal": {
                      "Service": "\${Token[lambda.amazonaws.com.11]}",
                    },
                  },
                ],
                "Version": "2012-10-17",
              },
              "attachedPolicies": AttachedPolicies {
                "policies": [
                  Policy {
                    "_allowCrossEnvironment": false,
                    "_physicalName": "\${Token[TOKEN.20]}",
                    "_policyName": "\${Token[TOKEN.20]}",
                    "document": {
                      "Statement": [
                        {
                          "Action": "logs:CreateLogGroup",
                          "Effect": "Allow",
                          "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                        },
                        {
                          "Action": "secretsmanager:*",
                          "Effect": "Allow",
                          "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                        },
                        {
                          "Action": [
                            "kms:Decrypt",
                            "kms:DescribeKey",
                          ],
                          "Effect": "Allow",
                          "Resource": "*",
                        },
                        {
                          "Action": [
                            "iam:CreateServiceSpecificCredential",
                            "iam:DeleteServiceSpecificCredential",
                            "iam:ListServiceSpecificCredentials",
                          ],
                          "Effect": "Allow",
                          "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                        },
                      ],
                      "Version": "2012-10-17",
                    },
                    "env": {
                      "account": "\${Token[AWS.AccountId.2]}",
                      "region": "\${Token[AWS.Region.6]}",
                    },
                    "force": false,
                    "grantPrincipal": PolicyGrantPrincipal {
                      "_policy": [Circular],
                      "assumeRoleAction": "sts:AssumeRole",
                      "grantPrincipal": [Circular],
                      "principalAccount": "\${Token[AWS.AccountId.2]}",
                    },
                    "groups": [],
                    "node": Node {
                      "_children": {
                        "Resource": CfnPolicyConditional {
                          "_cfnProperties": {
                            "groups": [
                              "#{Token[TOKEN.23]}",
                            ],
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "logs:CreateLogGroup",
                                  "Effect": "Allow",
                                  "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                },
                                {
                                  "Action": "secretsmanager:*",
                                  "Effect": "Allow",
                                  "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                },
                                {
                                  "Action": [
                                    "kms:Decrypt",
                                    "kms:DescribeKey",
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*",
                                },
                                {
                                  "Action": [
                                    "iam:CreateServiceSpecificCredential",
                                    "iam:DeleteServiceSpecificCredential",
                                    "iam:ListServiceSpecificCredentials",
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                },
                              ],
                              "Version": "2012-10-17",
                            },
                            "policyName": "\${Token[TOKEN.20]}",
                            "roles": [
                              "#{Token[TOKEN.21]}",
                            ],
                            "users": [
                              "#{Token[TOKEN.22]}",
                            ],
                          },
                          "cfnOptions": {},
                          "cfnResourceType": "AWS::IAM::Policy",
                          "dependsOn": Set {},
                          "groups": [
                            "#{Token[TOKEN.23]}",
                          ],
                          "logicalId": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                          "node": Node {
                            "_children": {},
                            "_context": {},
                            "_dependencies": Set {},
                            "_locked": false,
                            "_metadata": [
                              {
                                "data": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                                "trace": undefined,
                                "type": "aws:cdk:logicalId",
                              },
                            ],
                            "_validations": [],
                            "host": [Circular],
                            "id": "Resource",
                            "scope": [Circular],
                          },
                          "policyDocument": {
                            "Statement": [
                              {
                                "Action": "logs:CreateLogGroup",
                                "Effect": "Allow",
                                "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                              },
                              {
                                "Action": "secretsmanager:*",
                                "Effect": "Allow",
                                "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                              },
                              {
                                "Action": [
                                  "kms:Decrypt",
                                  "kms:DescribeKey",
                                ],
                                "Effect": "Allow",
                                "Resource": "*",
                              },
                              {
                                "Action": [
                                  "iam:CreateServiceSpecificCredential",
                                  "iam:DeleteServiceSpecificCredential",
                                  "iam:ListServiceSpecificCredentials",
                                ],
                                "Effect": "Allow",
                                "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                              },
                            ],
                            "Version": "2012-10-17",
                          },
                          "policyName": "\${Token[TOKEN.20]}",
                          "rawOverrides": {},
                          "roles": [
                            "#{Token[TOKEN.21]}",
                          ],
                          "stack": [Circular],
                          "users": [
                            "#{Token[TOKEN.22]}",
                          ],
                          Symbol(@aws-cdk/core.DependableTrait): {
                            "dependencyRoots": [
                              [Circular],
                            ],
                          },
                        },
                      },
                      "_context": {},
                      "_dependencies": Set {},
                      "_locked": false,
                      "_metadata": [],
                      "_validations": [
                        {
                          "validate": [Function],
                        },
                      ],
                      "host": [Circular],
                      "id": "DefaultPolicy",
                      "scope": [Circular],
                    },
                    "physicalName": "\${Token[TOKEN.20]}",
                    "referenceTaken": false,
                    "roles": [
                      [Circular],
                    ],
                    "stack": [Circular],
                    "users": [],
                    Symbol(@aws-cdk/core.DependableTrait): {
                      "dependencyRoots": [
                        [Circular],
                      ],
                    },
                  },
                ],
              },
              "defaultPolicy": Policy {
                "_allowCrossEnvironment": false,
                "_physicalName": "\${Token[TOKEN.20]}",
                "_policyName": "\${Token[TOKEN.20]}",
                "document": {
                  "Statement": [
                    {
                      "Action": "logs:CreateLogGroup",
                      "Effect": "Allow",
                      "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                    },
                    {
                      "Action": "secretsmanager:*",
                      "Effect": "Allow",
                      "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                    },
                    {
                      "Action": [
                        "kms:Decrypt",
                        "kms:DescribeKey",
                      ],
                      "Effect": "Allow",
                      "Resource": "*",
                    },
                    {
                      "Action": [
                        "iam:CreateServiceSpecificCredential",
                        "iam:DeleteServiceSpecificCredential",
                        "iam:ListServiceSpecificCredentials",
                      ],
                      "Effect": "Allow",
                      "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                    },
                  ],
                  "Version": "2012-10-17",
                },
                "env": {
                  "account": "\${Token[AWS.AccountId.2]}",
                  "region": "\${Token[AWS.Region.6]}",
                },
                "force": false,
                "grantPrincipal": PolicyGrantPrincipal {
                  "_policy": [Circular],
                  "assumeRoleAction": "sts:AssumeRole",
                  "grantPrincipal": [Circular],
                  "principalAccount": "\${Token[AWS.AccountId.2]}",
                },
                "groups": [],
                "node": Node {
                  "_children": {
                    "Resource": CfnPolicyConditional {
                      "_cfnProperties": {
                        "groups": [
                          "#{Token[TOKEN.23]}",
                        ],
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": "logs:CreateLogGroup",
                              "Effect": "Allow",
                              "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                            },
                            {
                              "Action": "secretsmanager:*",
                              "Effect": "Allow",
                              "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                            },
                            {
                              "Action": [
                                "kms:Decrypt",
                                "kms:DescribeKey",
                              ],
                              "Effect": "Allow",
                              "Resource": "*",
                            },
                            {
                              "Action": [
                                "iam:CreateServiceSpecificCredential",
                                "iam:DeleteServiceSpecificCredential",
                                "iam:ListServiceSpecificCredentials",
                              ],
                              "Effect": "Allow",
                              "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                            },
                          ],
                          "Version": "2012-10-17",
                        },
                        "policyName": "\${Token[TOKEN.20]}",
                        "roles": [
                          "#{Token[TOKEN.21]}",
                        ],
                        "users": [
                          "#{Token[TOKEN.22]}",
                        ],
                      },
                      "cfnOptions": {},
                      "cfnResourceType": "AWS::IAM::Policy",
                      "dependsOn": Set {},
                      "groups": [
                        "#{Token[TOKEN.23]}",
                      ],
                      "logicalId": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                      "node": Node {
                        "_children": {},
                        "_context": {},
                        "_dependencies": Set {},
                        "_locked": false,
                        "_metadata": [
                          {
                            "data": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                            "trace": undefined,
                            "type": "aws:cdk:logicalId",
                          },
                        ],
                        "_validations": [],
                        "host": [Circular],
                        "id": "Resource",
                        "scope": [Circular],
                      },
                      "policyDocument": {
                        "Statement": [
                          {
                            "Action": "logs:CreateLogGroup",
                            "Effect": "Allow",
                            "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                          },
                          {
                            "Action": "secretsmanager:*",
                            "Effect": "Allow",
                            "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                          },
                          {
                            "Action": [
                              "kms:Decrypt",
                              "kms:DescribeKey",
                            ],
                            "Effect": "Allow",
                            "Resource": "*",
                          },
                          {
                            "Action": [
                              "iam:CreateServiceSpecificCredential",
                              "iam:DeleteServiceSpecificCredential",
                              "iam:ListServiceSpecificCredentials",
                            ],
                            "Effect": "Allow",
                            "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                          },
                        ],
                        "Version": "2012-10-17",
                      },
                      "policyName": "\${Token[TOKEN.20]}",
                      "rawOverrides": {},
                      "roles": [
                        "#{Token[TOKEN.21]}",
                      ],
                      "stack": [Circular],
                      "users": [
                        "#{Token[TOKEN.22]}",
                      ],
                      Symbol(@aws-cdk/core.DependableTrait): {
                        "dependencyRoots": [
                          [Circular],
                        ],
                      },
                    },
                  },
                  "_context": {},
                  "_dependencies": Set {},
                  "_locked": false,
                  "_metadata": [],
                  "_validations": [
                    {
                      "validate": [Function],
                    },
                  ],
                  "host": [Circular],
                  "id": "DefaultPolicy",
                  "scope": [Circular],
                },
                "physicalName": "\${Token[TOKEN.20]}",
                "referenceTaken": false,
                "roles": [
                  [Circular],
                ],
                "stack": [Circular],
                "users": [],
                Symbol(@aws-cdk/core.DependableTrait): {
                  "dependencyRoots": [
                    [Circular],
                  ],
                },
              },
              "dependables": Map {
                {
                  "Action": "logs:CreateLogGroup",
                  "Effect": "Allow",
                  "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                } => DependencyGroup {
                  "_deps": [],
                  Symbol(@aws-cdk/core.DependableTrait): {
                    "dependencyRoots": [],
                  },
                },
                {
                  "Action": "secretsmanager:*",
                  "Effect": "Allow",
                  "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                } => DependencyGroup {
                  "_deps": [],
                  Symbol(@aws-cdk/core.DependableTrait): {
                    "dependencyRoots": [],
                  },
                },
                {
                  "Action": [
                    "kms:Decrypt",
                    "kms:DescribeKey",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                } => DependencyGroup {
                  "_deps": [],
                  Symbol(@aws-cdk/core.DependableTrait): {
                    "dependencyRoots": [],
                  },
                },
                {
                  "Action": [
                    "iam:CreateServiceSpecificCredential",
                    "iam:DeleteServiceSpecificCredential",
                    "iam:ListServiceSpecificCredentials",
                  ],
                  "Effect": "Allow",
                  "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                } => DependencyGroup {
                  "_deps": [],
                  Symbol(@aws-cdk/core.DependableTrait): {
                    "dependencyRoots": [],
                  },
                },
              },
              "env": {
                "account": "\${Token[AWS.AccountId.2]}",
                "region": "\${Token[AWS.Region.6]}",
              },
              "grantPrincipal": [Circular],
              "inlinePolicies": {},
              "managedPolicies": [
                AwsManagedPolicy {
                  "managedPolicyArn": "arn:\${Token[AWS.Partition.5]}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                },
              ],
              "node": Node {
                "_children": {
                  "DefaultPolicy": Policy {
                    "_allowCrossEnvironment": false,
                    "_physicalName": "\${Token[TOKEN.20]}",
                    "_policyName": "\${Token[TOKEN.20]}",
                    "document": {
                      "Statement": [
                        {
                          "Action": "logs:CreateLogGroup",
                          "Effect": "Allow",
                          "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                        },
                        {
                          "Action": "secretsmanager:*",
                          "Effect": "Allow",
                          "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                        },
                        {
                          "Action": [
                            "kms:Decrypt",
                            "kms:DescribeKey",
                          ],
                          "Effect": "Allow",
                          "Resource": "*",
                        },
                        {
                          "Action": [
                            "iam:CreateServiceSpecificCredential",
                            "iam:DeleteServiceSpecificCredential",
                            "iam:ListServiceSpecificCredentials",
                          ],
                          "Effect": "Allow",
                          "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                        },
                      ],
                      "Version": "2012-10-17",
                    },
                    "env": {
                      "account": "\${Token[AWS.AccountId.2]}",
                      "region": "\${Token[AWS.Region.6]}",
                    },
                    "force": false,
                    "grantPrincipal": PolicyGrantPrincipal {
                      "_policy": [Circular],
                      "assumeRoleAction": "sts:AssumeRole",
                      "grantPrincipal": [Circular],
                      "principalAccount": "\${Token[AWS.AccountId.2]}",
                    },
                    "groups": [],
                    "node": Node {
                      "_children": {
                        "Resource": CfnPolicyConditional {
                          "_cfnProperties": {
                            "groups": [
                              "#{Token[TOKEN.23]}",
                            ],
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "logs:CreateLogGroup",
                                  "Effect": "Allow",
                                  "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                },
                                {
                                  "Action": "secretsmanager:*",
                                  "Effect": "Allow",
                                  "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                },
                                {
                                  "Action": [
                                    "kms:Decrypt",
                                    "kms:DescribeKey",
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*",
                                },
                                {
                                  "Action": [
                                    "iam:CreateServiceSpecificCredential",
                                    "iam:DeleteServiceSpecificCredential",
                                    "iam:ListServiceSpecificCredentials",
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                },
                              ],
                              "Version": "2012-10-17",
                            },
                            "policyName": "\${Token[TOKEN.20]}",
                            "roles": [
                              "#{Token[TOKEN.21]}",
                            ],
                            "users": [
                              "#{Token[TOKEN.22]}",
                            ],
                          },
                          "cfnOptions": {},
                          "cfnResourceType": "AWS::IAM::Policy",
                          "dependsOn": Set {},
                          "groups": [
                            "#{Token[TOKEN.23]}",
                          ],
                          "logicalId": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                          "node": Node {
                            "_children": {},
                            "_context": {},
                            "_dependencies": Set {},
                            "_locked": false,
                            "_metadata": [
                              {
                                "data": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                                "trace": undefined,
                                "type": "aws:cdk:logicalId",
                              },
                            ],
                            "_validations": [],
                            "host": [Circular],
                            "id": "Resource",
                            "scope": [Circular],
                          },
                          "policyDocument": {
                            "Statement": [
                              {
                                "Action": "logs:CreateLogGroup",
                                "Effect": "Allow",
                                "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                              },
                              {
                                "Action": "secretsmanager:*",
                                "Effect": "Allow",
                                "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                              },
                              {
                                "Action": [
                                  "kms:Decrypt",
                                  "kms:DescribeKey",
                                ],
                                "Effect": "Allow",
                                "Resource": "*",
                              },
                              {
                                "Action": [
                                  "iam:CreateServiceSpecificCredential",
                                  "iam:DeleteServiceSpecificCredential",
                                  "iam:ListServiceSpecificCredentials",
                                ],
                                "Effect": "Allow",
                                "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                              },
                            ],
                            "Version": "2012-10-17",
                          },
                          "policyName": "\${Token[TOKEN.20]}",
                          "rawOverrides": {},
                          "roles": [
                            "#{Token[TOKEN.21]}",
                          ],
                          "stack": [Circular],
                          "users": [
                            "#{Token[TOKEN.22]}",
                          ],
                          Symbol(@aws-cdk/core.DependableTrait): {
                            "dependencyRoots": [
                              [Circular],
                            ],
                          },
                        },
                      },
                      "_context": {},
                      "_dependencies": Set {},
                      "_locked": false,
                      "_metadata": [],
                      "_validations": [
                        {
                          "validate": [Function],
                        },
                      ],
                      "host": [Circular],
                      "id": "DefaultPolicy",
                      "scope": [Circular],
                    },
                    "physicalName": "\${Token[TOKEN.20]}",
                    "referenceTaken": false,
                    "roles": [
                      [Circular],
                    ],
                    "stack": [Circular],
                    "users": [],
                    Symbol(@aws-cdk/core.DependableTrait): {
                      "dependencyRoots": [
                        [Circular],
                      ],
                    },
                  },
                  "ImportCreateGitopsSecretLambda": ImportedRole {
                    "_allowCrossEnvironment": false,
                    "_physicalName": undefined,
                    "assumeRoleAction": "sts:AssumeRole",
                    "attachedPolicies": AttachedPolicies {
                      "policies": [],
                    },
                    "defaultPolicyName": undefined,
                    "env": {
                      "account": "\${Token[AWS.AccountId.2]}",
                      "region": "\${Token[AWS.Region.6]}",
                    },
                    "grantPrincipal": [Circular],
                    "node": Node {
                      "_children": {},
                      "_context": {},
                      "_dependencies": Set {},
                      "_locked": false,
                      "_metadata": [],
                      "_validations": [],
                      "host": [Circular],
                      "id": "ImportCreateGitopsSecretLambda",
                      "scope": [Circular],
                    },
                    "physicalName": "\${Token[TOKEN.12]}",
                    "policyFragment": PrincipalPolicyFragment {
                      "conditions": {},
                      "principalJson": {
                        "AWS": [
                          "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                        ],
                      },
                    },
                    "principalAccount": "\${Token[AWS.AccountId.2]}",
                    "roleArn": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                    "roleName": "CreateGitopsSecretLambda",
                    "stack": [Circular],
                    Symbol(@aws-cdk/core.DependableTrait): {
                      "dependencyRoots": [
                        [Circular],
                      ],
                    },
                  },
                  "Resource": CfnRole {
                    "_cfnProperties": {
                      "assumeRolePolicyDocument": {
                        "Statement": [
                          {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                              "Service": "\${Token[lambda.amazonaws.com.11]}",
                            },
                          },
                        ],
                        "Version": "2012-10-17",
                      },
                      "description": "AWS Accelerator assets access role in workload accounts to bootstrap gitops credentials",
                      "managedPolicyArns": [
                        "#{Token[TOKEN.13]}",
                      ],
                      "maxSessionDuration": undefined,
                      "path": undefined,
                      "permissionsBoundary": undefined,
                      "policies": undefined,
                      "roleName": "AWSLambdaBasicExecutionRole-codeCommitSecret",
                    },
                    "assumeRolePolicyDocument": {
                      "Statement": [
                        {
                          "Action": "sts:AssumeRole",
                          "Effect": "Allow",
                          "Principal": {
                            "Service": "\${Token[lambda.amazonaws.com.11]}",
                          },
                        },
                      ],
                      "Version": "2012-10-17",
                    },
                    "attrArn": "\${Token[TOKEN.15]}",
                    "attrRoleId": "\${Token[TOKEN.16]}",
                    "cfnOptions": {},
                    "cfnResourceType": "AWS::IAM::Role",
                    "dependsOn": Set {},
                    "description": "AWS Accelerator assets access role in workload accounts to bootstrap gitops credentials",
                    "logicalId": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.Resource.LogicalID.14]}",
                    "managedPolicyArns": [
                      "#{Token[TOKEN.13]}",
                    ],
                    "maxSessionDuration": undefined,
                    "node": Node {
                      "_children": {},
                      "_context": {},
                      "_dependencies": Set {},
                      "_locked": false,
                      "_metadata": [
                        {
                          "data": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.Resource.LogicalID.14]}",
                          "trace": undefined,
                          "type": "aws:cdk:logicalId",
                        },
                      ],
                      "_validations": [],
                      "host": [Circular],
                      "id": "Resource",
                      "scope": [Circular],
                    },
                    "path": undefined,
                    "permissionsBoundary": undefined,
                    "policies": undefined,
                    "rawOverrides": {},
                    "roleName": "AWSLambdaBasicExecutionRole-codeCommitSecret",
                    "stack": [Circular],
                    "tags": TagManager {
                      "initialTagPriority": 50,
                      "priorities": Map {},
                      "renderedTags": "<unresolved-lazy>",
                      "resourceTypeName": "AWS::IAM::Role",
                      "tagFormatter": StandardFormatter {},
                      "tagPropertyName": "tags",
                      "tags": Map {},
                    },
                    Symbol(@aws-cdk/core.DependableTrait): {
                      "dependencyRoots": [
                        [Circular],
                      ],
                    },
                  },
                },
                "_context": {},
                "_dependencies": Set {},
                "_locked": false,
                "_metadata": [],
                "_validations": [
                  {
                    "validate": [Function],
                  },
                ],
                "host": [Circular],
                "id": "CreateGitopsSecretLambda",
                "scope": [Circular],
              },
              "permissionsBoundary": undefined,
              "physicalName": "AWSLambdaBasicExecutionRole-codeCommitSecret",
              "policyFragment": PrincipalPolicyFragment {
                "conditions": {},
                "principalJson": {
                  "AWS": [
                    "\${Token[TOKEN.17]}",
                  ],
                },
              },
              "principalAccount": "\${Token[AWS.AccountId.2]}",
              "roleArn": "\${Token[TOKEN.17]}",
              "roleName": "\${Token[TOKEN.19]}",
              "stack": [Circular],
              Symbol(@aws-cdk/core.DependableTrait): {
                "dependencyRoots": [
                  [Circular],
                ],
              },
            },
            "Custom::GitopsSecrets": Provider {
              "entrypoint": Function {
                "_allowCrossEnvironment": false,
                "_architecture": undefined,
                "_functionUrlInvocationGrants": {},
                "_invocationGrants": {},
                "_layers": [],
                "_physicalName": undefined,
                "_warnIfCurrentVersionCalled": false,
                "architecture": Architecture {
                  "dockerPlatform": "linux/amd64",
                  "name": "x86_64",
                },
                "canCreatePermissions": true,
                "currentVersionOptions": undefined,
                "env": {
                  "account": "\${Token[AWS.AccountId.2]}",
                  "region": "\${Token[AWS.Region.6]}",
                },
                "environment": {
                  "USER_ON_EVENT_FUNCTION_ARN": {
                    "value": "\${Token[TOKEN.658]}",
                  },
                },
                "functionArn": "\${Token[TOKEN.687]}",
                "functionName": "\${Token[TOKEN.686]}",
                "grantPrincipal": Role {
                  "_allowCrossEnvironment": false,
                  "_didSplit": false,
                  "_physicalName": undefined,
                  "_roleId": "\${Token[TOKEN.671]}",
                  "assumeRoleAction": "sts:AssumeRole",
                  "assumeRolePolicy": {
                    "Statement": [
                      {
                        "Action": "sts:AssumeRole",
                        "Effect": "Allow",
                        "Principal": {
                          "Service": "\${Token[lambda.amazonaws.com.666]}",
                        },
                      },
                    ],
                    "Version": "2012-10-17",
                  },
                  "attachedPolicies": AttachedPolicies {
                    "policies": [
                      Policy {
                        "_allowCrossEnvironment": false,
                        "_physicalName": "\${Token[TOKEN.688]}",
                        "_policyName": "\${Token[TOKEN.688]}",
                        "document": {
                          "Statement": [
                            {
                              "Action": "lambda:InvokeFunction",
                              "Effect": "Allow",
                              "Resource": [
                                "\${Token[TOKEN.658]}",
                                "\${Token[TOKEN.658]}:*",
                              ],
                            },
                          ],
                          "Version": "2012-10-17",
                        },
                        "env": {
                          "account": "\${Token[AWS.AccountId.2]}",
                          "region": "\${Token[AWS.Region.6]}",
                        },
                        "force": false,
                        "grantPrincipal": PolicyGrantPrincipal {
                          "_policy": [Circular],
                          "assumeRoleAction": "sts:AssumeRole",
                          "grantPrincipal": [Circular],
                          "principalAccount": "\${Token[AWS.AccountId.2]}",
                        },
                        "groups": [],
                        "node": Node {
                          "_children": {
                            "Resource": CfnPolicyConditional {
                              "_cfnProperties": {
                                "groups": [
                                  "#{Token[TOKEN.691]}",
                                ],
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "lambda:InvokeFunction",
                                      "Effect": "Allow",
                                      "Resource": [
                                        "\${Token[TOKEN.658]}",
                                        "\${Token[TOKEN.658]}:*",
                                      ],
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "policyName": "\${Token[TOKEN.688]}",
                                "roles": [
                                  "#{Token[TOKEN.689]}",
                                ],
                                "users": [
                                  "#{Token[TOKEN.690]}",
                                ],
                              },
                              "cfnOptions": {},
                              "cfnResourceType": "AWS::IAM::Policy",
                              "dependsOn": Set {},
                              "groups": [
                                "#{Token[TOKEN.691]}",
                              ],
                              "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                              "node": Node {
                                "_children": {},
                                "_context": {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": [
                                  {
                                    "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                    "trace": undefined,
                                    "type": "aws:cdk:logicalId",
                                  },
                                ],
                                "_validations": [],
                                "host": [Circular],
                                "id": "Resource",
                                "scope": [Circular],
                              },
                              "policyDocument": {
                                "Statement": [
                                  {
                                    "Action": "lambda:InvokeFunction",
                                    "Effect": "Allow",
                                    "Resource": [
                                      "\${Token[TOKEN.658]}",
                                      "\${Token[TOKEN.658]}:*",
                                    ],
                                  },
                                ],
                                "Version": "2012-10-17",
                              },
                              "policyName": "\${Token[TOKEN.688]}",
                              "rawOverrides": {},
                              "roles": [
                                "#{Token[TOKEN.689]}",
                              ],
                              "stack": [Circular],
                              "users": [
                                "#{Token[TOKEN.690]}",
                              ],
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [
                                  [Circular],
                                ],
                              },
                            },
                          },
                          "_context": {},
                          "_dependencies": Set {},
                          "_locked": false,
                          "_metadata": [],
                          "_validations": [
                            {
                              "validate": [Function],
                            },
                          ],
                          "host": [Circular],
                          "id": "DefaultPolicy",
                          "scope": [Circular],
                        },
                        "physicalName": "\${Token[TOKEN.688]}",
                        "referenceTaken": false,
                        "roles": [
                          [Circular],
                        ],
                        "stack": [Circular],
                        "users": [],
                        Symbol(@aws-cdk/core.DependableTrait): {
                          "dependencyRoots": [
                            [Circular],
                          ],
                        },
                      },
                    ],
                  },
                  "defaultPolicy": Policy {
                    "_allowCrossEnvironment": false,
                    "_physicalName": "\${Token[TOKEN.688]}",
                    "_policyName": "\${Token[TOKEN.688]}",
                    "document": {
                      "Statement": [
                        {
                          "Action": "lambda:InvokeFunction",
                          "Effect": "Allow",
                          "Resource": [
                            "\${Token[TOKEN.658]}",
                            "\${Token[TOKEN.658]}:*",
                          ],
                        },
                      ],
                      "Version": "2012-10-17",
                    },
                    "env": {
                      "account": "\${Token[AWS.AccountId.2]}",
                      "region": "\${Token[AWS.Region.6]}",
                    },
                    "force": false,
                    "grantPrincipal": PolicyGrantPrincipal {
                      "_policy": [Circular],
                      "assumeRoleAction": "sts:AssumeRole",
                      "grantPrincipal": [Circular],
                      "principalAccount": "\${Token[AWS.AccountId.2]}",
                    },
                    "groups": [],
                    "node": Node {
                      "_children": {
                        "Resource": CfnPolicyConditional {
                          "_cfnProperties": {
                            "groups": [
                              "#{Token[TOKEN.691]}",
                            ],
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "lambda:InvokeFunction",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "\${Token[TOKEN.658]}",
                                    "\${Token[TOKEN.658]}:*",
                                  ],
                                },
                              ],
                              "Version": "2012-10-17",
                            },
                            "policyName": "\${Token[TOKEN.688]}",
                            "roles": [
                              "#{Token[TOKEN.689]}",
                            ],
                            "users": [
                              "#{Token[TOKEN.690]}",
                            ],
                          },
                          "cfnOptions": {},
                          "cfnResourceType": "AWS::IAM::Policy",
                          "dependsOn": Set {},
                          "groups": [
                            "#{Token[TOKEN.691]}",
                          ],
                          "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                          "node": Node {
                            "_children": {},
                            "_context": {},
                            "_dependencies": Set {},
                            "_locked": false,
                            "_metadata": [
                              {
                                "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                "trace": undefined,
                                "type": "aws:cdk:logicalId",
                              },
                            ],
                            "_validations": [],
                            "host": [Circular],
                            "id": "Resource",
                            "scope": [Circular],
                          },
                          "policyDocument": {
                            "Statement": [
                              {
                                "Action": "lambda:InvokeFunction",
                                "Effect": "Allow",
                                "Resource": [
                                  "\${Token[TOKEN.658]}",
                                  "\${Token[TOKEN.658]}:*",
                                ],
                              },
                            ],
                            "Version": "2012-10-17",
                          },
                          "policyName": "\${Token[TOKEN.688]}",
                          "rawOverrides": {},
                          "roles": [
                            "#{Token[TOKEN.689]}",
                          ],
                          "stack": [Circular],
                          "users": [
                            "#{Token[TOKEN.690]}",
                          ],
                          Symbol(@aws-cdk/core.DependableTrait): {
                            "dependencyRoots": [
                              [Circular],
                            ],
                          },
                        },
                      },
                      "_context": {},
                      "_dependencies": Set {},
                      "_locked": false,
                      "_metadata": [],
                      "_validations": [
                        {
                          "validate": [Function],
                        },
                      ],
                      "host": [Circular],
                      "id": "DefaultPolicy",
                      "scope": [Circular],
                    },
                    "physicalName": "\${Token[TOKEN.688]}",
                    "referenceTaken": false,
                    "roles": [
                      [Circular],
                    ],
                    "stack": [Circular],
                    "users": [],
                    Symbol(@aws-cdk/core.DependableTrait): {
                      "dependencyRoots": [
                        [Circular],
                      ],
                    },
                  },
                  "dependables": Map {
                    {
                      "Action": "lambda:InvokeFunction",
                      "Effect": "Allow",
                      "Resource": [
                        "\${Token[TOKEN.658]}",
                        "\${Token[TOKEN.658]}:*",
                      ],
                    } => DependencyGroup {
                      "_deps": [],
                      Symbol(@aws-cdk/core.DependableTrait): {
                        "dependencyRoots": [],
                      },
                    },
                  },
                  "env": {
                    "account": "\${Token[AWS.AccountId.2]}",
                    "region": "\${Token[AWS.Region.6]}",
                  },
                  "grantPrincipal": [Circular],
                  "inlinePolicies": {},
                  "managedPolicies": [
                    AwsManagedPolicy {
                      "managedPolicyArn": "arn:\${Token[AWS.Partition.5]}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                    },
                  ],
                  "node": Node {
                    "_children": {
                      "DefaultPolicy": Policy {
                        "_allowCrossEnvironment": false,
                        "_physicalName": "\${Token[TOKEN.688]}",
                        "_policyName": "\${Token[TOKEN.688]}",
                        "document": {
                          "Statement": [
                            {
                              "Action": "lambda:InvokeFunction",
                              "Effect": "Allow",
                              "Resource": [
                                "\${Token[TOKEN.658]}",
                                "\${Token[TOKEN.658]}:*",
                              ],
                            },
                          ],
                          "Version": "2012-10-17",
                        },
                        "env": {
                          "account": "\${Token[AWS.AccountId.2]}",
                          "region": "\${Token[AWS.Region.6]}",
                        },
                        "force": false,
                        "grantPrincipal": PolicyGrantPrincipal {
                          "_policy": [Circular],
                          "assumeRoleAction": "sts:AssumeRole",
                          "grantPrincipal": [Circular],
                          "principalAccount": "\${Token[AWS.AccountId.2]}",
                        },
                        "groups": [],
                        "node": Node {
                          "_children": {
                            "Resource": CfnPolicyConditional {
                              "_cfnProperties": {
                                "groups": [
                                  "#{Token[TOKEN.691]}",
                                ],
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "lambda:InvokeFunction",
                                      "Effect": "Allow",
                                      "Resource": [
                                        "\${Token[TOKEN.658]}",
                                        "\${Token[TOKEN.658]}:*",
                                      ],
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "policyName": "\${Token[TOKEN.688]}",
                                "roles": [
                                  "#{Token[TOKEN.689]}",
                                ],
                                "users": [
                                  "#{Token[TOKEN.690]}",
                                ],
                              },
                              "cfnOptions": {},
                              "cfnResourceType": "AWS::IAM::Policy",
                              "dependsOn": Set {},
                              "groups": [
                                "#{Token[TOKEN.691]}",
                              ],
                              "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                              "node": Node {
                                "_children": {},
                                "_context": {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": [
                                  {
                                    "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                    "trace": undefined,
                                    "type": "aws:cdk:logicalId",
                                  },
                                ],
                                "_validations": [],
                                "host": [Circular],
                                "id": "Resource",
                                "scope": [Circular],
                              },
                              "policyDocument": {
                                "Statement": [
                                  {
                                    "Action": "lambda:InvokeFunction",
                                    "Effect": "Allow",
                                    "Resource": [
                                      "\${Token[TOKEN.658]}",
                                      "\${Token[TOKEN.658]}:*",
                                    ],
                                  },
                                ],
                                "Version": "2012-10-17",
                              },
                              "policyName": "\${Token[TOKEN.688]}",
                              "rawOverrides": {},
                              "roles": [
                                "#{Token[TOKEN.689]}",
                              ],
                              "stack": [Circular],
                              "users": [
                                "#{Token[TOKEN.690]}",
                              ],
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [
                                  [Circular],
                                ],
                              },
                            },
                          },
                          "_context": {},
                          "_dependencies": Set {},
                          "_locked": false,
                          "_metadata": [],
                          "_validations": [
                            {
                              "validate": [Function],
                            },
                          ],
                          "host": [Circular],
                          "id": "DefaultPolicy",
                          "scope": [Circular],
                        },
                        "physicalName": "\${Token[TOKEN.688]}",
                        "referenceTaken": false,
                        "roles": [
                          [Circular],
                        ],
                        "stack": [Circular],
                        "users": [],
                        Symbol(@aws-cdk/core.DependableTrait): {
                          "dependencyRoots": [
                            [Circular],
                          ],
                        },
                      },
                      "ImportServiceRole": ImportedRole {
                        "_allowCrossEnvironment": false,
                        "_physicalName": undefined,
                        "assumeRoleAction": "sts:AssumeRole",
                        "attachedPolicies": AttachedPolicies {
                          "policies": [],
                        },
                        "defaultPolicyName": undefined,
                        "env": {
                          "account": "\${Token[AWS.AccountId.2]}",
                          "region": "\${Token[AWS.Region.6]}",
                        },
                        "grantPrincipal": [Circular],
                        "node": Node {
                          "_children": {},
                          "_context": {},
                          "_dependencies": Set {},
                          "_locked": false,
                          "_metadata": [],
                          "_validations": [],
                          "host": [Circular],
                          "id": "ImportServiceRole",
                          "scope": [Circular],
                        },
                        "physicalName": "\${Token[TOKEN.667]}",
                        "policyFragment": PrincipalPolicyFragment {
                          "conditions": {},
                          "principalJson": {
                            "AWS": [
                              "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                            ],
                          },
                        },
                        "principalAccount": "\${Token[AWS.AccountId.2]}",
                        "roleArn": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                        "roleName": "ServiceRole",
                        "stack": [Circular],
                        Symbol(@aws-cdk/core.DependableTrait): {
                          "dependencyRoots": [
                            [Circular],
                          ],
                        },
                      },
                      "Resource": CfnRole {
                        "_cfnProperties": {
                          "assumeRolePolicyDocument": {
                            "Statement": [
                              {
                                "Action": "sts:AssumeRole",
                                "Effect": "Allow",
                                "Principal": {
                                  "Service": "\${Token[lambda.amazonaws.com.666]}",
                                },
                              },
                            ],
                            "Version": "2012-10-17",
                          },
                          "description": undefined,
                          "managedPolicyArns": [
                            "#{Token[TOKEN.668]}",
                          ],
                          "maxSessionDuration": undefined,
                          "path": undefined,
                          "permissionsBoundary": undefined,
                          "policies": undefined,
                          "roleName": "\${Token[TOKEN.665]}",
                        },
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "\${Token[lambda.amazonaws.com.666]}",
                              },
                            },
                          ],
                          "Version": "2012-10-17",
                        },
                        "attrArn": "\${Token[TOKEN.670]}",
                        "attrRoleId": "\${Token[TOKEN.671]}",
                        "cfnOptions": {},
                        "cfnResourceType": "AWS::IAM::Role",
                        "dependsOn": Set {},
                        "description": undefined,
                        "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.Resource.LogicalID.669]}",
                        "managedPolicyArns": [
                          "#{Token[TOKEN.668]}",
                        ],
                        "maxSessionDuration": undefined,
                        "node": Node {
                          "_children": {},
                          "_context": {},
                          "_dependencies": Set {},
                          "_locked": false,
                          "_metadata": [
                            {
                              "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.Resource.LogicalID.669]}",
                              "trace": undefined,
                              "type": "aws:cdk:logicalId",
                            },
                          ],
                          "_validations": [],
                          "host": [Circular],
                          "id": "Resource",
                          "scope": [Circular],
                        },
                        "path": undefined,
                        "permissionsBoundary": undefined,
                        "policies": undefined,
                        "rawOverrides": {},
                        "roleName": "\${Token[TOKEN.665]}",
                        "stack": [Circular],
                        "tags": TagManager {
                          "initialTagPriority": 50,
                          "priorities": Map {},
                          "renderedTags": "<unresolved-lazy>",
                          "resourceTypeName": "AWS::IAM::Role",
                          "tagFormatter": StandardFormatter {},
                          "tagPropertyName": "tags",
                          "tags": Map {},
                        },
                        Symbol(@aws-cdk/core.DependableTrait): {
                          "dependencyRoots": [
                            [Circular],
                          ],
                        },
                      },
                    },
                    "_context": {},
                    "_dependencies": Set {},
                    "_locked": false,
                    "_metadata": [],
                    "_validations": [
                      {
                        "validate": [Function],
                      },
                    ],
                    "host": [Circular],
                    "id": "ServiceRole",
                    "scope": [Circular],
                  },
                  "permissionsBoundary": undefined,
                  "physicalName": "\${Token[TOKEN.665]}",
                  "policyFragment": PrincipalPolicyFragment {
                    "conditions": {},
                    "principalJson": {
                      "AWS": [
                        "\${Token[TOKEN.672]}",
                      ],
                    },
                  },
                  "principalAccount": "\${Token[AWS.AccountId.2]}",
                  "roleArn": "\${Token[TOKEN.672]}",
                  "roleName": "\${Token[TOKEN.674]}",
                  "stack": [Circular],
                  Symbol(@aws-cdk/core.DependableTrait): {
                    "dependencyRoots": [
                      [Circular],
                    ],
                  },
                },
                "hashMixins": [],
                "node": Node {
                  "_children": {
                    "Code": Asset {
                      "assetHash": "903be65b9594a9f17d7120273620367e7830b6d087fc9591f31dc5a080049e46",
                      "assetPath": "asset.903be65b9594a9f17d7120273620367e7830b6d087fc9591f31dc5a080049e46",
                      "bucket": Import {
                        "_allowCrossEnvironment": false,
                        "_physicalName": undefined,
                        "autoCreatePolicy": false,
                        "bucketArn": "arn:\${Token[AWS.Partition.5]}:s3:::\${Token[TOKEN.676]}",
                        "bucketDomainName": "\${Token[TOKEN.676]}.s3.\${Token[AWS.URLSuffix.3]}",
                        "bucketDualStackDomainName": "\${Token[TOKEN.676]}.s3.dualstack.\${Token[AWS.Region.6]}.\${Token[AWS.URLSuffix.3]}",
                        "bucketName": "\${Token[TOKEN.676]}",
                        "bucketRegionalDomainName": "\${Token[TOKEN.676]}.s3.\${Token[AWS.Region.6]}.\${Token[AWS.URLSuffix.3]}",
                        "bucketWebsiteDomainName": "\${Token[TOKEN.676]}.\${Token[TOKEN.678]}",
                        "bucketWebsiteNewUrlFormat": false,
                        "bucketWebsiteUrl": "http://\${Token[TOKEN.676]}.\${Token[TOKEN.678]}",
                        "disallowPublicAccess": false,
                        "encryptionKey": undefined,
                        "env": {
                          "account": "\${Token[AWS.AccountId.2]}",
                          "region": "\${Token[AWS.Region.6]}",
                        },
                        "isWebsite": false,
                        "node": Node {
                          "_children": {},
                          "_context": {},
                          "_dependencies": Set {},
                          "_locked": false,
                          "_metadata": [],
                          "_validations": [
                            {
                              "validate": [Function],
                            },
                          ],
                          "host": [Circular],
                          "id": "AssetBucket",
                          "scope": [Circular],
                        },
                        "notificationsHandlerRole": undefined,
                        "physicalName": "\${Token[TOKEN.679]}",
                        "policy": undefined,
                        "stack": [Circular],
                        Symbol(@aws-cdk/core.DependableTrait): {
                          "dependencyRoots": [
                            [Circular],
                          ],
                        },
                      },
                      "httpUrl": "\${Token[TOKEN.675]}",
                      "isBundled": false,
                      "isFile": false,
                      "isZipArchive": true,
                      "node": Node {
                        "_children": {
                          "AssetBucket": Import {
                            "_allowCrossEnvironment": false,
                            "_physicalName": undefined,
                            "autoCreatePolicy": false,
                            "bucketArn": "arn:\${Token[AWS.Partition.5]}:s3:::\${Token[TOKEN.676]}",
                            "bucketDomainName": "\${Token[TOKEN.676]}.s3.\${Token[AWS.URLSuffix.3]}",
                            "bucketDualStackDomainName": "\${Token[TOKEN.676]}.s3.dualstack.\${Token[AWS.Region.6]}.\${Token[AWS.URLSuffix.3]}",
                            "bucketName": "\${Token[TOKEN.676]}",
                            "bucketRegionalDomainName": "\${Token[TOKEN.676]}.s3.\${Token[AWS.Region.6]}.\${Token[AWS.URLSuffix.3]}",
                            "bucketWebsiteDomainName": "\${Token[TOKEN.676]}.\${Token[TOKEN.678]}",
                            "bucketWebsiteNewUrlFormat": false,
                            "bucketWebsiteUrl": "http://\${Token[TOKEN.676]}.\${Token[TOKEN.678]}",
                            "disallowPublicAccess": false,
                            "encryptionKey": undefined,
                            "env": {
                              "account": "\${Token[AWS.AccountId.2]}",
                              "region": "\${Token[AWS.Region.6]}",
                            },
                            "isWebsite": false,
                            "node": Node {
                              "_children": {},
                              "_context": {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": [],
                              "_validations": [
                                {
                                  "validate": [Function],
                                },
                              ],
                              "host": [Circular],
                              "id": "AssetBucket",
                              "scope": [Circular],
                            },
                            "notificationsHandlerRole": undefined,
                            "physicalName": "\${Token[TOKEN.679]}",
                            "policy": undefined,
                            "stack": [Circular],
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                          "Stage": AssetStaging {
                            "absoluteStagedPath": "/private/var/folders/tn/799yyvm92g74fj_thj2z7w140000gr/T/cdk-test-app-WFT8EN/asset.903be65b9594a9f17d7120273620367e7830b6d087fc9591f31dc5a080049e46",
                            "assetHash": "903be65b9594a9f17d7120273620367e7830b6d087fc9591f31dc5a080049e46",
                            "assetOutdir": "/private/var/folders/tn/799yyvm92g74fj_thj2z7w140000gr/T/cdk-test-app-WFT8EN",
                            "cacheKey": "d22374b7156fb41ff718678ed8dd7c65d1393bc2a81b4585d0905e2a290f281a",
                            "customSourceFingerprint": undefined,
                            "fingerprintOptions": {
                              "assetHash": undefined,
                              "exclude": [
                                "*.ts",
                              ],
                              "extraHash": undefined,
                              "follow": undefined,
                              "path": "/Users/rverma/dev/aws/nsl-saas-accelerator/packages/constructs/node_modules/aws-cdk-lib/custom-resources/lib/provider-framework/runtime",
                              "sourcePath": "/Users/rverma/dev/aws/nsl-saas-accelerator/packages/constructs/node_modules/aws-cdk-lib/custom-resources/lib/provider-framework/runtime",
                            },
                            "hashType": "source",
                            "isArchive": true,
                            "node": Node {
                              "_children": {},
                              "_context": {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": [],
                              "_validations": [],
                              "host": [Circular],
                              "id": "Stage",
                              "scope": [Circular],
                            },
                            "packaging": "zip",
                            "sourcePath": "/Users/rverma/dev/aws/nsl-saas-accelerator/packages/constructs/node_modules/aws-cdk-lib/custom-resources/lib/provider-framework/runtime",
                            "sourceStats": Stats {
                              "atime": 2023-04-19T02:38:43.261Z,
                              "atimeMs": 1681871923261.3042,
                              "birthtime": 2023-04-19T02:37:35.005Z,
                              "birthtimeMs": 1681871855004.6274,
                              "blksize": 4096,
                              "blocks": 0,
                              "ctime": 2023-04-19T02:37:35.007Z,
                              "ctimeMs": 1681871855007.1067,
                              "dev": 16777233,
                              "gid": 20,
                              "ino": 64198660,
                              "mode": 16877,
                              "mtime": 2023-04-19T02:37:35.007Z,
                              "mtimeMs": 1681871855007.1067,
                              "nlink": 12,
                              "rdev": 0,
                              "size": 384,
                              "uid": 504,
                            },
                            "stagedPath": "/private/var/folders/tn/799yyvm92g74fj_thj2z7w140000gr/T/cdk-test-app-WFT8EN/asset.903be65b9594a9f17d7120273620367e7830b6d087fc9591f31dc5a080049e46",
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                        },
                        "_context": {},
                        "_dependencies": Set {},
                        "_locked": false,
                        "_metadata": [],
                        "_validations": [],
                        "host": [Circular],
                        "id": "Code",
                        "scope": [Circular],
                      },
                      "s3BucketName": "\${Token[TOKEN.676]}",
                      "s3ObjectKey": "REPLACED-GENERATED-NAME.zip",
                      "s3ObjectUrl": "\${Token[TOKEN.677]}",
                      "s3Url": "\${Token[TOKEN.675]}",
                      "sourceHash": "903be65b9594a9f17d7120273620367e7830b6d087fc9591f31dc5a080049e46",
                      Symbol(@aws-cdk/core.DependableTrait): {
                        "dependencyRoots": [
                          [Circular],
                        ],
                      },
                    },
                    "Resource": CfnFunction {
                      "_cfnProperties": {
                        "architectures": undefined,
                        "code": {
                          "imageUri": undefined,
                          "s3Bucket": "\${Token[TOKEN.676]}",
                          "s3Key": "REPLACED-GENERATED-NAME.zip",
                          "s3ObjectVersion": undefined,
                          "zipFile": undefined,
                        },
                        "codeSigningConfigArn": undefined,
                        "deadLetterConfig": undefined,
                        "description": "AWS CDK resource provider framework - onEvent (Default/codeCommitSecret/Custom::GitopsSecrets)",
                        "environment": "<unresolved-lazy>",
                        "ephemeralStorage": undefined,
                        "fileSystemConfigs": undefined,
                        "functionName": "\${Token[TOKEN.664]}",
                        "handler": "framework.onEvent",
                        "imageConfig": undefined,
                        "kmsKeyArn": undefined,
                        "layers": [
                          "#{Token[TOKEN.680]}",
                        ],
                        "memorySize": undefined,
                        "packageType": undefined,
                        "reservedConcurrentExecutions": undefined,
                        "role": "\${Token[TOKEN.672]}",
                        "runtime": "nodejs14.x",
                        "runtimeManagementConfig": undefined,
                        "timeout": 900,
                        "vpcConfig": undefined,
                      },
                      "architectures": undefined,
                      "attrArn": "\${Token[TOKEN.682]}",
                      "attrSnapStartResponseApplyOn": "\${Token[TOKEN.683]}",
                      "attrSnapStartResponseOptimizationStatus": "\${Token[TOKEN.684]}",
                      "cfnOptions": {},
                      "cfnResourceType": "AWS::Lambda::Function",
                      "code": {
                        "imageUri": undefined,
                        "s3Bucket": "\${Token[TOKEN.676]}",
                        "s3Key": "REPLACED-GENERATED-NAME.zip",
                        "s3ObjectVersion": undefined,
                        "zipFile": undefined,
                      },
                      "codeSigningConfigArn": undefined,
                      "deadLetterConfig": undefined,
                      "dependsOn": Set {},
                      "description": "AWS CDK resource provider framework - onEvent (Default/codeCommitSecret/Custom::GitopsSecrets)",
                      "environment": "<unresolved-lazy>",
                      "ephemeralStorage": undefined,
                      "fileSystemConfigs": undefined,
                      "functionName": "\${Token[TOKEN.664]}",
                      "handler": "framework.onEvent",
                      "imageConfig": undefined,
                      "kmsKeyArn": undefined,
                      "layers": [
                        "#{Token[TOKEN.680]}",
                      ],
                      "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.Resource.LogicalID.681]}",
                      "memorySize": undefined,
                      "node": Node {
                        "_children": {},
                        "_context": {},
                        "_dependencies": Set {
                          Role {
                            "_allowCrossEnvironment": false,
                            "_didSplit": false,
                            "_physicalName": undefined,
                            "_roleId": "\${Token[TOKEN.671]}",
                            "assumeRoleAction": "sts:AssumeRole",
                            "assumeRolePolicy": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "\${Token[lambda.amazonaws.com.666]}",
                                  },
                                },
                              ],
                              "Version": "2012-10-17",
                            },
                            "attachedPolicies": AttachedPolicies {
                              "policies": [
                                Policy {
                                  "_allowCrossEnvironment": false,
                                  "_physicalName": "\${Token[TOKEN.688]}",
                                  "_policyName": "\${Token[TOKEN.688]}",
                                  "document": {
                                    "Statement": [
                                      {
                                        "Action": "lambda:InvokeFunction",
                                        "Effect": "Allow",
                                        "Resource": [
                                          "\${Token[TOKEN.658]}",
                                          "\${Token[TOKEN.658]}:*",
                                        ],
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "env": {
                                    "account": "\${Token[AWS.AccountId.2]}",
                                    "region": "\${Token[AWS.Region.6]}",
                                  },
                                  "force": false,
                                  "grantPrincipal": PolicyGrantPrincipal {
                                    "_policy": [Circular],
                                    "assumeRoleAction": "sts:AssumeRole",
                                    "grantPrincipal": [Circular],
                                    "principalAccount": "\${Token[AWS.AccountId.2]}",
                                  },
                                  "groups": [],
                                  "node": Node {
                                    "_children": {
                                      "Resource": CfnPolicyConditional {
                                        "_cfnProperties": {
                                          "groups": [
                                            "#{Token[TOKEN.691]}",
                                          ],
                                          "policyDocument": {
                                            "Statement": [
                                              {
                                                "Action": "lambda:InvokeFunction",
                                                "Effect": "Allow",
                                                "Resource": [
                                                  "\${Token[TOKEN.658]}",
                                                  "\${Token[TOKEN.658]}:*",
                                                ],
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "policyName": "\${Token[TOKEN.688]}",
                                          "roles": [
                                            "#{Token[TOKEN.689]}",
                                          ],
                                          "users": [
                                            "#{Token[TOKEN.690]}",
                                          ],
                                        },
                                        "cfnOptions": {},
                                        "cfnResourceType": "AWS::IAM::Policy",
                                        "dependsOn": Set {},
                                        "groups": [
                                          "#{Token[TOKEN.691]}",
                                        ],
                                        "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                        "node": Node {
                                          "_children": {},
                                          "_context": {},
                                          "_dependencies": Set {},
                                          "_locked": false,
                                          "_metadata": [
                                            {
                                              "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                              "trace": undefined,
                                              "type": "aws:cdk:logicalId",
                                            },
                                          ],
                                          "_validations": [],
                                          "host": [Circular],
                                          "id": "Resource",
                                          "scope": [Circular],
                                        },
                                        "policyDocument": {
                                          "Statement": [
                                            {
                                              "Action": "lambda:InvokeFunction",
                                              "Effect": "Allow",
                                              "Resource": [
                                                "\${Token[TOKEN.658]}",
                                                "\${Token[TOKEN.658]}:*",
                                              ],
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "policyName": "\${Token[TOKEN.688]}",
                                        "rawOverrides": {},
                                        "roles": [
                                          "#{Token[TOKEN.689]}",
                                        ],
                                        "stack": [Circular],
                                        "users": [
                                          "#{Token[TOKEN.690]}",
                                        ],
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [
                                            [Circular],
                                          ],
                                        },
                                      },
                                    },
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [],
                                    "_validations": [
                                      {
                                        "validate": [Function],
                                      },
                                    ],
                                    "host": [Circular],
                                    "id": "DefaultPolicy",
                                    "scope": [Circular],
                                  },
                                  "physicalName": "\${Token[TOKEN.688]}",
                                  "referenceTaken": false,
                                  "roles": [
                                    [Circular],
                                  ],
                                  "stack": [Circular],
                                  "users": [],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                              ],
                            },
                            "defaultPolicy": Policy {
                              "_allowCrossEnvironment": false,
                              "_physicalName": "\${Token[TOKEN.688]}",
                              "_policyName": "\${Token[TOKEN.688]}",
                              "document": {
                                "Statement": [
                                  {
                                    "Action": "lambda:InvokeFunction",
                                    "Effect": "Allow",
                                    "Resource": [
                                      "\${Token[TOKEN.658]}",
                                      "\${Token[TOKEN.658]}:*",
                                    ],
                                  },
                                ],
                                "Version": "2012-10-17",
                              },
                              "env": {
                                "account": "\${Token[AWS.AccountId.2]}",
                                "region": "\${Token[AWS.Region.6]}",
                              },
                              "force": false,
                              "grantPrincipal": PolicyGrantPrincipal {
                                "_policy": [Circular],
                                "assumeRoleAction": "sts:AssumeRole",
                                "grantPrincipal": [Circular],
                                "principalAccount": "\${Token[AWS.AccountId.2]}",
                              },
                              "groups": [],
                              "node": Node {
                                "_children": {
                                  "Resource": CfnPolicyConditional {
                                    "_cfnProperties": {
                                      "groups": [
                                        "#{Token[TOKEN.691]}",
                                      ],
                                      "policyDocument": {
                                        "Statement": [
                                          {
                                            "Action": "lambda:InvokeFunction",
                                            "Effect": "Allow",
                                            "Resource": [
                                              "\${Token[TOKEN.658]}",
                                              "\${Token[TOKEN.658]}:*",
                                            ],
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "policyName": "\${Token[TOKEN.688]}",
                                      "roles": [
                                        "#{Token[TOKEN.689]}",
                                      ],
                                      "users": [
                                        "#{Token[TOKEN.690]}",
                                      ],
                                    },
                                    "cfnOptions": {},
                                    "cfnResourceType": "AWS::IAM::Policy",
                                    "dependsOn": Set {},
                                    "groups": [
                                      "#{Token[TOKEN.691]}",
                                    ],
                                    "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                    "node": Node {
                                      "_children": {},
                                      "_context": {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": [
                                        {
                                          "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                          "trace": undefined,
                                          "type": "aws:cdk:logicalId",
                                        },
                                      ],
                                      "_validations": [],
                                      "host": [Circular],
                                      "id": "Resource",
                                      "scope": [Circular],
                                    },
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "lambda:InvokeFunction",
                                          "Effect": "Allow",
                                          "Resource": [
                                            "\${Token[TOKEN.658]}",
                                            "\${Token[TOKEN.658]}:*",
                                          ],
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "policyName": "\${Token[TOKEN.688]}",
                                    "rawOverrides": {},
                                    "roles": [
                                      "#{Token[TOKEN.689]}",
                                    ],
                                    "stack": [Circular],
                                    "users": [
                                      "#{Token[TOKEN.690]}",
                                    ],
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [
                                        [Circular],
                                      ],
                                    },
                                  },
                                },
                                "_context": {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": [],
                                "_validations": [
                                  {
                                    "validate": [Function],
                                  },
                                ],
                                "host": [Circular],
                                "id": "DefaultPolicy",
                                "scope": [Circular],
                              },
                              "physicalName": "\${Token[TOKEN.688]}",
                              "referenceTaken": false,
                              "roles": [
                                [Circular],
                              ],
                              "stack": [Circular],
                              "users": [],
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [
                                  [Circular],
                                ],
                              },
                            },
                            "dependables": Map {
                              {
                                "Action": "lambda:InvokeFunction",
                                "Effect": "Allow",
                                "Resource": [
                                  "\${Token[TOKEN.658]}",
                                  "\${Token[TOKEN.658]}:*",
                                ],
                              } => DependencyGroup {
                                "_deps": [],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [],
                                },
                              },
                            },
                            "env": {
                              "account": "\${Token[AWS.AccountId.2]}",
                              "region": "\${Token[AWS.Region.6]}",
                            },
                            "grantPrincipal": [Circular],
                            "inlinePolicies": {},
                            "managedPolicies": [
                              AwsManagedPolicy {
                                "managedPolicyArn": "arn:\${Token[AWS.Partition.5]}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                              },
                            ],
                            "node": Node {
                              "_children": {
                                "DefaultPolicy": Policy {
                                  "_allowCrossEnvironment": false,
                                  "_physicalName": "\${Token[TOKEN.688]}",
                                  "_policyName": "\${Token[TOKEN.688]}",
                                  "document": {
                                    "Statement": [
                                      {
                                        "Action": "lambda:InvokeFunction",
                                        "Effect": "Allow",
                                        "Resource": [
                                          "\${Token[TOKEN.658]}",
                                          "\${Token[TOKEN.658]}:*",
                                        ],
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "env": {
                                    "account": "\${Token[AWS.AccountId.2]}",
                                    "region": "\${Token[AWS.Region.6]}",
                                  },
                                  "force": false,
                                  "grantPrincipal": PolicyGrantPrincipal {
                                    "_policy": [Circular],
                                    "assumeRoleAction": "sts:AssumeRole",
                                    "grantPrincipal": [Circular],
                                    "principalAccount": "\${Token[AWS.AccountId.2]}",
                                  },
                                  "groups": [],
                                  "node": Node {
                                    "_children": {
                                      "Resource": CfnPolicyConditional {
                                        "_cfnProperties": {
                                          "groups": [
                                            "#{Token[TOKEN.691]}",
                                          ],
                                          "policyDocument": {
                                            "Statement": [
                                              {
                                                "Action": "lambda:InvokeFunction",
                                                "Effect": "Allow",
                                                "Resource": [
                                                  "\${Token[TOKEN.658]}",
                                                  "\${Token[TOKEN.658]}:*",
                                                ],
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "policyName": "\${Token[TOKEN.688]}",
                                          "roles": [
                                            "#{Token[TOKEN.689]}",
                                          ],
                                          "users": [
                                            "#{Token[TOKEN.690]}",
                                          ],
                                        },
                                        "cfnOptions": {},
                                        "cfnResourceType": "AWS::IAM::Policy",
                                        "dependsOn": Set {},
                                        "groups": [
                                          "#{Token[TOKEN.691]}",
                                        ],
                                        "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                        "node": Node {
                                          "_children": {},
                                          "_context": {},
                                          "_dependencies": Set {},
                                          "_locked": false,
                                          "_metadata": [
                                            {
                                              "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                              "trace": undefined,
                                              "type": "aws:cdk:logicalId",
                                            },
                                          ],
                                          "_validations": [],
                                          "host": [Circular],
                                          "id": "Resource",
                                          "scope": [Circular],
                                        },
                                        "policyDocument": {
                                          "Statement": [
                                            {
                                              "Action": "lambda:InvokeFunction",
                                              "Effect": "Allow",
                                              "Resource": [
                                                "\${Token[TOKEN.658]}",
                                                "\${Token[TOKEN.658]}:*",
                                              ],
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "policyName": "\${Token[TOKEN.688]}",
                                        "rawOverrides": {},
                                        "roles": [
                                          "#{Token[TOKEN.689]}",
                                        ],
                                        "stack": [Circular],
                                        "users": [
                                          "#{Token[TOKEN.690]}",
                                        ],
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [
                                            [Circular],
                                          ],
                                        },
                                      },
                                    },
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [],
                                    "_validations": [
                                      {
                                        "validate": [Function],
                                      },
                                    ],
                                    "host": [Circular],
                                    "id": "DefaultPolicy",
                                    "scope": [Circular],
                                  },
                                  "physicalName": "\${Token[TOKEN.688]}",
                                  "referenceTaken": false,
                                  "roles": [
                                    [Circular],
                                  ],
                                  "stack": [Circular],
                                  "users": [],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                                "ImportServiceRole": ImportedRole {
                                  "_allowCrossEnvironment": false,
                                  "_physicalName": undefined,
                                  "assumeRoleAction": "sts:AssumeRole",
                                  "attachedPolicies": AttachedPolicies {
                                    "policies": [],
                                  },
                                  "defaultPolicyName": undefined,
                                  "env": {
                                    "account": "\${Token[AWS.AccountId.2]}",
                                    "region": "\${Token[AWS.Region.6]}",
                                  },
                                  "grantPrincipal": [Circular],
                                  "node": Node {
                                    "_children": {},
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [],
                                    "_validations": [],
                                    "host": [Circular],
                                    "id": "ImportServiceRole",
                                    "scope": [Circular],
                                  },
                                  "physicalName": "\${Token[TOKEN.667]}",
                                  "policyFragment": PrincipalPolicyFragment {
                                    "conditions": {},
                                    "principalJson": {
                                      "AWS": [
                                        "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                                      ],
                                    },
                                  },
                                  "principalAccount": "\${Token[AWS.AccountId.2]}",
                                  "roleArn": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                                  "roleName": "ServiceRole",
                                  "stack": [Circular],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                                "Resource": CfnRole {
                                  "_cfnProperties": {
                                    "assumeRolePolicyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "sts:AssumeRole",
                                          "Effect": "Allow",
                                          "Principal": {
                                            "Service": "\${Token[lambda.amazonaws.com.666]}",
                                          },
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "description": undefined,
                                    "managedPolicyArns": [
                                      "#{Token[TOKEN.668]}",
                                    ],
                                    "maxSessionDuration": undefined,
                                    "path": undefined,
                                    "permissionsBoundary": undefined,
                                    "policies": undefined,
                                    "roleName": "\${Token[TOKEN.665]}",
                                  },
                                  "assumeRolePolicyDocument": {
                                    "Statement": [
                                      {
                                        "Action": "sts:AssumeRole",
                                        "Effect": "Allow",
                                        "Principal": {
                                          "Service": "\${Token[lambda.amazonaws.com.666]}",
                                        },
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "attrArn": "\${Token[TOKEN.670]}",
                                  "attrRoleId": "\${Token[TOKEN.671]}",
                                  "cfnOptions": {},
                                  "cfnResourceType": "AWS::IAM::Role",
                                  "dependsOn": Set {},
                                  "description": undefined,
                                  "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.Resource.LogicalID.669]}",
                                  "managedPolicyArns": [
                                    "#{Token[TOKEN.668]}",
                                  ],
                                  "maxSessionDuration": undefined,
                                  "node": Node {
                                    "_children": {},
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [
                                      {
                                        "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.Resource.LogicalID.669]}",
                                        "trace": undefined,
                                        "type": "aws:cdk:logicalId",
                                      },
                                    ],
                                    "_validations": [],
                                    "host": [Circular],
                                    "id": "Resource",
                                    "scope": [Circular],
                                  },
                                  "path": undefined,
                                  "permissionsBoundary": undefined,
                                  "policies": undefined,
                                  "rawOverrides": {},
                                  "roleName": "\${Token[TOKEN.665]}",
                                  "stack": [Circular],
                                  "tags": TagManager {
                                    "initialTagPriority": 50,
                                    "priorities": Map {},
                                    "renderedTags": "<unresolved-lazy>",
                                    "resourceTypeName": "AWS::IAM::Role",
                                    "tagFormatter": StandardFormatter {},
                                    "tagPropertyName": "tags",
                                    "tags": Map {},
                                  },
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                              },
                              "_context": {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": [],
                              "_validations": [
                                {
                                  "validate": [Function],
                                },
                              ],
                              "host": [Circular],
                              "id": "ServiceRole",
                              "scope": [Circular],
                            },
                            "permissionsBoundary": undefined,
                            "physicalName": "\${Token[TOKEN.665]}",
                            "policyFragment": PrincipalPolicyFragment {
                              "conditions": {},
                              "principalJson": {
                                "AWS": [
                                  "\${Token[TOKEN.672]}",
                                ],
                              },
                            },
                            "principalAccount": "\${Token[AWS.AccountId.2]}",
                            "roleArn": "\${Token[TOKEN.672]}",
                            "roleName": "\${Token[TOKEN.674]}",
                            "stack": [Circular],
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                        },
                        "_locked": false,
                        "_metadata": [
                          {
                            "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.Resource.LogicalID.681]}",
                            "trace": undefined,
                            "type": "aws:cdk:logicalId",
                          },
                        ],
                        "_validations": [],
                        "host": [Circular],
                        "id": "Resource",
                        "scope": [Circular],
                      },
                      "packageType": undefined,
                      "rawOverrides": {},
                      "reservedConcurrentExecutions": undefined,
                      "role": "\${Token[TOKEN.672]}",
                      "runtime": "nodejs14.x",
                      "runtimeManagementConfig": undefined,
                      "snapStart": undefined,
                      "stack": [Circular],
                      "tags": TagManager {
                        "initialTagPriority": 50,
                        "priorities": Map {},
                        "renderedTags": "<unresolved-lazy>",
                        "resourceTypeName": "AWS::Lambda::Function",
                        "tagFormatter": StandardFormatter {},
                        "tagPropertyName": "tags",
                        "tags": Map {},
                      },
                      "timeout": 900,
                      "tracingConfig": undefined,
                      "vpcConfig": undefined,
                      Symbol(@aws-cdk/core.DependableTrait): {
                        "dependencyRoots": [
                          [Circular],
                        ],
                      },
                    },
                    "ServiceRole": Role {
                      "_allowCrossEnvironment": false,
                      "_didSplit": false,
                      "_physicalName": undefined,
                      "_roleId": "\${Token[TOKEN.671]}",
                      "assumeRoleAction": "sts:AssumeRole",
                      "assumeRolePolicy": {
                        "Statement": [
                          {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                              "Service": "\${Token[lambda.amazonaws.com.666]}",
                            },
                          },
                        ],
                        "Version": "2012-10-17",
                      },
                      "attachedPolicies": AttachedPolicies {
                        "policies": [
                          Policy {
                            "_allowCrossEnvironment": false,
                            "_physicalName": "\${Token[TOKEN.688]}",
                            "_policyName": "\${Token[TOKEN.688]}",
                            "document": {
                              "Statement": [
                                {
                                  "Action": "lambda:InvokeFunction",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "\${Token[TOKEN.658]}",
                                    "\${Token[TOKEN.658]}:*",
                                  ],
                                },
                              ],
                              "Version": "2012-10-17",
                            },
                            "env": {
                              "account": "\${Token[AWS.AccountId.2]}",
                              "region": "\${Token[AWS.Region.6]}",
                            },
                            "force": false,
                            "grantPrincipal": PolicyGrantPrincipal {
                              "_policy": [Circular],
                              "assumeRoleAction": "sts:AssumeRole",
                              "grantPrincipal": [Circular],
                              "principalAccount": "\${Token[AWS.AccountId.2]}",
                            },
                            "groups": [],
                            "node": Node {
                              "_children": {
                                "Resource": CfnPolicyConditional {
                                  "_cfnProperties": {
                                    "groups": [
                                      "#{Token[TOKEN.691]}",
                                    ],
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "lambda:InvokeFunction",
                                          "Effect": "Allow",
                                          "Resource": [
                                            "\${Token[TOKEN.658]}",
                                            "\${Token[TOKEN.658]}:*",
                                          ],
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "policyName": "\${Token[TOKEN.688]}",
                                    "roles": [
                                      "#{Token[TOKEN.689]}",
                                    ],
                                    "users": [
                                      "#{Token[TOKEN.690]}",
                                    ],
                                  },
                                  "cfnOptions": {},
                                  "cfnResourceType": "AWS::IAM::Policy",
                                  "dependsOn": Set {},
                                  "groups": [
                                    "#{Token[TOKEN.691]}",
                                  ],
                                  "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                  "node": Node {
                                    "_children": {},
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [
                                      {
                                        "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                        "trace": undefined,
                                        "type": "aws:cdk:logicalId",
                                      },
                                    ],
                                    "_validations": [],
                                    "host": [Circular],
                                    "id": "Resource",
                                    "scope": [Circular],
                                  },
                                  "policyDocument": {
                                    "Statement": [
                                      {
                                        "Action": "lambda:InvokeFunction",
                                        "Effect": "Allow",
                                        "Resource": [
                                          "\${Token[TOKEN.658]}",
                                          "\${Token[TOKEN.658]}:*",
                                        ],
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "policyName": "\${Token[TOKEN.688]}",
                                  "rawOverrides": {},
                                  "roles": [
                                    "#{Token[TOKEN.689]}",
                                  ],
                                  "stack": [Circular],
                                  "users": [
                                    "#{Token[TOKEN.690]}",
                                  ],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                              },
                              "_context": {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": [],
                              "_validations": [
                                {
                                  "validate": [Function],
                                },
                              ],
                              "host": [Circular],
                              "id": "DefaultPolicy",
                              "scope": [Circular],
                            },
                            "physicalName": "\${Token[TOKEN.688]}",
                            "referenceTaken": false,
                            "roles": [
                              [Circular],
                            ],
                            "stack": [Circular],
                            "users": [],
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                        ],
                      },
                      "defaultPolicy": Policy {
                        "_allowCrossEnvironment": false,
                        "_physicalName": "\${Token[TOKEN.688]}",
                        "_policyName": "\${Token[TOKEN.688]}",
                        "document": {
                          "Statement": [
                            {
                              "Action": "lambda:InvokeFunction",
                              "Effect": "Allow",
                              "Resource": [
                                "\${Token[TOKEN.658]}",
                                "\${Token[TOKEN.658]}:*",
                              ],
                            },
                          ],
                          "Version": "2012-10-17",
                        },
                        "env": {
                          "account": "\${Token[AWS.AccountId.2]}",
                          "region": "\${Token[AWS.Region.6]}",
                        },
                        "force": false,
                        "grantPrincipal": PolicyGrantPrincipal {
                          "_policy": [Circular],
                          "assumeRoleAction": "sts:AssumeRole",
                          "grantPrincipal": [Circular],
                          "principalAccount": "\${Token[AWS.AccountId.2]}",
                        },
                        "groups": [],
                        "node": Node {
                          "_children": {
                            "Resource": CfnPolicyConditional {
                              "_cfnProperties": {
                                "groups": [
                                  "#{Token[TOKEN.691]}",
                                ],
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "lambda:InvokeFunction",
                                      "Effect": "Allow",
                                      "Resource": [
                                        "\${Token[TOKEN.658]}",
                                        "\${Token[TOKEN.658]}:*",
                                      ],
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "policyName": "\${Token[TOKEN.688]}",
                                "roles": [
                                  "#{Token[TOKEN.689]}",
                                ],
                                "users": [
                                  "#{Token[TOKEN.690]}",
                                ],
                              },
                              "cfnOptions": {},
                              "cfnResourceType": "AWS::IAM::Policy",
                              "dependsOn": Set {},
                              "groups": [
                                "#{Token[TOKEN.691]}",
                              ],
                              "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                              "node": Node {
                                "_children": {},
                                "_context": {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": [
                                  {
                                    "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                    "trace": undefined,
                                    "type": "aws:cdk:logicalId",
                                  },
                                ],
                                "_validations": [],
                                "host": [Circular],
                                "id": "Resource",
                                "scope": [Circular],
                              },
                              "policyDocument": {
                                "Statement": [
                                  {
                                    "Action": "lambda:InvokeFunction",
                                    "Effect": "Allow",
                                    "Resource": [
                                      "\${Token[TOKEN.658]}",
                                      "\${Token[TOKEN.658]}:*",
                                    ],
                                  },
                                ],
                                "Version": "2012-10-17",
                              },
                              "policyName": "\${Token[TOKEN.688]}",
                              "rawOverrides": {},
                              "roles": [
                                "#{Token[TOKEN.689]}",
                              ],
                              "stack": [Circular],
                              "users": [
                                "#{Token[TOKEN.690]}",
                              ],
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [
                                  [Circular],
                                ],
                              },
                            },
                          },
                          "_context": {},
                          "_dependencies": Set {},
                          "_locked": false,
                          "_metadata": [],
                          "_validations": [
                            {
                              "validate": [Function],
                            },
                          ],
                          "host": [Circular],
                          "id": "DefaultPolicy",
                          "scope": [Circular],
                        },
                        "physicalName": "\${Token[TOKEN.688]}",
                        "referenceTaken": false,
                        "roles": [
                          [Circular],
                        ],
                        "stack": [Circular],
                        "users": [],
                        Symbol(@aws-cdk/core.DependableTrait): {
                          "dependencyRoots": [
                            [Circular],
                          ],
                        },
                      },
                      "dependables": Map {
                        {
                          "Action": "lambda:InvokeFunction",
                          "Effect": "Allow",
                          "Resource": [
                            "\${Token[TOKEN.658]}",
                            "\${Token[TOKEN.658]}:*",
                          ],
                        } => DependencyGroup {
                          "_deps": [],
                          Symbol(@aws-cdk/core.DependableTrait): {
                            "dependencyRoots": [],
                          },
                        },
                      },
                      "env": {
                        "account": "\${Token[AWS.AccountId.2]}",
                        "region": "\${Token[AWS.Region.6]}",
                      },
                      "grantPrincipal": [Circular],
                      "inlinePolicies": {},
                      "managedPolicies": [
                        AwsManagedPolicy {
                          "managedPolicyArn": "arn:\${Token[AWS.Partition.5]}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                        },
                      ],
                      "node": Node {
                        "_children": {
                          "DefaultPolicy": Policy {
                            "_allowCrossEnvironment": false,
                            "_physicalName": "\${Token[TOKEN.688]}",
                            "_policyName": "\${Token[TOKEN.688]}",
                            "document": {
                              "Statement": [
                                {
                                  "Action": "lambda:InvokeFunction",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "\${Token[TOKEN.658]}",
                                    "\${Token[TOKEN.658]}:*",
                                  ],
                                },
                              ],
                              "Version": "2012-10-17",
                            },
                            "env": {
                              "account": "\${Token[AWS.AccountId.2]}",
                              "region": "\${Token[AWS.Region.6]}",
                            },
                            "force": false,
                            "grantPrincipal": PolicyGrantPrincipal {
                              "_policy": [Circular],
                              "assumeRoleAction": "sts:AssumeRole",
                              "grantPrincipal": [Circular],
                              "principalAccount": "\${Token[AWS.AccountId.2]}",
                            },
                            "groups": [],
                            "node": Node {
                              "_children": {
                                "Resource": CfnPolicyConditional {
                                  "_cfnProperties": {
                                    "groups": [
                                      "#{Token[TOKEN.691]}",
                                    ],
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "lambda:InvokeFunction",
                                          "Effect": "Allow",
                                          "Resource": [
                                            "\${Token[TOKEN.658]}",
                                            "\${Token[TOKEN.658]}:*",
                                          ],
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "policyName": "\${Token[TOKEN.688]}",
                                    "roles": [
                                      "#{Token[TOKEN.689]}",
                                    ],
                                    "users": [
                                      "#{Token[TOKEN.690]}",
                                    ],
                                  },
                                  "cfnOptions": {},
                                  "cfnResourceType": "AWS::IAM::Policy",
                                  "dependsOn": Set {},
                                  "groups": [
                                    "#{Token[TOKEN.691]}",
                                  ],
                                  "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                  "node": Node {
                                    "_children": {},
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [
                                      {
                                        "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                        "trace": undefined,
                                        "type": "aws:cdk:logicalId",
                                      },
                                    ],
                                    "_validations": [],
                                    "host": [Circular],
                                    "id": "Resource",
                                    "scope": [Circular],
                                  },
                                  "policyDocument": {
                                    "Statement": [
                                      {
                                        "Action": "lambda:InvokeFunction",
                                        "Effect": "Allow",
                                        "Resource": [
                                          "\${Token[TOKEN.658]}",
                                          "\${Token[TOKEN.658]}:*",
                                        ],
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "policyName": "\${Token[TOKEN.688]}",
                                  "rawOverrides": {},
                                  "roles": [
                                    "#{Token[TOKEN.689]}",
                                  ],
                                  "stack": [Circular],
                                  "users": [
                                    "#{Token[TOKEN.690]}",
                                  ],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                              },
                              "_context": {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": [],
                              "_validations": [
                                {
                                  "validate": [Function],
                                },
                              ],
                              "host": [Circular],
                              "id": "DefaultPolicy",
                              "scope": [Circular],
                            },
                            "physicalName": "\${Token[TOKEN.688]}",
                            "referenceTaken": false,
                            "roles": [
                              [Circular],
                            ],
                            "stack": [Circular],
                            "users": [],
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                          "ImportServiceRole": ImportedRole {
                            "_allowCrossEnvironment": false,
                            "_physicalName": undefined,
                            "assumeRoleAction": "sts:AssumeRole",
                            "attachedPolicies": AttachedPolicies {
                              "policies": [],
                            },
                            "defaultPolicyName": undefined,
                            "env": {
                              "account": "\${Token[AWS.AccountId.2]}",
                              "region": "\${Token[AWS.Region.6]}",
                            },
                            "grantPrincipal": [Circular],
                            "node": Node {
                              "_children": {},
                              "_context": {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": [],
                              "_validations": [],
                              "host": [Circular],
                              "id": "ImportServiceRole",
                              "scope": [Circular],
                            },
                            "physicalName": "\${Token[TOKEN.667]}",
                            "policyFragment": PrincipalPolicyFragment {
                              "conditions": {},
                              "principalJson": {
                                "AWS": [
                                  "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                                ],
                              },
                            },
                            "principalAccount": "\${Token[AWS.AccountId.2]}",
                            "roleArn": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                            "roleName": "ServiceRole",
                            "stack": [Circular],
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                          "Resource": CfnRole {
                            "_cfnProperties": {
                              "assumeRolePolicyDocument": {
                                "Statement": [
                                  {
                                    "Action": "sts:AssumeRole",
                                    "Effect": "Allow",
                                    "Principal": {
                                      "Service": "\${Token[lambda.amazonaws.com.666]}",
                                    },
                                  },
                                ],
                                "Version": "2012-10-17",
                              },
                              "description": undefined,
                              "managedPolicyArns": [
                                "#{Token[TOKEN.668]}",
                              ],
                              "maxSessionDuration": undefined,
                              "path": undefined,
                              "permissionsBoundary": undefined,
                              "policies": undefined,
                              "roleName": "\${Token[TOKEN.665]}",
                            },
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "\${Token[lambda.amazonaws.com.666]}",
                                  },
                                },
                              ],
                              "Version": "2012-10-17",
                            },
                            "attrArn": "\${Token[TOKEN.670]}",
                            "attrRoleId": "\${Token[TOKEN.671]}",
                            "cfnOptions": {},
                            "cfnResourceType": "AWS::IAM::Role",
                            "dependsOn": Set {},
                            "description": undefined,
                            "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.Resource.LogicalID.669]}",
                            "managedPolicyArns": [
                              "#{Token[TOKEN.668]}",
                            ],
                            "maxSessionDuration": undefined,
                            "node": Node {
                              "_children": {},
                              "_context": {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": [
                                {
                                  "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.Resource.LogicalID.669]}",
                                  "trace": undefined,
                                  "type": "aws:cdk:logicalId",
                                },
                              ],
                              "_validations": [],
                              "host": [Circular],
                              "id": "Resource",
                              "scope": [Circular],
                            },
                            "path": undefined,
                            "permissionsBoundary": undefined,
                            "policies": undefined,
                            "rawOverrides": {},
                            "roleName": "\${Token[TOKEN.665]}",
                            "stack": [Circular],
                            "tags": TagManager {
                              "initialTagPriority": 50,
                              "priorities": Map {},
                              "renderedTags": "<unresolved-lazy>",
                              "resourceTypeName": "AWS::IAM::Role",
                              "tagFormatter": StandardFormatter {},
                              "tagPropertyName": "tags",
                              "tags": Map {},
                            },
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                        },
                        "_context": {},
                        "_dependencies": Set {},
                        "_locked": false,
                        "_metadata": [],
                        "_validations": [
                          {
                            "validate": [Function],
                          },
                        ],
                        "host": [Circular],
                        "id": "ServiceRole",
                        "scope": [Circular],
                      },
                      "permissionsBoundary": undefined,
                      "physicalName": "\${Token[TOKEN.665]}",
                      "policyFragment": PrincipalPolicyFragment {
                        "conditions": {},
                        "principalJson": {
                          "AWS": [
                            "\${Token[TOKEN.672]}",
                          ],
                        },
                      },
                      "principalAccount": "\${Token[AWS.AccountId.2]}",
                      "roleArn": "\${Token[TOKEN.672]}",
                      "roleName": "\${Token[TOKEN.674]}",
                      "stack": [Circular],
                      Symbol(@aws-cdk/core.DependableTrait): {
                        "dependencyRoots": [
                          [Circular],
                        ],
                      },
                    },
                  },
                  "_context": {},
                  "_dependencies": Set {},
                  "_locked": false,
                  "_metadata": [],
                  "_validations": [],
                  "host": [Circular],
                  "id": "framework-onEvent",
                  "scope": [Circular],
                },
                "permissionsNode": Node {
                  "_children": {
                    "Code": Asset {
                      "assetHash": "903be65b9594a9f17d7120273620367e7830b6d087fc9591f31dc5a080049e46",
                      "assetPath": "asset.903be65b9594a9f17d7120273620367e7830b6d087fc9591f31dc5a080049e46",
                      "bucket": Import {
                        "_allowCrossEnvironment": false,
                        "_physicalName": undefined,
                        "autoCreatePolicy": false,
                        "bucketArn": "arn:\${Token[AWS.Partition.5]}:s3:::\${Token[TOKEN.676]}",
                        "bucketDomainName": "\${Token[TOKEN.676]}.s3.\${Token[AWS.URLSuffix.3]}",
                        "bucketDualStackDomainName": "\${Token[TOKEN.676]}.s3.dualstack.\${Token[AWS.Region.6]}.\${Token[AWS.URLSuffix.3]}",
                        "bucketName": "\${Token[TOKEN.676]}",
                        "bucketRegionalDomainName": "\${Token[TOKEN.676]}.s3.\${Token[AWS.Region.6]}.\${Token[AWS.URLSuffix.3]}",
                        "bucketWebsiteDomainName": "\${Token[TOKEN.676]}.\${Token[TOKEN.678]}",
                        "bucketWebsiteNewUrlFormat": false,
                        "bucketWebsiteUrl": "http://\${Token[TOKEN.676]}.\${Token[TOKEN.678]}",
                        "disallowPublicAccess": false,
                        "encryptionKey": undefined,
                        "env": {
                          "account": "\${Token[AWS.AccountId.2]}",
                          "region": "\${Token[AWS.Region.6]}",
                        },
                        "isWebsite": false,
                        "node": Node {
                          "_children": {},
                          "_context": {},
                          "_dependencies": Set {},
                          "_locked": false,
                          "_metadata": [],
                          "_validations": [
                            {
                              "validate": [Function],
                            },
                          ],
                          "host": [Circular],
                          "id": "AssetBucket",
                          "scope": [Circular],
                        },
                        "notificationsHandlerRole": undefined,
                        "physicalName": "\${Token[TOKEN.679]}",
                        "policy": undefined,
                        "stack": [Circular],
                        Symbol(@aws-cdk/core.DependableTrait): {
                          "dependencyRoots": [
                            [Circular],
                          ],
                        },
                      },
                      "httpUrl": "\${Token[TOKEN.675]}",
                      "isBundled": false,
                      "isFile": false,
                      "isZipArchive": true,
                      "node": Node {
                        "_children": {
                          "AssetBucket": Import {
                            "_allowCrossEnvironment": false,
                            "_physicalName": undefined,
                            "autoCreatePolicy": false,
                            "bucketArn": "arn:\${Token[AWS.Partition.5]}:s3:::\${Token[TOKEN.676]}",
                            "bucketDomainName": "\${Token[TOKEN.676]}.s3.\${Token[AWS.URLSuffix.3]}",
                            "bucketDualStackDomainName": "\${Token[TOKEN.676]}.s3.dualstack.\${Token[AWS.Region.6]}.\${Token[AWS.URLSuffix.3]}",
                            "bucketName": "\${Token[TOKEN.676]}",
                            "bucketRegionalDomainName": "\${Token[TOKEN.676]}.s3.\${Token[AWS.Region.6]}.\${Token[AWS.URLSuffix.3]}",
                            "bucketWebsiteDomainName": "\${Token[TOKEN.676]}.\${Token[TOKEN.678]}",
                            "bucketWebsiteNewUrlFormat": false,
                            "bucketWebsiteUrl": "http://\${Token[TOKEN.676]}.\${Token[TOKEN.678]}",
                            "disallowPublicAccess": false,
                            "encryptionKey": undefined,
                            "env": {
                              "account": "\${Token[AWS.AccountId.2]}",
                              "region": "\${Token[AWS.Region.6]}",
                            },
                            "isWebsite": false,
                            "node": Node {
                              "_children": {},
                              "_context": {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": [],
                              "_validations": [
                                {
                                  "validate": [Function],
                                },
                              ],
                              "host": [Circular],
                              "id": "AssetBucket",
                              "scope": [Circular],
                            },
                            "notificationsHandlerRole": undefined,
                            "physicalName": "\${Token[TOKEN.679]}",
                            "policy": undefined,
                            "stack": [Circular],
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                          "Stage": AssetStaging {
                            "absoluteStagedPath": "/private/var/folders/tn/799yyvm92g74fj_thj2z7w140000gr/T/cdk-test-app-WFT8EN/asset.903be65b9594a9f17d7120273620367e7830b6d087fc9591f31dc5a080049e46",
                            "assetHash": "903be65b9594a9f17d7120273620367e7830b6d087fc9591f31dc5a080049e46",
                            "assetOutdir": "/private/var/folders/tn/799yyvm92g74fj_thj2z7w140000gr/T/cdk-test-app-WFT8EN",
                            "cacheKey": "d22374b7156fb41ff718678ed8dd7c65d1393bc2a81b4585d0905e2a290f281a",
                            "customSourceFingerprint": undefined,
                            "fingerprintOptions": {
                              "assetHash": undefined,
                              "exclude": [
                                "*.ts",
                              ],
                              "extraHash": undefined,
                              "follow": undefined,
                              "path": "/Users/rverma/dev/aws/nsl-saas-accelerator/packages/constructs/node_modules/aws-cdk-lib/custom-resources/lib/provider-framework/runtime",
                              "sourcePath": "/Users/rverma/dev/aws/nsl-saas-accelerator/packages/constructs/node_modules/aws-cdk-lib/custom-resources/lib/provider-framework/runtime",
                            },
                            "hashType": "source",
                            "isArchive": true,
                            "node": Node {
                              "_children": {},
                              "_context": {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": [],
                              "_validations": [],
                              "host": [Circular],
                              "id": "Stage",
                              "scope": [Circular],
                            },
                            "packaging": "zip",
                            "sourcePath": "/Users/rverma/dev/aws/nsl-saas-accelerator/packages/constructs/node_modules/aws-cdk-lib/custom-resources/lib/provider-framework/runtime",
                            "sourceStats": Stats {
                              "atime": 2023-04-19T02:38:43.261Z,
                              "atimeMs": 1681871923261.3042,
                              "birthtime": 2023-04-19T02:37:35.005Z,
                              "birthtimeMs": 1681871855004.6274,
                              "blksize": 4096,
                              "blocks": 0,
                              "ctime": 2023-04-19T02:37:35.007Z,
                              "ctimeMs": 1681871855007.1067,
                              "dev": 16777233,
                              "gid": 20,
                              "ino": 64198660,
                              "mode": 16877,
                              "mtime": 2023-04-19T02:37:35.007Z,
                              "mtimeMs": 1681871855007.1067,
                              "nlink": 12,
                              "rdev": 0,
                              "size": 384,
                              "uid": 504,
                            },
                            "stagedPath": "/private/var/folders/tn/799yyvm92g74fj_thj2z7w140000gr/T/cdk-test-app-WFT8EN/asset.903be65b9594a9f17d7120273620367e7830b6d087fc9591f31dc5a080049e46",
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                        },
                        "_context": {},
                        "_dependencies": Set {},
                        "_locked": false,
                        "_metadata": [],
                        "_validations": [],
                        "host": [Circular],
                        "id": "Code",
                        "scope": [Circular],
                      },
                      "s3BucketName": "\${Token[TOKEN.676]}",
                      "s3ObjectKey": "REPLACED-GENERATED-NAME.zip",
                      "s3ObjectUrl": "\${Token[TOKEN.677]}",
                      "s3Url": "\${Token[TOKEN.675]}",
                      "sourceHash": "903be65b9594a9f17d7120273620367e7830b6d087fc9591f31dc5a080049e46",
                      Symbol(@aws-cdk/core.DependableTrait): {
                        "dependencyRoots": [
                          [Circular],
                        ],
                      },
                    },
                    "Resource": CfnFunction {
                      "_cfnProperties": {
                        "architectures": undefined,
                        "code": {
                          "imageUri": undefined,
                          "s3Bucket": "\${Token[TOKEN.676]}",
                          "s3Key": "REPLACED-GENERATED-NAME.zip",
                          "s3ObjectVersion": undefined,
                          "zipFile": undefined,
                        },
                        "codeSigningConfigArn": undefined,
                        "deadLetterConfig": undefined,
                        "description": "AWS CDK resource provider framework - onEvent (Default/codeCommitSecret/Custom::GitopsSecrets)",
                        "environment": "<unresolved-lazy>",
                        "ephemeralStorage": undefined,
                        "fileSystemConfigs": undefined,
                        "functionName": "\${Token[TOKEN.664]}",
                        "handler": "framework.onEvent",
                        "imageConfig": undefined,
                        "kmsKeyArn": undefined,
                        "layers": [
                          "#{Token[TOKEN.680]}",
                        ],
                        "memorySize": undefined,
                        "packageType": undefined,
                        "reservedConcurrentExecutions": undefined,
                        "role": "\${Token[TOKEN.672]}",
                        "runtime": "nodejs14.x",
                        "runtimeManagementConfig": undefined,
                        "timeout": 900,
                        "vpcConfig": undefined,
                      },
                      "architectures": undefined,
                      "attrArn": "\${Token[TOKEN.682]}",
                      "attrSnapStartResponseApplyOn": "\${Token[TOKEN.683]}",
                      "attrSnapStartResponseOptimizationStatus": "\${Token[TOKEN.684]}",
                      "cfnOptions": {},
                      "cfnResourceType": "AWS::Lambda::Function",
                      "code": {
                        "imageUri": undefined,
                        "s3Bucket": "\${Token[TOKEN.676]}",
                        "s3Key": "REPLACED-GENERATED-NAME.zip",
                        "s3ObjectVersion": undefined,
                        "zipFile": undefined,
                      },
                      "codeSigningConfigArn": undefined,
                      "deadLetterConfig": undefined,
                      "dependsOn": Set {},
                      "description": "AWS CDK resource provider framework - onEvent (Default/codeCommitSecret/Custom::GitopsSecrets)",
                      "environment": "<unresolved-lazy>",
                      "ephemeralStorage": undefined,
                      "fileSystemConfigs": undefined,
                      "functionName": "\${Token[TOKEN.664]}",
                      "handler": "framework.onEvent",
                      "imageConfig": undefined,
                      "kmsKeyArn": undefined,
                      "layers": [
                        "#{Token[TOKEN.680]}",
                      ],
                      "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.Resource.LogicalID.681]}",
                      "memorySize": undefined,
                      "node": Node {
                        "_children": {},
                        "_context": {},
                        "_dependencies": Set {
                          Role {
                            "_allowCrossEnvironment": false,
                            "_didSplit": false,
                            "_physicalName": undefined,
                            "_roleId": "\${Token[TOKEN.671]}",
                            "assumeRoleAction": "sts:AssumeRole",
                            "assumeRolePolicy": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "\${Token[lambda.amazonaws.com.666]}",
                                  },
                                },
                              ],
                              "Version": "2012-10-17",
                            },
                            "attachedPolicies": AttachedPolicies {
                              "policies": [
                                Policy {
                                  "_allowCrossEnvironment": false,
                                  "_physicalName": "\${Token[TOKEN.688]}",
                                  "_policyName": "\${Token[TOKEN.688]}",
                                  "document": {
                                    "Statement": [
                                      {
                                        "Action": "lambda:InvokeFunction",
                                        "Effect": "Allow",
                                        "Resource": [
                                          "\${Token[TOKEN.658]}",
                                          "\${Token[TOKEN.658]}:*",
                                        ],
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "env": {
                                    "account": "\${Token[AWS.AccountId.2]}",
                                    "region": "\${Token[AWS.Region.6]}",
                                  },
                                  "force": false,
                                  "grantPrincipal": PolicyGrantPrincipal {
                                    "_policy": [Circular],
                                    "assumeRoleAction": "sts:AssumeRole",
                                    "grantPrincipal": [Circular],
                                    "principalAccount": "\${Token[AWS.AccountId.2]}",
                                  },
                                  "groups": [],
                                  "node": Node {
                                    "_children": {
                                      "Resource": CfnPolicyConditional {
                                        "_cfnProperties": {
                                          "groups": [
                                            "#{Token[TOKEN.691]}",
                                          ],
                                          "policyDocument": {
                                            "Statement": [
                                              {
                                                "Action": "lambda:InvokeFunction",
                                                "Effect": "Allow",
                                                "Resource": [
                                                  "\${Token[TOKEN.658]}",
                                                  "\${Token[TOKEN.658]}:*",
                                                ],
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "policyName": "\${Token[TOKEN.688]}",
                                          "roles": [
                                            "#{Token[TOKEN.689]}",
                                          ],
                                          "users": [
                                            "#{Token[TOKEN.690]}",
                                          ],
                                        },
                                        "cfnOptions": {},
                                        "cfnResourceType": "AWS::IAM::Policy",
                                        "dependsOn": Set {},
                                        "groups": [
                                          "#{Token[TOKEN.691]}",
                                        ],
                                        "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                        "node": Node {
                                          "_children": {},
                                          "_context": {},
                                          "_dependencies": Set {},
                                          "_locked": false,
                                          "_metadata": [
                                            {
                                              "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                              "trace": undefined,
                                              "type": "aws:cdk:logicalId",
                                            },
                                          ],
                                          "_validations": [],
                                          "host": [Circular],
                                          "id": "Resource",
                                          "scope": [Circular],
                                        },
                                        "policyDocument": {
                                          "Statement": [
                                            {
                                              "Action": "lambda:InvokeFunction",
                                              "Effect": "Allow",
                                              "Resource": [
                                                "\${Token[TOKEN.658]}",
                                                "\${Token[TOKEN.658]}:*",
                                              ],
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "policyName": "\${Token[TOKEN.688]}",
                                        "rawOverrides": {},
                                        "roles": [
                                          "#{Token[TOKEN.689]}",
                                        ],
                                        "stack": [Circular],
                                        "users": [
                                          "#{Token[TOKEN.690]}",
                                        ],
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [
                                            [Circular],
                                          ],
                                        },
                                      },
                                    },
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [],
                                    "_validations": [
                                      {
                                        "validate": [Function],
                                      },
                                    ],
                                    "host": [Circular],
                                    "id": "DefaultPolicy",
                                    "scope": [Circular],
                                  },
                                  "physicalName": "\${Token[TOKEN.688]}",
                                  "referenceTaken": false,
                                  "roles": [
                                    [Circular],
                                  ],
                                  "stack": [Circular],
                                  "users": [],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                              ],
                            },
                            "defaultPolicy": Policy {
                              "_allowCrossEnvironment": false,
                              "_physicalName": "\${Token[TOKEN.688]}",
                              "_policyName": "\${Token[TOKEN.688]}",
                              "document": {
                                "Statement": [
                                  {
                                    "Action": "lambda:InvokeFunction",
                                    "Effect": "Allow",
                                    "Resource": [
                                      "\${Token[TOKEN.658]}",
                                      "\${Token[TOKEN.658]}:*",
                                    ],
                                  },
                                ],
                                "Version": "2012-10-17",
                              },
                              "env": {
                                "account": "\${Token[AWS.AccountId.2]}",
                                "region": "\${Token[AWS.Region.6]}",
                              },
                              "force": false,
                              "grantPrincipal": PolicyGrantPrincipal {
                                "_policy": [Circular],
                                "assumeRoleAction": "sts:AssumeRole",
                                "grantPrincipal": [Circular],
                                "principalAccount": "\${Token[AWS.AccountId.2]}",
                              },
                              "groups": [],
                              "node": Node {
                                "_children": {
                                  "Resource": CfnPolicyConditional {
                                    "_cfnProperties": {
                                      "groups": [
                                        "#{Token[TOKEN.691]}",
                                      ],
                                      "policyDocument": {
                                        "Statement": [
                                          {
                                            "Action": "lambda:InvokeFunction",
                                            "Effect": "Allow",
                                            "Resource": [
                                              "\${Token[TOKEN.658]}",
                                              "\${Token[TOKEN.658]}:*",
                                            ],
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "policyName": "\${Token[TOKEN.688]}",
                                      "roles": [
                                        "#{Token[TOKEN.689]}",
                                      ],
                                      "users": [
                                        "#{Token[TOKEN.690]}",
                                      ],
                                    },
                                    "cfnOptions": {},
                                    "cfnResourceType": "AWS::IAM::Policy",
                                    "dependsOn": Set {},
                                    "groups": [
                                      "#{Token[TOKEN.691]}",
                                    ],
                                    "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                    "node": Node {
                                      "_children": {},
                                      "_context": {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": [
                                        {
                                          "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                          "trace": undefined,
                                          "type": "aws:cdk:logicalId",
                                        },
                                      ],
                                      "_validations": [],
                                      "host": [Circular],
                                      "id": "Resource",
                                      "scope": [Circular],
                                    },
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "lambda:InvokeFunction",
                                          "Effect": "Allow",
                                          "Resource": [
                                            "\${Token[TOKEN.658]}",
                                            "\${Token[TOKEN.658]}:*",
                                          ],
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "policyName": "\${Token[TOKEN.688]}",
                                    "rawOverrides": {},
                                    "roles": [
                                      "#{Token[TOKEN.689]}",
                                    ],
                                    "stack": [Circular],
                                    "users": [
                                      "#{Token[TOKEN.690]}",
                                    ],
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [
                                        [Circular],
                                      ],
                                    },
                                  },
                                },
                                "_context": {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": [],
                                "_validations": [
                                  {
                                    "validate": [Function],
                                  },
                                ],
                                "host": [Circular],
                                "id": "DefaultPolicy",
                                "scope": [Circular],
                              },
                              "physicalName": "\${Token[TOKEN.688]}",
                              "referenceTaken": false,
                              "roles": [
                                [Circular],
                              ],
                              "stack": [Circular],
                              "users": [],
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [
                                  [Circular],
                                ],
                              },
                            },
                            "dependables": Map {
                              {
                                "Action": "lambda:InvokeFunction",
                                "Effect": "Allow",
                                "Resource": [
                                  "\${Token[TOKEN.658]}",
                                  "\${Token[TOKEN.658]}:*",
                                ],
                              } => DependencyGroup {
                                "_deps": [],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [],
                                },
                              },
                            },
                            "env": {
                              "account": "\${Token[AWS.AccountId.2]}",
                              "region": "\${Token[AWS.Region.6]}",
                            },
                            "grantPrincipal": [Circular],
                            "inlinePolicies": {},
                            "managedPolicies": [
                              AwsManagedPolicy {
                                "managedPolicyArn": "arn:\${Token[AWS.Partition.5]}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                              },
                            ],
                            "node": Node {
                              "_children": {
                                "DefaultPolicy": Policy {
                                  "_allowCrossEnvironment": false,
                                  "_physicalName": "\${Token[TOKEN.688]}",
                                  "_policyName": "\${Token[TOKEN.688]}",
                                  "document": {
                                    "Statement": [
                                      {
                                        "Action": "lambda:InvokeFunction",
                                        "Effect": "Allow",
                                        "Resource": [
                                          "\${Token[TOKEN.658]}",
                                          "\${Token[TOKEN.658]}:*",
                                        ],
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "env": {
                                    "account": "\${Token[AWS.AccountId.2]}",
                                    "region": "\${Token[AWS.Region.6]}",
                                  },
                                  "force": false,
                                  "grantPrincipal": PolicyGrantPrincipal {
                                    "_policy": [Circular],
                                    "assumeRoleAction": "sts:AssumeRole",
                                    "grantPrincipal": [Circular],
                                    "principalAccount": "\${Token[AWS.AccountId.2]}",
                                  },
                                  "groups": [],
                                  "node": Node {
                                    "_children": {
                                      "Resource": CfnPolicyConditional {
                                        "_cfnProperties": {
                                          "groups": [
                                            "#{Token[TOKEN.691]}",
                                          ],
                                          "policyDocument": {
                                            "Statement": [
                                              {
                                                "Action": "lambda:InvokeFunction",
                                                "Effect": "Allow",
                                                "Resource": [
                                                  "\${Token[TOKEN.658]}",
                                                  "\${Token[TOKEN.658]}:*",
                                                ],
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "policyName": "\${Token[TOKEN.688]}",
                                          "roles": [
                                            "#{Token[TOKEN.689]}",
                                          ],
                                          "users": [
                                            "#{Token[TOKEN.690]}",
                                          ],
                                        },
                                        "cfnOptions": {},
                                        "cfnResourceType": "AWS::IAM::Policy",
                                        "dependsOn": Set {},
                                        "groups": [
                                          "#{Token[TOKEN.691]}",
                                        ],
                                        "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                        "node": Node {
                                          "_children": {},
                                          "_context": {},
                                          "_dependencies": Set {},
                                          "_locked": false,
                                          "_metadata": [
                                            {
                                              "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                              "trace": undefined,
                                              "type": "aws:cdk:logicalId",
                                            },
                                          ],
                                          "_validations": [],
                                          "host": [Circular],
                                          "id": "Resource",
                                          "scope": [Circular],
                                        },
                                        "policyDocument": {
                                          "Statement": [
                                            {
                                              "Action": "lambda:InvokeFunction",
                                              "Effect": "Allow",
                                              "Resource": [
                                                "\${Token[TOKEN.658]}",
                                                "\${Token[TOKEN.658]}:*",
                                              ],
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "policyName": "\${Token[TOKEN.688]}",
                                        "rawOverrides": {},
                                        "roles": [
                                          "#{Token[TOKEN.689]}",
                                        ],
                                        "stack": [Circular],
                                        "users": [
                                          "#{Token[TOKEN.690]}",
                                        ],
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [
                                            [Circular],
                                          ],
                                        },
                                      },
                                    },
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [],
                                    "_validations": [
                                      {
                                        "validate": [Function],
                                      },
                                    ],
                                    "host": [Circular],
                                    "id": "DefaultPolicy",
                                    "scope": [Circular],
                                  },
                                  "physicalName": "\${Token[TOKEN.688]}",
                                  "referenceTaken": false,
                                  "roles": [
                                    [Circular],
                                  ],
                                  "stack": [Circular],
                                  "users": [],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                                "ImportServiceRole": ImportedRole {
                                  "_allowCrossEnvironment": false,
                                  "_physicalName": undefined,
                                  "assumeRoleAction": "sts:AssumeRole",
                                  "attachedPolicies": AttachedPolicies {
                                    "policies": [],
                                  },
                                  "defaultPolicyName": undefined,
                                  "env": {
                                    "account": "\${Token[AWS.AccountId.2]}",
                                    "region": "\${Token[AWS.Region.6]}",
                                  },
                                  "grantPrincipal": [Circular],
                                  "node": Node {
                                    "_children": {},
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [],
                                    "_validations": [],
                                    "host": [Circular],
                                    "id": "ImportServiceRole",
                                    "scope": [Circular],
                                  },
                                  "physicalName": "\${Token[TOKEN.667]}",
                                  "policyFragment": PrincipalPolicyFragment {
                                    "conditions": {},
                                    "principalJson": {
                                      "AWS": [
                                        "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                                      ],
                                    },
                                  },
                                  "principalAccount": "\${Token[AWS.AccountId.2]}",
                                  "roleArn": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                                  "roleName": "ServiceRole",
                                  "stack": [Circular],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                                "Resource": CfnRole {
                                  "_cfnProperties": {
                                    "assumeRolePolicyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "sts:AssumeRole",
                                          "Effect": "Allow",
                                          "Principal": {
                                            "Service": "\${Token[lambda.amazonaws.com.666]}",
                                          },
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "description": undefined,
                                    "managedPolicyArns": [
                                      "#{Token[TOKEN.668]}",
                                    ],
                                    "maxSessionDuration": undefined,
                                    "path": undefined,
                                    "permissionsBoundary": undefined,
                                    "policies": undefined,
                                    "roleName": "\${Token[TOKEN.665]}",
                                  },
                                  "assumeRolePolicyDocument": {
                                    "Statement": [
                                      {
                                        "Action": "sts:AssumeRole",
                                        "Effect": "Allow",
                                        "Principal": {
                                          "Service": "\${Token[lambda.amazonaws.com.666]}",
                                        },
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "attrArn": "\${Token[TOKEN.670]}",
                                  "attrRoleId": "\${Token[TOKEN.671]}",
                                  "cfnOptions": {},
                                  "cfnResourceType": "AWS::IAM::Role",
                                  "dependsOn": Set {},
                                  "description": undefined,
                                  "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.Resource.LogicalID.669]}",
                                  "managedPolicyArns": [
                                    "#{Token[TOKEN.668]}",
                                  ],
                                  "maxSessionDuration": undefined,
                                  "node": Node {
                                    "_children": {},
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [
                                      {
                                        "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.Resource.LogicalID.669]}",
                                        "trace": undefined,
                                        "type": "aws:cdk:logicalId",
                                      },
                                    ],
                                    "_validations": [],
                                    "host": [Circular],
                                    "id": "Resource",
                                    "scope": [Circular],
                                  },
                                  "path": undefined,
                                  "permissionsBoundary": undefined,
                                  "policies": undefined,
                                  "rawOverrides": {},
                                  "roleName": "\${Token[TOKEN.665]}",
                                  "stack": [Circular],
                                  "tags": TagManager {
                                    "initialTagPriority": 50,
                                    "priorities": Map {},
                                    "renderedTags": "<unresolved-lazy>",
                                    "resourceTypeName": "AWS::IAM::Role",
                                    "tagFormatter": StandardFormatter {},
                                    "tagPropertyName": "tags",
                                    "tags": Map {},
                                  },
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                              },
                              "_context": {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": [],
                              "_validations": [
                                {
                                  "validate": [Function],
                                },
                              ],
                              "host": [Circular],
                              "id": "ServiceRole",
                              "scope": [Circular],
                            },
                            "permissionsBoundary": undefined,
                            "physicalName": "\${Token[TOKEN.665]}",
                            "policyFragment": PrincipalPolicyFragment {
                              "conditions": {},
                              "principalJson": {
                                "AWS": [
                                  "\${Token[TOKEN.672]}",
                                ],
                              },
                            },
                            "principalAccount": "\${Token[AWS.AccountId.2]}",
                            "roleArn": "\${Token[TOKEN.672]}",
                            "roleName": "\${Token[TOKEN.674]}",
                            "stack": [Circular],
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                        },
                        "_locked": false,
                        "_metadata": [
                          {
                            "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.Resource.LogicalID.681]}",
                            "trace": undefined,
                            "type": "aws:cdk:logicalId",
                          },
                        ],
                        "_validations": [],
                        "host": [Circular],
                        "id": "Resource",
                        "scope": [Circular],
                      },
                      "packageType": undefined,
                      "rawOverrides": {},
                      "reservedConcurrentExecutions": undefined,
                      "role": "\${Token[TOKEN.672]}",
                      "runtime": "nodejs14.x",
                      "runtimeManagementConfig": undefined,
                      "snapStart": undefined,
                      "stack": [Circular],
                      "tags": TagManager {
                        "initialTagPriority": 50,
                        "priorities": Map {},
                        "renderedTags": "<unresolved-lazy>",
                        "resourceTypeName": "AWS::Lambda::Function",
                        "tagFormatter": StandardFormatter {},
                        "tagPropertyName": "tags",
                        "tags": Map {},
                      },
                      "timeout": 900,
                      "tracingConfig": undefined,
                      "vpcConfig": undefined,
                      Symbol(@aws-cdk/core.DependableTrait): {
                        "dependencyRoots": [
                          [Circular],
                        ],
                      },
                    },
                    "ServiceRole": Role {
                      "_allowCrossEnvironment": false,
                      "_didSplit": false,
                      "_physicalName": undefined,
                      "_roleId": "\${Token[TOKEN.671]}",
                      "assumeRoleAction": "sts:AssumeRole",
                      "assumeRolePolicy": {
                        "Statement": [
                          {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                              "Service": "\${Token[lambda.amazonaws.com.666]}",
                            },
                          },
                        ],
                        "Version": "2012-10-17",
                      },
                      "attachedPolicies": AttachedPolicies {
                        "policies": [
                          Policy {
                            "_allowCrossEnvironment": false,
                            "_physicalName": "\${Token[TOKEN.688]}",
                            "_policyName": "\${Token[TOKEN.688]}",
                            "document": {
                              "Statement": [
                                {
                                  "Action": "lambda:InvokeFunction",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "\${Token[TOKEN.658]}",
                                    "\${Token[TOKEN.658]}:*",
                                  ],
                                },
                              ],
                              "Version": "2012-10-17",
                            },
                            "env": {
                              "account": "\${Token[AWS.AccountId.2]}",
                              "region": "\${Token[AWS.Region.6]}",
                            },
                            "force": false,
                            "grantPrincipal": PolicyGrantPrincipal {
                              "_policy": [Circular],
                              "assumeRoleAction": "sts:AssumeRole",
                              "grantPrincipal": [Circular],
                              "principalAccount": "\${Token[AWS.AccountId.2]}",
                            },
                            "groups": [],
                            "node": Node {
                              "_children": {
                                "Resource": CfnPolicyConditional {
                                  "_cfnProperties": {
                                    "groups": [
                                      "#{Token[TOKEN.691]}",
                                    ],
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "lambda:InvokeFunction",
                                          "Effect": "Allow",
                                          "Resource": [
                                            "\${Token[TOKEN.658]}",
                                            "\${Token[TOKEN.658]}:*",
                                          ],
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "policyName": "\${Token[TOKEN.688]}",
                                    "roles": [
                                      "#{Token[TOKEN.689]}",
                                    ],
                                    "users": [
                                      "#{Token[TOKEN.690]}",
                                    ],
                                  },
                                  "cfnOptions": {},
                                  "cfnResourceType": "AWS::IAM::Policy",
                                  "dependsOn": Set {},
                                  "groups": [
                                    "#{Token[TOKEN.691]}",
                                  ],
                                  "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                  "node": Node {
                                    "_children": {},
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [
                                      {
                                        "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                        "trace": undefined,
                                        "type": "aws:cdk:logicalId",
                                      },
                                    ],
                                    "_validations": [],
                                    "host": [Circular],
                                    "id": "Resource",
                                    "scope": [Circular],
                                  },
                                  "policyDocument": {
                                    "Statement": [
                                      {
                                        "Action": "lambda:InvokeFunction",
                                        "Effect": "Allow",
                                        "Resource": [
                                          "\${Token[TOKEN.658]}",
                                          "\${Token[TOKEN.658]}:*",
                                        ],
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "policyName": "\${Token[TOKEN.688]}",
                                  "rawOverrides": {},
                                  "roles": [
                                    "#{Token[TOKEN.689]}",
                                  ],
                                  "stack": [Circular],
                                  "users": [
                                    "#{Token[TOKEN.690]}",
                                  ],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                              },
                              "_context": {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": [],
                              "_validations": [
                                {
                                  "validate": [Function],
                                },
                              ],
                              "host": [Circular],
                              "id": "DefaultPolicy",
                              "scope": [Circular],
                            },
                            "physicalName": "\${Token[TOKEN.688]}",
                            "referenceTaken": false,
                            "roles": [
                              [Circular],
                            ],
                            "stack": [Circular],
                            "users": [],
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                        ],
                      },
                      "defaultPolicy": Policy {
                        "_allowCrossEnvironment": false,
                        "_physicalName": "\${Token[TOKEN.688]}",
                        "_policyName": "\${Token[TOKEN.688]}",
                        "document": {
                          "Statement": [
                            {
                              "Action": "lambda:InvokeFunction",
                              "Effect": "Allow",
                              "Resource": [
                                "\${Token[TOKEN.658]}",
                                "\${Token[TOKEN.658]}:*",
                              ],
                            },
                          ],
                          "Version": "2012-10-17",
                        },
                        "env": {
                          "account": "\${Token[AWS.AccountId.2]}",
                          "region": "\${Token[AWS.Region.6]}",
                        },
                        "force": false,
                        "grantPrincipal": PolicyGrantPrincipal {
                          "_policy": [Circular],
                          "assumeRoleAction": "sts:AssumeRole",
                          "grantPrincipal": [Circular],
                          "principalAccount": "\${Token[AWS.AccountId.2]}",
                        },
                        "groups": [],
                        "node": Node {
                          "_children": {
                            "Resource": CfnPolicyConditional {
                              "_cfnProperties": {
                                "groups": [
                                  "#{Token[TOKEN.691]}",
                                ],
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "lambda:InvokeFunction",
                                      "Effect": "Allow",
                                      "Resource": [
                                        "\${Token[TOKEN.658]}",
                                        "\${Token[TOKEN.658]}:*",
                                      ],
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "policyName": "\${Token[TOKEN.688]}",
                                "roles": [
                                  "#{Token[TOKEN.689]}",
                                ],
                                "users": [
                                  "#{Token[TOKEN.690]}",
                                ],
                              },
                              "cfnOptions": {},
                              "cfnResourceType": "AWS::IAM::Policy",
                              "dependsOn": Set {},
                              "groups": [
                                "#{Token[TOKEN.691]}",
                              ],
                              "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                              "node": Node {
                                "_children": {},
                                "_context": {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": [
                                  {
                                    "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                    "trace": undefined,
                                    "type": "aws:cdk:logicalId",
                                  },
                                ],
                                "_validations": [],
                                "host": [Circular],
                                "id": "Resource",
                                "scope": [Circular],
                              },
                              "policyDocument": {
                                "Statement": [
                                  {
                                    "Action": "lambda:InvokeFunction",
                                    "Effect": "Allow",
                                    "Resource": [
                                      "\${Token[TOKEN.658]}",
                                      "\${Token[TOKEN.658]}:*",
                                    ],
                                  },
                                ],
                                "Version": "2012-10-17",
                              },
                              "policyName": "\${Token[TOKEN.688]}",
                              "rawOverrides": {},
                              "roles": [
                                "#{Token[TOKEN.689]}",
                              ],
                              "stack": [Circular],
                              "users": [
                                "#{Token[TOKEN.690]}",
                              ],
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [
                                  [Circular],
                                ],
                              },
                            },
                          },
                          "_context": {},
                          "_dependencies": Set {},
                          "_locked": false,
                          "_metadata": [],
                          "_validations": [
                            {
                              "validate": [Function],
                            },
                          ],
                          "host": [Circular],
                          "id": "DefaultPolicy",
                          "scope": [Circular],
                        },
                        "physicalName": "\${Token[TOKEN.688]}",
                        "referenceTaken": false,
                        "roles": [
                          [Circular],
                        ],
                        "stack": [Circular],
                        "users": [],
                        Symbol(@aws-cdk/core.DependableTrait): {
                          "dependencyRoots": [
                            [Circular],
                          ],
                        },
                      },
                      "dependables": Map {
                        {
                          "Action": "lambda:InvokeFunction",
                          "Effect": "Allow",
                          "Resource": [
                            "\${Token[TOKEN.658]}",
                            "\${Token[TOKEN.658]}:*",
                          ],
                        } => DependencyGroup {
                          "_deps": [],
                          Symbol(@aws-cdk/core.DependableTrait): {
                            "dependencyRoots": [],
                          },
                        },
                      },
                      "env": {
                        "account": "\${Token[AWS.AccountId.2]}",
                        "region": "\${Token[AWS.Region.6]}",
                      },
                      "grantPrincipal": [Circular],
                      "inlinePolicies": {},
                      "managedPolicies": [
                        AwsManagedPolicy {
                          "managedPolicyArn": "arn:\${Token[AWS.Partition.5]}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                        },
                      ],
                      "node": Node {
                        "_children": {
                          "DefaultPolicy": Policy {
                            "_allowCrossEnvironment": false,
                            "_physicalName": "\${Token[TOKEN.688]}",
                            "_policyName": "\${Token[TOKEN.688]}",
                            "document": {
                              "Statement": [
                                {
                                  "Action": "lambda:InvokeFunction",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "\${Token[TOKEN.658]}",
                                    "\${Token[TOKEN.658]}:*",
                                  ],
                                },
                              ],
                              "Version": "2012-10-17",
                            },
                            "env": {
                              "account": "\${Token[AWS.AccountId.2]}",
                              "region": "\${Token[AWS.Region.6]}",
                            },
                            "force": false,
                            "grantPrincipal": PolicyGrantPrincipal {
                              "_policy": [Circular],
                              "assumeRoleAction": "sts:AssumeRole",
                              "grantPrincipal": [Circular],
                              "principalAccount": "\${Token[AWS.AccountId.2]}",
                            },
                            "groups": [],
                            "node": Node {
                              "_children": {
                                "Resource": CfnPolicyConditional {
                                  "_cfnProperties": {
                                    "groups": [
                                      "#{Token[TOKEN.691]}",
                                    ],
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "lambda:InvokeFunction",
                                          "Effect": "Allow",
                                          "Resource": [
                                            "\${Token[TOKEN.658]}",
                                            "\${Token[TOKEN.658]}:*",
                                          ],
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "policyName": "\${Token[TOKEN.688]}",
                                    "roles": [
                                      "#{Token[TOKEN.689]}",
                                    ],
                                    "users": [
                                      "#{Token[TOKEN.690]}",
                                    ],
                                  },
                                  "cfnOptions": {},
                                  "cfnResourceType": "AWS::IAM::Policy",
                                  "dependsOn": Set {},
                                  "groups": [
                                    "#{Token[TOKEN.691]}",
                                  ],
                                  "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                  "node": Node {
                                    "_children": {},
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [
                                      {
                                        "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                        "trace": undefined,
                                        "type": "aws:cdk:logicalId",
                                      },
                                    ],
                                    "_validations": [],
                                    "host": [Circular],
                                    "id": "Resource",
                                    "scope": [Circular],
                                  },
                                  "policyDocument": {
                                    "Statement": [
                                      {
                                        "Action": "lambda:InvokeFunction",
                                        "Effect": "Allow",
                                        "Resource": [
                                          "\${Token[TOKEN.658]}",
                                          "\${Token[TOKEN.658]}:*",
                                        ],
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "policyName": "\${Token[TOKEN.688]}",
                                  "rawOverrides": {},
                                  "roles": [
                                    "#{Token[TOKEN.689]}",
                                  ],
                                  "stack": [Circular],
                                  "users": [
                                    "#{Token[TOKEN.690]}",
                                  ],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                              },
                              "_context": {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": [],
                              "_validations": [
                                {
                                  "validate": [Function],
                                },
                              ],
                              "host": [Circular],
                              "id": "DefaultPolicy",
                              "scope": [Circular],
                            },
                            "physicalName": "\${Token[TOKEN.688]}",
                            "referenceTaken": false,
                            "roles": [
                              [Circular],
                            ],
                            "stack": [Circular],
                            "users": [],
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                          "ImportServiceRole": ImportedRole {
                            "_allowCrossEnvironment": false,
                            "_physicalName": undefined,
                            "assumeRoleAction": "sts:AssumeRole",
                            "attachedPolicies": AttachedPolicies {
                              "policies": [],
                            },
                            "defaultPolicyName": undefined,
                            "env": {
                              "account": "\${Token[AWS.AccountId.2]}",
                              "region": "\${Token[AWS.Region.6]}",
                            },
                            "grantPrincipal": [Circular],
                            "node": Node {
                              "_children": {},
                              "_context": {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": [],
                              "_validations": [],
                              "host": [Circular],
                              "id": "ImportServiceRole",
                              "scope": [Circular],
                            },
                            "physicalName": "\${Token[TOKEN.667]}",
                            "policyFragment": PrincipalPolicyFragment {
                              "conditions": {},
                              "principalJson": {
                                "AWS": [
                                  "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                                ],
                              },
                            },
                            "principalAccount": "\${Token[AWS.AccountId.2]}",
                            "roleArn": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                            "roleName": "ServiceRole",
                            "stack": [Circular],
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                          "Resource": CfnRole {
                            "_cfnProperties": {
                              "assumeRolePolicyDocument": {
                                "Statement": [
                                  {
                                    "Action": "sts:AssumeRole",
                                    "Effect": "Allow",
                                    "Principal": {
                                      "Service": "\${Token[lambda.amazonaws.com.666]}",
                                    },
                                  },
                                ],
                                "Version": "2012-10-17",
                              },
                              "description": undefined,
                              "managedPolicyArns": [
                                "#{Token[TOKEN.668]}",
                              ],
                              "maxSessionDuration": undefined,
                              "path": undefined,
                              "permissionsBoundary": undefined,
                              "policies": undefined,
                              "roleName": "\${Token[TOKEN.665]}",
                            },
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "\${Token[lambda.amazonaws.com.666]}",
                                  },
                                },
                              ],
                              "Version": "2012-10-17",
                            },
                            "attrArn": "\${Token[TOKEN.670]}",
                            "attrRoleId": "\${Token[TOKEN.671]}",
                            "cfnOptions": {},
                            "cfnResourceType": "AWS::IAM::Role",
                            "dependsOn": Set {},
                            "description": undefined,
                            "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.Resource.LogicalID.669]}",
                            "managedPolicyArns": [
                              "#{Token[TOKEN.668]}",
                            ],
                            "maxSessionDuration": undefined,
                            "node": Node {
                              "_children": {},
                              "_context": {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": [
                                {
                                  "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.Resource.LogicalID.669]}",
                                  "trace": undefined,
                                  "type": "aws:cdk:logicalId",
                                },
                              ],
                              "_validations": [],
                              "host": [Circular],
                              "id": "Resource",
                              "scope": [Circular],
                            },
                            "path": undefined,
                            "permissionsBoundary": undefined,
                            "policies": undefined,
                            "rawOverrides": {},
                            "roleName": "\${Token[TOKEN.665]}",
                            "stack": [Circular],
                            "tags": TagManager {
                              "initialTagPriority": 50,
                              "priorities": Map {},
                              "renderedTags": "<unresolved-lazy>",
                              "resourceTypeName": "AWS::IAM::Role",
                              "tagFormatter": StandardFormatter {},
                              "tagPropertyName": "tags",
                              "tags": Map {},
                            },
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                        },
                        "_context": {},
                        "_dependencies": Set {},
                        "_locked": false,
                        "_metadata": [],
                        "_validations": [
                          {
                            "validate": [Function],
                          },
                        ],
                        "host": [Circular],
                        "id": "ServiceRole",
                        "scope": [Circular],
                      },
                      "permissionsBoundary": undefined,
                      "physicalName": "\${Token[TOKEN.665]}",
                      "policyFragment": PrincipalPolicyFragment {
                        "conditions": {},
                        "principalJson": {
                          "AWS": [
                            "\${Token[TOKEN.672]}",
                          ],
                        },
                      },
                      "principalAccount": "\${Token[AWS.AccountId.2]}",
                      "roleArn": "\${Token[TOKEN.672]}",
                      "roleName": "\${Token[TOKEN.674]}",
                      "stack": [Circular],
                      Symbol(@aws-cdk/core.DependableTrait): {
                        "dependencyRoots": [
                          [Circular],
                        ],
                      },
                    },
                  },
                  "_context": {},
                  "_dependencies": Set {},
                  "_locked": false,
                  "_metadata": [],
                  "_validations": [],
                  "host": [Circular],
                  "id": "framework-onEvent",
                  "scope": [Circular],
                },
                "physicalName": "\${Token[TOKEN.664]}",
                "role": Role {
                  "_allowCrossEnvironment": false,
                  "_didSplit": false,
                  "_physicalName": undefined,
                  "_roleId": "\${Token[TOKEN.671]}",
                  "assumeRoleAction": "sts:AssumeRole",
                  "assumeRolePolicy": {
                    "Statement": [
                      {
                        "Action": "sts:AssumeRole",
                        "Effect": "Allow",
                        "Principal": {
                          "Service": "\${Token[lambda.amazonaws.com.666]}",
                        },
                      },
                    ],
                    "Version": "2012-10-17",
                  },
                  "attachedPolicies": AttachedPolicies {
                    "policies": [
                      Policy {
                        "_allowCrossEnvironment": false,
                        "_physicalName": "\${Token[TOKEN.688]}",
                        "_policyName": "\${Token[TOKEN.688]}",
                        "document": {
                          "Statement": [
                            {
                              "Action": "lambda:InvokeFunction",
                              "Effect": "Allow",
                              "Resource": [
                                "\${Token[TOKEN.658]}",
                                "\${Token[TOKEN.658]}:*",
                              ],
                            },
                          ],
                          "Version": "2012-10-17",
                        },
                        "env": {
                          "account": "\${Token[AWS.AccountId.2]}",
                          "region": "\${Token[AWS.Region.6]}",
                        },
                        "force": false,
                        "grantPrincipal": PolicyGrantPrincipal {
                          "_policy": [Circular],
                          "assumeRoleAction": "sts:AssumeRole",
                          "grantPrincipal": [Circular],
                          "principalAccount": "\${Token[AWS.AccountId.2]}",
                        },
                        "groups": [],
                        "node": Node {
                          "_children": {
                            "Resource": CfnPolicyConditional {
                              "_cfnProperties": {
                                "groups": [
                                  "#{Token[TOKEN.691]}",
                                ],
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "lambda:InvokeFunction",
                                      "Effect": "Allow",
                                      "Resource": [
                                        "\${Token[TOKEN.658]}",
                                        "\${Token[TOKEN.658]}:*",
                                      ],
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "policyName": "\${Token[TOKEN.688]}",
                                "roles": [
                                  "#{Token[TOKEN.689]}",
                                ],
                                "users": [
                                  "#{Token[TOKEN.690]}",
                                ],
                              },
                              "cfnOptions": {},
                              "cfnResourceType": "AWS::IAM::Policy",
                              "dependsOn": Set {},
                              "groups": [
                                "#{Token[TOKEN.691]}",
                              ],
                              "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                              "node": Node {
                                "_children": {},
                                "_context": {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": [
                                  {
                                    "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                    "trace": undefined,
                                    "type": "aws:cdk:logicalId",
                                  },
                                ],
                                "_validations": [],
                                "host": [Circular],
                                "id": "Resource",
                                "scope": [Circular],
                              },
                              "policyDocument": {
                                "Statement": [
                                  {
                                    "Action": "lambda:InvokeFunction",
                                    "Effect": "Allow",
                                    "Resource": [
                                      "\${Token[TOKEN.658]}",
                                      "\${Token[TOKEN.658]}:*",
                                    ],
                                  },
                                ],
                                "Version": "2012-10-17",
                              },
                              "policyName": "\${Token[TOKEN.688]}",
                              "rawOverrides": {},
                              "roles": [
                                "#{Token[TOKEN.689]}",
                              ],
                              "stack": [Circular],
                              "users": [
                                "#{Token[TOKEN.690]}",
                              ],
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [
                                  [Circular],
                                ],
                              },
                            },
                          },
                          "_context": {},
                          "_dependencies": Set {},
                          "_locked": false,
                          "_metadata": [],
                          "_validations": [
                            {
                              "validate": [Function],
                            },
                          ],
                          "host": [Circular],
                          "id": "DefaultPolicy",
                          "scope": [Circular],
                        },
                        "physicalName": "\${Token[TOKEN.688]}",
                        "referenceTaken": false,
                        "roles": [
                          [Circular],
                        ],
                        "stack": [Circular],
                        "users": [],
                        Symbol(@aws-cdk/core.DependableTrait): {
                          "dependencyRoots": [
                            [Circular],
                          ],
                        },
                      },
                    ],
                  },
                  "defaultPolicy": Policy {
                    "_allowCrossEnvironment": false,
                    "_physicalName": "\${Token[TOKEN.688]}",
                    "_policyName": "\${Token[TOKEN.688]}",
                    "document": {
                      "Statement": [
                        {
                          "Action": "lambda:InvokeFunction",
                          "Effect": "Allow",
                          "Resource": [
                            "\${Token[TOKEN.658]}",
                            "\${Token[TOKEN.658]}:*",
                          ],
                        },
                      ],
                      "Version": "2012-10-17",
                    },
                    "env": {
                      "account": "\${Token[AWS.AccountId.2]}",
                      "region": "\${Token[AWS.Region.6]}",
                    },
                    "force": false,
                    "grantPrincipal": PolicyGrantPrincipal {
                      "_policy": [Circular],
                      "assumeRoleAction": "sts:AssumeRole",
                      "grantPrincipal": [Circular],
                      "principalAccount": "\${Token[AWS.AccountId.2]}",
                    },
                    "groups": [],
                    "node": Node {
                      "_children": {
                        "Resource": CfnPolicyConditional {
                          "_cfnProperties": {
                            "groups": [
                              "#{Token[TOKEN.691]}",
                            ],
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "lambda:InvokeFunction",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "\${Token[TOKEN.658]}",
                                    "\${Token[TOKEN.658]}:*",
                                  ],
                                },
                              ],
                              "Version": "2012-10-17",
                            },
                            "policyName": "\${Token[TOKEN.688]}",
                            "roles": [
                              "#{Token[TOKEN.689]}",
                            ],
                            "users": [
                              "#{Token[TOKEN.690]}",
                            ],
                          },
                          "cfnOptions": {},
                          "cfnResourceType": "AWS::IAM::Policy",
                          "dependsOn": Set {},
                          "groups": [
                            "#{Token[TOKEN.691]}",
                          ],
                          "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                          "node": Node {
                            "_children": {},
                            "_context": {},
                            "_dependencies": Set {},
                            "_locked": false,
                            "_metadata": [
                              {
                                "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                "trace": undefined,
                                "type": "aws:cdk:logicalId",
                              },
                            ],
                            "_validations": [],
                            "host": [Circular],
                            "id": "Resource",
                            "scope": [Circular],
                          },
                          "policyDocument": {
                            "Statement": [
                              {
                                "Action": "lambda:InvokeFunction",
                                "Effect": "Allow",
                                "Resource": [
                                  "\${Token[TOKEN.658]}",
                                  "\${Token[TOKEN.658]}:*",
                                ],
                              },
                            ],
                            "Version": "2012-10-17",
                          },
                          "policyName": "\${Token[TOKEN.688]}",
                          "rawOverrides": {},
                          "roles": [
                            "#{Token[TOKEN.689]}",
                          ],
                          "stack": [Circular],
                          "users": [
                            "#{Token[TOKEN.690]}",
                          ],
                          Symbol(@aws-cdk/core.DependableTrait): {
                            "dependencyRoots": [
                              [Circular],
                            ],
                          },
                        },
                      },
                      "_context": {},
                      "_dependencies": Set {},
                      "_locked": false,
                      "_metadata": [],
                      "_validations": [
                        {
                          "validate": [Function],
                        },
                      ],
                      "host": [Circular],
                      "id": "DefaultPolicy",
                      "scope": [Circular],
                    },
                    "physicalName": "\${Token[TOKEN.688]}",
                    "referenceTaken": false,
                    "roles": [
                      [Circular],
                    ],
                    "stack": [Circular],
                    "users": [],
                    Symbol(@aws-cdk/core.DependableTrait): {
                      "dependencyRoots": [
                        [Circular],
                      ],
                    },
                  },
                  "dependables": Map {
                    {
                      "Action": "lambda:InvokeFunction",
                      "Effect": "Allow",
                      "Resource": [
                        "\${Token[TOKEN.658]}",
                        "\${Token[TOKEN.658]}:*",
                      ],
                    } => DependencyGroup {
                      "_deps": [],
                      Symbol(@aws-cdk/core.DependableTrait): {
                        "dependencyRoots": [],
                      },
                    },
                  },
                  "env": {
                    "account": "\${Token[AWS.AccountId.2]}",
                    "region": "\${Token[AWS.Region.6]}",
                  },
                  "grantPrincipal": [Circular],
                  "inlinePolicies": {},
                  "managedPolicies": [
                    AwsManagedPolicy {
                      "managedPolicyArn": "arn:\${Token[AWS.Partition.5]}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                    },
                  ],
                  "node": Node {
                    "_children": {
                      "DefaultPolicy": Policy {
                        "_allowCrossEnvironment": false,
                        "_physicalName": "\${Token[TOKEN.688]}",
                        "_policyName": "\${Token[TOKEN.688]}",
                        "document": {
                          "Statement": [
                            {
                              "Action": "lambda:InvokeFunction",
                              "Effect": "Allow",
                              "Resource": [
                                "\${Token[TOKEN.658]}",
                                "\${Token[TOKEN.658]}:*",
                              ],
                            },
                          ],
                          "Version": "2012-10-17",
                        },
                        "env": {
                          "account": "\${Token[AWS.AccountId.2]}",
                          "region": "\${Token[AWS.Region.6]}",
                        },
                        "force": false,
                        "grantPrincipal": PolicyGrantPrincipal {
                          "_policy": [Circular],
                          "assumeRoleAction": "sts:AssumeRole",
                          "grantPrincipal": [Circular],
                          "principalAccount": "\${Token[AWS.AccountId.2]}",
                        },
                        "groups": [],
                        "node": Node {
                          "_children": {
                            "Resource": CfnPolicyConditional {
                              "_cfnProperties": {
                                "groups": [
                                  "#{Token[TOKEN.691]}",
                                ],
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "lambda:InvokeFunction",
                                      "Effect": "Allow",
                                      "Resource": [
                                        "\${Token[TOKEN.658]}",
                                        "\${Token[TOKEN.658]}:*",
                                      ],
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "policyName": "\${Token[TOKEN.688]}",
                                "roles": [
                                  "#{Token[TOKEN.689]}",
                                ],
                                "users": [
                                  "#{Token[TOKEN.690]}",
                                ],
                              },
                              "cfnOptions": {},
                              "cfnResourceType": "AWS::IAM::Policy",
                              "dependsOn": Set {},
                              "groups": [
                                "#{Token[TOKEN.691]}",
                              ],
                              "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                              "node": Node {
                                "_children": {},
                                "_context": {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": [
                                  {
                                    "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                    "trace": undefined,
                                    "type": "aws:cdk:logicalId",
                                  },
                                ],
                                "_validations": [],
                                "host": [Circular],
                                "id": "Resource",
                                "scope": [Circular],
                              },
                              "policyDocument": {
                                "Statement": [
                                  {
                                    "Action": "lambda:InvokeFunction",
                                    "Effect": "Allow",
                                    "Resource": [
                                      "\${Token[TOKEN.658]}",
                                      "\${Token[TOKEN.658]}:*",
                                    ],
                                  },
                                ],
                                "Version": "2012-10-17",
                              },
                              "policyName": "\${Token[TOKEN.688]}",
                              "rawOverrides": {},
                              "roles": [
                                "#{Token[TOKEN.689]}",
                              ],
                              "stack": [Circular],
                              "users": [
                                "#{Token[TOKEN.690]}",
                              ],
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [
                                  [Circular],
                                ],
                              },
                            },
                          },
                          "_context": {},
                          "_dependencies": Set {},
                          "_locked": false,
                          "_metadata": [],
                          "_validations": [
                            {
                              "validate": [Function],
                            },
                          ],
                          "host": [Circular],
                          "id": "DefaultPolicy",
                          "scope": [Circular],
                        },
                        "physicalName": "\${Token[TOKEN.688]}",
                        "referenceTaken": false,
                        "roles": [
                          [Circular],
                        ],
                        "stack": [Circular],
                        "users": [],
                        Symbol(@aws-cdk/core.DependableTrait): {
                          "dependencyRoots": [
                            [Circular],
                          ],
                        },
                      },
                      "ImportServiceRole": ImportedRole {
                        "_allowCrossEnvironment": false,
                        "_physicalName": undefined,
                        "assumeRoleAction": "sts:AssumeRole",
                        "attachedPolicies": AttachedPolicies {
                          "policies": [],
                        },
                        "defaultPolicyName": undefined,
                        "env": {
                          "account": "\${Token[AWS.AccountId.2]}",
                          "region": "\${Token[AWS.Region.6]}",
                        },
                        "grantPrincipal": [Circular],
                        "node": Node {
                          "_children": {},
                          "_context": {},
                          "_dependencies": Set {},
                          "_locked": false,
                          "_metadata": [],
                          "_validations": [],
                          "host": [Circular],
                          "id": "ImportServiceRole",
                          "scope": [Circular],
                        },
                        "physicalName": "\${Token[TOKEN.667]}",
                        "policyFragment": PrincipalPolicyFragment {
                          "conditions": {},
                          "principalJson": {
                            "AWS": [
                              "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                            ],
                          },
                        },
                        "principalAccount": "\${Token[AWS.AccountId.2]}",
                        "roleArn": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                        "roleName": "ServiceRole",
                        "stack": [Circular],
                        Symbol(@aws-cdk/core.DependableTrait): {
                          "dependencyRoots": [
                            [Circular],
                          ],
                        },
                      },
                      "Resource": CfnRole {
                        "_cfnProperties": {
                          "assumeRolePolicyDocument": {
                            "Statement": [
                              {
                                "Action": "sts:AssumeRole",
                                "Effect": "Allow",
                                "Principal": {
                                  "Service": "\${Token[lambda.amazonaws.com.666]}",
                                },
                              },
                            ],
                            "Version": "2012-10-17",
                          },
                          "description": undefined,
                          "managedPolicyArns": [
                            "#{Token[TOKEN.668]}",
                          ],
                          "maxSessionDuration": undefined,
                          "path": undefined,
                          "permissionsBoundary": undefined,
                          "policies": undefined,
                          "roleName": "\${Token[TOKEN.665]}",
                        },
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "\${Token[lambda.amazonaws.com.666]}",
                              },
                            },
                          ],
                          "Version": "2012-10-17",
                        },
                        "attrArn": "\${Token[TOKEN.670]}",
                        "attrRoleId": "\${Token[TOKEN.671]}",
                        "cfnOptions": {},
                        "cfnResourceType": "AWS::IAM::Role",
                        "dependsOn": Set {},
                        "description": undefined,
                        "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.Resource.LogicalID.669]}",
                        "managedPolicyArns": [
                          "#{Token[TOKEN.668]}",
                        ],
                        "maxSessionDuration": undefined,
                        "node": Node {
                          "_children": {},
                          "_context": {},
                          "_dependencies": Set {},
                          "_locked": false,
                          "_metadata": [
                            {
                              "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.Resource.LogicalID.669]}",
                              "trace": undefined,
                              "type": "aws:cdk:logicalId",
                            },
                          ],
                          "_validations": [],
                          "host": [Circular],
                          "id": "Resource",
                          "scope": [Circular],
                        },
                        "path": undefined,
                        "permissionsBoundary": undefined,
                        "policies": undefined,
                        "rawOverrides": {},
                        "roleName": "\${Token[TOKEN.665]}",
                        "stack": [Circular],
                        "tags": TagManager {
                          "initialTagPriority": 50,
                          "priorities": Map {},
                          "renderedTags": "<unresolved-lazy>",
                          "resourceTypeName": "AWS::IAM::Role",
                          "tagFormatter": StandardFormatter {},
                          "tagPropertyName": "tags",
                          "tags": Map {},
                        },
                        Symbol(@aws-cdk/core.DependableTrait): {
                          "dependencyRoots": [
                            [Circular],
                          ],
                        },
                      },
                    },
                    "_context": {},
                    "_dependencies": Set {},
                    "_locked": false,
                    "_metadata": [],
                    "_validations": [
                      {
                        "validate": [Function],
                      },
                    ],
                    "host": [Circular],
                    "id": "ServiceRole",
                    "scope": [Circular],
                  },
                  "permissionsBoundary": undefined,
                  "physicalName": "\${Token[TOKEN.665]}",
                  "policyFragment": PrincipalPolicyFragment {
                    "conditions": {},
                    "principalJson": {
                      "AWS": [
                        "\${Token[TOKEN.672]}",
                      ],
                    },
                  },
                  "principalAccount": "\${Token[AWS.AccountId.2]}",
                  "roleArn": "\${Token[TOKEN.672]}",
                  "roleName": "\${Token[TOKEN.674]}",
                  "stack": [Circular],
                  Symbol(@aws-cdk/core.DependableTrait): {
                    "dependencyRoots": [
                      [Circular],
                    ],
                  },
                },
                "runtime": Runtime {
                  "bundlingDockerImage": "public.ecr.aws/sam/build-nodejs14.x",
                  "bundlingImage": "public.ecr.aws/sam/build-nodejs14.x",
                  "family": 0,
                  "name": "nodejs14.x",
                  "supportsCodeGuruProfiling": false,
                  "supportsInlineCode": true,
                },
                "stack": [Circular],
                "timeout": Duration {
                  "amount": 15,
                  "unit": TimeUnit {
                    "inMillis": 60000,
                    "isoLabel": "M",
                    "label": "minutes",
                  },
                },
                Symbol(@aws-cdk/core.DependableTrait): {
                  "dependencyRoots": [
                    [Circular],
                  ],
                },
              },
              "isCompleteHandler": undefined,
              "logRetention": undefined,
              "node": Node {
                "_children": {
                  "framework-onEvent": Function {
                    "_allowCrossEnvironment": false,
                    "_architecture": undefined,
                    "_functionUrlInvocationGrants": {},
                    "_invocationGrants": {},
                    "_layers": [],
                    "_physicalName": undefined,
                    "_warnIfCurrentVersionCalled": false,
                    "architecture": Architecture {
                      "dockerPlatform": "linux/amd64",
                      "name": "x86_64",
                    },
                    "canCreatePermissions": true,
                    "currentVersionOptions": undefined,
                    "env": {
                      "account": "\${Token[AWS.AccountId.2]}",
                      "region": "\${Token[AWS.Region.6]}",
                    },
                    "environment": {
                      "USER_ON_EVENT_FUNCTION_ARN": {
                        "value": "\${Token[TOKEN.658]}",
                      },
                    },
                    "functionArn": "\${Token[TOKEN.687]}",
                    "functionName": "\${Token[TOKEN.686]}",
                    "grantPrincipal": Role {
                      "_allowCrossEnvironment": false,
                      "_didSplit": false,
                      "_physicalName": undefined,
                      "_roleId": "\${Token[TOKEN.671]}",
                      "assumeRoleAction": "sts:AssumeRole",
                      "assumeRolePolicy": {
                        "Statement": [
                          {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                              "Service": "\${Token[lambda.amazonaws.com.666]}",
                            },
                          },
                        ],
                        "Version": "2012-10-17",
                      },
                      "attachedPolicies": AttachedPolicies {
                        "policies": [
                          Policy {
                            "_allowCrossEnvironment": false,
                            "_physicalName": "\${Token[TOKEN.688]}",
                            "_policyName": "\${Token[TOKEN.688]}",
                            "document": {
                              "Statement": [
                                {
                                  "Action": "lambda:InvokeFunction",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "\${Token[TOKEN.658]}",
                                    "\${Token[TOKEN.658]}:*",
                                  ],
                                },
                              ],
                              "Version": "2012-10-17",
                            },
                            "env": {
                              "account": "\${Token[AWS.AccountId.2]}",
                              "region": "\${Token[AWS.Region.6]}",
                            },
                            "force": false,
                            "grantPrincipal": PolicyGrantPrincipal {
                              "_policy": [Circular],
                              "assumeRoleAction": "sts:AssumeRole",
                              "grantPrincipal": [Circular],
                              "principalAccount": "\${Token[AWS.AccountId.2]}",
                            },
                            "groups": [],
                            "node": Node {
                              "_children": {
                                "Resource": CfnPolicyConditional {
                                  "_cfnProperties": {
                                    "groups": [
                                      "#{Token[TOKEN.691]}",
                                    ],
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "lambda:InvokeFunction",
                                          "Effect": "Allow",
                                          "Resource": [
                                            "\${Token[TOKEN.658]}",
                                            "\${Token[TOKEN.658]}:*",
                                          ],
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "policyName": "\${Token[TOKEN.688]}",
                                    "roles": [
                                      "#{Token[TOKEN.689]}",
                                    ],
                                    "users": [
                                      "#{Token[TOKEN.690]}",
                                    ],
                                  },
                                  "cfnOptions": {},
                                  "cfnResourceType": "AWS::IAM::Policy",
                                  "dependsOn": Set {},
                                  "groups": [
                                    "#{Token[TOKEN.691]}",
                                  ],
                                  "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                  "node": Node {
                                    "_children": {},
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [
                                      {
                                        "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                        "trace": undefined,
                                        "type": "aws:cdk:logicalId",
                                      },
                                    ],
                                    "_validations": [],
                                    "host": [Circular],
                                    "id": "Resource",
                                    "scope": [Circular],
                                  },
                                  "policyDocument": {
                                    "Statement": [
                                      {
                                        "Action": "lambda:InvokeFunction",
                                        "Effect": "Allow",
                                        "Resource": [
                                          "\${Token[TOKEN.658]}",
                                          "\${Token[TOKEN.658]}:*",
                                        ],
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "policyName": "\${Token[TOKEN.688]}",
                                  "rawOverrides": {},
                                  "roles": [
                                    "#{Token[TOKEN.689]}",
                                  ],
                                  "stack": [Circular],
                                  "users": [
                                    "#{Token[TOKEN.690]}",
                                  ],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                              },
                              "_context": {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": [],
                              "_validations": [
                                {
                                  "validate": [Function],
                                },
                              ],
                              "host": [Circular],
                              "id": "DefaultPolicy",
                              "scope": [Circular],
                            },
                            "physicalName": "\${Token[TOKEN.688]}",
                            "referenceTaken": false,
                            "roles": [
                              [Circular],
                            ],
                            "stack": [Circular],
                            "users": [],
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                        ],
                      },
                      "defaultPolicy": Policy {
                        "_allowCrossEnvironment": false,
                        "_physicalName": "\${Token[TOKEN.688]}",
                        "_policyName": "\${Token[TOKEN.688]}",
                        "document": {
                          "Statement": [
                            {
                              "Action": "lambda:InvokeFunction",
                              "Effect": "Allow",
                              "Resource": [
                                "\${Token[TOKEN.658]}",
                                "\${Token[TOKEN.658]}:*",
                              ],
                            },
                          ],
                          "Version": "2012-10-17",
                        },
                        "env": {
                          "account": "\${Token[AWS.AccountId.2]}",
                          "region": "\${Token[AWS.Region.6]}",
                        },
                        "force": false,
                        "grantPrincipal": PolicyGrantPrincipal {
                          "_policy": [Circular],
                          "assumeRoleAction": "sts:AssumeRole",
                          "grantPrincipal": [Circular],
                          "principalAccount": "\${Token[AWS.AccountId.2]}",
                        },
                        "groups": [],
                        "node": Node {
                          "_children": {
                            "Resource": CfnPolicyConditional {
                              "_cfnProperties": {
                                "groups": [
                                  "#{Token[TOKEN.691]}",
                                ],
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "lambda:InvokeFunction",
                                      "Effect": "Allow",
                                      "Resource": [
                                        "\${Token[TOKEN.658]}",
                                        "\${Token[TOKEN.658]}:*",
                                      ],
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "policyName": "\${Token[TOKEN.688]}",
                                "roles": [
                                  "#{Token[TOKEN.689]}",
                                ],
                                "users": [
                                  "#{Token[TOKEN.690]}",
                                ],
                              },
                              "cfnOptions": {},
                              "cfnResourceType": "AWS::IAM::Policy",
                              "dependsOn": Set {},
                              "groups": [
                                "#{Token[TOKEN.691]}",
                              ],
                              "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                              "node": Node {
                                "_children": {},
                                "_context": {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": [
                                  {
                                    "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                    "trace": undefined,
                                    "type": "aws:cdk:logicalId",
                                  },
                                ],
                                "_validations": [],
                                "host": [Circular],
                                "id": "Resource",
                                "scope": [Circular],
                              },
                              "policyDocument": {
                                "Statement": [
                                  {
                                    "Action": "lambda:InvokeFunction",
                                    "Effect": "Allow",
                                    "Resource": [
                                      "\${Token[TOKEN.658]}",
                                      "\${Token[TOKEN.658]}:*",
                                    ],
                                  },
                                ],
                                "Version": "2012-10-17",
                              },
                              "policyName": "\${Token[TOKEN.688]}",
                              "rawOverrides": {},
                              "roles": [
                                "#{Token[TOKEN.689]}",
                              ],
                              "stack": [Circular],
                              "users": [
                                "#{Token[TOKEN.690]}",
                              ],
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [
                                  [Circular],
                                ],
                              },
                            },
                          },
                          "_context": {},
                          "_dependencies": Set {},
                          "_locked": false,
                          "_metadata": [],
                          "_validations": [
                            {
                              "validate": [Function],
                            },
                          ],
                          "host": [Circular],
                          "id": "DefaultPolicy",
                          "scope": [Circular],
                        },
                        "physicalName": "\${Token[TOKEN.688]}",
                        "referenceTaken": false,
                        "roles": [
                          [Circular],
                        ],
                        "stack": [Circular],
                        "users": [],
                        Symbol(@aws-cdk/core.DependableTrait): {
                          "dependencyRoots": [
                            [Circular],
                          ],
                        },
                      },
                      "dependables": Map {
                        {
                          "Action": "lambda:InvokeFunction",
                          "Effect": "Allow",
                          "Resource": [
                            "\${Token[TOKEN.658]}",
                            "\${Token[TOKEN.658]}:*",
                          ],
                        } => DependencyGroup {
                          "_deps": [],
                          Symbol(@aws-cdk/core.DependableTrait): {
                            "dependencyRoots": [],
                          },
                        },
                      },
                      "env": {
                        "account": "\${Token[AWS.AccountId.2]}",
                        "region": "\${Token[AWS.Region.6]}",
                      },
                      "grantPrincipal": [Circular],
                      "inlinePolicies": {},
                      "managedPolicies": [
                        AwsManagedPolicy {
                          "managedPolicyArn": "arn:\${Token[AWS.Partition.5]}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                        },
                      ],
                      "node": Node {
                        "_children": {
                          "DefaultPolicy": Policy {
                            "_allowCrossEnvironment": false,
                            "_physicalName": "\${Token[TOKEN.688]}",
                            "_policyName": "\${Token[TOKEN.688]}",
                            "document": {
                              "Statement": [
                                {
                                  "Action": "lambda:InvokeFunction",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "\${Token[TOKEN.658]}",
                                    "\${Token[TOKEN.658]}:*",
                                  ],
                                },
                              ],
                              "Version": "2012-10-17",
                            },
                            "env": {
                              "account": "\${Token[AWS.AccountId.2]}",
                              "region": "\${Token[AWS.Region.6]}",
                            },
                            "force": false,
                            "grantPrincipal": PolicyGrantPrincipal {
                              "_policy": [Circular],
                              "assumeRoleAction": "sts:AssumeRole",
                              "grantPrincipal": [Circular],
                              "principalAccount": "\${Token[AWS.AccountId.2]}",
                            },
                            "groups": [],
                            "node": Node {
                              "_children": {
                                "Resource": CfnPolicyConditional {
                                  "_cfnProperties": {
                                    "groups": [
                                      "#{Token[TOKEN.691]}",
                                    ],
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "lambda:InvokeFunction",
                                          "Effect": "Allow",
                                          "Resource": [
                                            "\${Token[TOKEN.658]}",
                                            "\${Token[TOKEN.658]}:*",
                                          ],
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "policyName": "\${Token[TOKEN.688]}",
                                    "roles": [
                                      "#{Token[TOKEN.689]}",
                                    ],
                                    "users": [
                                      "#{Token[TOKEN.690]}",
                                    ],
                                  },
                                  "cfnOptions": {},
                                  "cfnResourceType": "AWS::IAM::Policy",
                                  "dependsOn": Set {},
                                  "groups": [
                                    "#{Token[TOKEN.691]}",
                                  ],
                                  "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                  "node": Node {
                                    "_children": {},
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [
                                      {
                                        "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                        "trace": undefined,
                                        "type": "aws:cdk:logicalId",
                                      },
                                    ],
                                    "_validations": [],
                                    "host": [Circular],
                                    "id": "Resource",
                                    "scope": [Circular],
                                  },
                                  "policyDocument": {
                                    "Statement": [
                                      {
                                        "Action": "lambda:InvokeFunction",
                                        "Effect": "Allow",
                                        "Resource": [
                                          "\${Token[TOKEN.658]}",
                                          "\${Token[TOKEN.658]}:*",
                                        ],
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "policyName": "\${Token[TOKEN.688]}",
                                  "rawOverrides": {},
                                  "roles": [
                                    "#{Token[TOKEN.689]}",
                                  ],
                                  "stack": [Circular],
                                  "users": [
                                    "#{Token[TOKEN.690]}",
                                  ],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                              },
                              "_context": {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": [],
                              "_validations": [
                                {
                                  "validate": [Function],
                                },
                              ],
                              "host": [Circular],
                              "id": "DefaultPolicy",
                              "scope": [Circular],
                            },
                            "physicalName": "\${Token[TOKEN.688]}",
                            "referenceTaken": false,
                            "roles": [
                              [Circular],
                            ],
                            "stack": [Circular],
                            "users": [],
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                          "ImportServiceRole": ImportedRole {
                            "_allowCrossEnvironment": false,
                            "_physicalName": undefined,
                            "assumeRoleAction": "sts:AssumeRole",
                            "attachedPolicies": AttachedPolicies {
                              "policies": [],
                            },
                            "defaultPolicyName": undefined,
                            "env": {
                              "account": "\${Token[AWS.AccountId.2]}",
                              "region": "\${Token[AWS.Region.6]}",
                            },
                            "grantPrincipal": [Circular],
                            "node": Node {
                              "_children": {},
                              "_context": {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": [],
                              "_validations": [],
                              "host": [Circular],
                              "id": "ImportServiceRole",
                              "scope": [Circular],
                            },
                            "physicalName": "\${Token[TOKEN.667]}",
                            "policyFragment": PrincipalPolicyFragment {
                              "conditions": {},
                              "principalJson": {
                                "AWS": [
                                  "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                                ],
                              },
                            },
                            "principalAccount": "\${Token[AWS.AccountId.2]}",
                            "roleArn": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                            "roleName": "ServiceRole",
                            "stack": [Circular],
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                          "Resource": CfnRole {
                            "_cfnProperties": {
                              "assumeRolePolicyDocument": {
                                "Statement": [
                                  {
                                    "Action": "sts:AssumeRole",
                                    "Effect": "Allow",
                                    "Principal": {
                                      "Service": "\${Token[lambda.amazonaws.com.666]}",
                                    },
                                  },
                                ],
                                "Version": "2012-10-17",
                              },
                              "description": undefined,
                              "managedPolicyArns": [
                                "#{Token[TOKEN.668]}",
                              ],
                              "maxSessionDuration": undefined,
                              "path": undefined,
                              "permissionsBoundary": undefined,
                              "policies": undefined,
                              "roleName": "\${Token[TOKEN.665]}",
                            },
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "\${Token[lambda.amazonaws.com.666]}",
                                  },
                                },
                              ],
                              "Version": "2012-10-17",
                            },
                            "attrArn": "\${Token[TOKEN.670]}",
                            "attrRoleId": "\${Token[TOKEN.671]}",
                            "cfnOptions": {},
                            "cfnResourceType": "AWS::IAM::Role",
                            "dependsOn": Set {},
                            "description": undefined,
                            "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.Resource.LogicalID.669]}",
                            "managedPolicyArns": [
                              "#{Token[TOKEN.668]}",
                            ],
                            "maxSessionDuration": undefined,
                            "node": Node {
                              "_children": {},
                              "_context": {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": [
                                {
                                  "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.Resource.LogicalID.669]}",
                                  "trace": undefined,
                                  "type": "aws:cdk:logicalId",
                                },
                              ],
                              "_validations": [],
                              "host": [Circular],
                              "id": "Resource",
                              "scope": [Circular],
                            },
                            "path": undefined,
                            "permissionsBoundary": undefined,
                            "policies": undefined,
                            "rawOverrides": {},
                            "roleName": "\${Token[TOKEN.665]}",
                            "stack": [Circular],
                            "tags": TagManager {
                              "initialTagPriority": 50,
                              "priorities": Map {},
                              "renderedTags": "<unresolved-lazy>",
                              "resourceTypeName": "AWS::IAM::Role",
                              "tagFormatter": StandardFormatter {},
                              "tagPropertyName": "tags",
                              "tags": Map {},
                            },
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                        },
                        "_context": {},
                        "_dependencies": Set {},
                        "_locked": false,
                        "_metadata": [],
                        "_validations": [
                          {
                            "validate": [Function],
                          },
                        ],
                        "host": [Circular],
                        "id": "ServiceRole",
                        "scope": [Circular],
                      },
                      "permissionsBoundary": undefined,
                      "physicalName": "\${Token[TOKEN.665]}",
                      "policyFragment": PrincipalPolicyFragment {
                        "conditions": {},
                        "principalJson": {
                          "AWS": [
                            "\${Token[TOKEN.672]}",
                          ],
                        },
                      },
                      "principalAccount": "\${Token[AWS.AccountId.2]}",
                      "roleArn": "\${Token[TOKEN.672]}",
                      "roleName": "\${Token[TOKEN.674]}",
                      "stack": [Circular],
                      Symbol(@aws-cdk/core.DependableTrait): {
                        "dependencyRoots": [
                          [Circular],
                        ],
                      },
                    },
                    "hashMixins": [],
                    "node": Node {
                      "_children": {
                        "Code": Asset {
                          "assetHash": "903be65b9594a9f17d7120273620367e7830b6d087fc9591f31dc5a080049e46",
                          "assetPath": "asset.903be65b9594a9f17d7120273620367e7830b6d087fc9591f31dc5a080049e46",
                          "bucket": Import {
                            "_allowCrossEnvironment": false,
                            "_physicalName": undefined,
                            "autoCreatePolicy": false,
                            "bucketArn": "arn:\${Token[AWS.Partition.5]}:s3:::\${Token[TOKEN.676]}",
                            "bucketDomainName": "\${Token[TOKEN.676]}.s3.\${Token[AWS.URLSuffix.3]}",
                            "bucketDualStackDomainName": "\${Token[TOKEN.676]}.s3.dualstack.\${Token[AWS.Region.6]}.\${Token[AWS.URLSuffix.3]}",
                            "bucketName": "\${Token[TOKEN.676]}",
                            "bucketRegionalDomainName": "\${Token[TOKEN.676]}.s3.\${Token[AWS.Region.6]}.\${Token[AWS.URLSuffix.3]}",
                            "bucketWebsiteDomainName": "\${Token[TOKEN.676]}.\${Token[TOKEN.678]}",
                            "bucketWebsiteNewUrlFormat": false,
                            "bucketWebsiteUrl": "http://\${Token[TOKEN.676]}.\${Token[TOKEN.678]}",
                            "disallowPublicAccess": false,
                            "encryptionKey": undefined,
                            "env": {
                              "account": "\${Token[AWS.AccountId.2]}",
                              "region": "\${Token[AWS.Region.6]}",
                            },
                            "isWebsite": false,
                            "node": Node {
                              "_children": {},
                              "_context": {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": [],
                              "_validations": [
                                {
                                  "validate": [Function],
                                },
                              ],
                              "host": [Circular],
                              "id": "AssetBucket",
                              "scope": [Circular],
                            },
                            "notificationsHandlerRole": undefined,
                            "physicalName": "\${Token[TOKEN.679]}",
                            "policy": undefined,
                            "stack": [Circular],
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                          "httpUrl": "\${Token[TOKEN.675]}",
                          "isBundled": false,
                          "isFile": false,
                          "isZipArchive": true,
                          "node": Node {
                            "_children": {
                              "AssetBucket": Import {
                                "_allowCrossEnvironment": false,
                                "_physicalName": undefined,
                                "autoCreatePolicy": false,
                                "bucketArn": "arn:\${Token[AWS.Partition.5]}:s3:::\${Token[TOKEN.676]}",
                                "bucketDomainName": "\${Token[TOKEN.676]}.s3.\${Token[AWS.URLSuffix.3]}",
                                "bucketDualStackDomainName": "\${Token[TOKEN.676]}.s3.dualstack.\${Token[AWS.Region.6]}.\${Token[AWS.URLSuffix.3]}",
                                "bucketName": "\${Token[TOKEN.676]}",
                                "bucketRegionalDomainName": "\${Token[TOKEN.676]}.s3.\${Token[AWS.Region.6]}.\${Token[AWS.URLSuffix.3]}",
                                "bucketWebsiteDomainName": "\${Token[TOKEN.676]}.\${Token[TOKEN.678]}",
                                "bucketWebsiteNewUrlFormat": false,
                                "bucketWebsiteUrl": "http://\${Token[TOKEN.676]}.\${Token[TOKEN.678]}",
                                "disallowPublicAccess": false,
                                "encryptionKey": undefined,
                                "env": {
                                  "account": "\${Token[AWS.AccountId.2]}",
                                  "region": "\${Token[AWS.Region.6]}",
                                },
                                "isWebsite": false,
                                "node": Node {
                                  "_children": {},
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [],
                                  "_validations": [
                                    {
                                      "validate": [Function],
                                    },
                                  ],
                                  "host": [Circular],
                                  "id": "AssetBucket",
                                  "scope": [Circular],
                                },
                                "notificationsHandlerRole": undefined,
                                "physicalName": "\${Token[TOKEN.679]}",
                                "policy": undefined,
                                "stack": [Circular],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                              "Stage": AssetStaging {
                                "absoluteStagedPath": "/private/var/folders/tn/799yyvm92g74fj_thj2z7w140000gr/T/cdk-test-app-WFT8EN/asset.903be65b9594a9f17d7120273620367e7830b6d087fc9591f31dc5a080049e46",
                                "assetHash": "903be65b9594a9f17d7120273620367e7830b6d087fc9591f31dc5a080049e46",
                                "assetOutdir": "/private/var/folders/tn/799yyvm92g74fj_thj2z7w140000gr/T/cdk-test-app-WFT8EN",
                                "cacheKey": "d22374b7156fb41ff718678ed8dd7c65d1393bc2a81b4585d0905e2a290f281a",
                                "customSourceFingerprint": undefined,
                                "fingerprintOptions": {
                                  "assetHash": undefined,
                                  "exclude": [
                                    "*.ts",
                                  ],
                                  "extraHash": undefined,
                                  "follow": undefined,
                                  "path": "/Users/rverma/dev/aws/nsl-saas-accelerator/packages/constructs/node_modules/aws-cdk-lib/custom-resources/lib/provider-framework/runtime",
                                  "sourcePath": "/Users/rverma/dev/aws/nsl-saas-accelerator/packages/constructs/node_modules/aws-cdk-lib/custom-resources/lib/provider-framework/runtime",
                                },
                                "hashType": "source",
                                "isArchive": true,
                                "node": Node {
                                  "_children": {},
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [],
                                  "_validations": [],
                                  "host": [Circular],
                                  "id": "Stage",
                                  "scope": [Circular],
                                },
                                "packaging": "zip",
                                "sourcePath": "/Users/rverma/dev/aws/nsl-saas-accelerator/packages/constructs/node_modules/aws-cdk-lib/custom-resources/lib/provider-framework/runtime",
                                "sourceStats": Stats {
                                  "atime": 2023-04-19T02:38:43.261Z,
                                  "atimeMs": 1681871923261.3042,
                                  "birthtime": 2023-04-19T02:37:35.005Z,
                                  "birthtimeMs": 1681871855004.6274,
                                  "blksize": 4096,
                                  "blocks": 0,
                                  "ctime": 2023-04-19T02:37:35.007Z,
                                  "ctimeMs": 1681871855007.1067,
                                  "dev": 16777233,
                                  "gid": 20,
                                  "ino": 64198660,
                                  "mode": 16877,
                                  "mtime": 2023-04-19T02:37:35.007Z,
                                  "mtimeMs": 1681871855007.1067,
                                  "nlink": 12,
                                  "rdev": 0,
                                  "size": 384,
                                  "uid": 504,
                                },
                                "stagedPath": "/private/var/folders/tn/799yyvm92g74fj_thj2z7w140000gr/T/cdk-test-app-WFT8EN/asset.903be65b9594a9f17d7120273620367e7830b6d087fc9591f31dc5a080049e46",
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                            },
                            "_context": {},
                            "_dependencies": Set {},
                            "_locked": false,
                            "_metadata": [],
                            "_validations": [],
                            "host": [Circular],
                            "id": "Code",
                            "scope": [Circular],
                          },
                          "s3BucketName": "\${Token[TOKEN.676]}",
                          "s3ObjectKey": "REPLACED-GENERATED-NAME.zip",
                          "s3ObjectUrl": "\${Token[TOKEN.677]}",
                          "s3Url": "\${Token[TOKEN.675]}",
                          "sourceHash": "903be65b9594a9f17d7120273620367e7830b6d087fc9591f31dc5a080049e46",
                          Symbol(@aws-cdk/core.DependableTrait): {
                            "dependencyRoots": [
                              [Circular],
                            ],
                          },
                        },
                        "Resource": CfnFunction {
                          "_cfnProperties": {
                            "architectures": undefined,
                            "code": {
                              "imageUri": undefined,
                              "s3Bucket": "\${Token[TOKEN.676]}",
                              "s3Key": "REPLACED-GENERATED-NAME.zip",
                              "s3ObjectVersion": undefined,
                              "zipFile": undefined,
                            },
                            "codeSigningConfigArn": undefined,
                            "deadLetterConfig": undefined,
                            "description": "AWS CDK resource provider framework - onEvent (Default/codeCommitSecret/Custom::GitopsSecrets)",
                            "environment": "<unresolved-lazy>",
                            "ephemeralStorage": undefined,
                            "fileSystemConfigs": undefined,
                            "functionName": "\${Token[TOKEN.664]}",
                            "handler": "framework.onEvent",
                            "imageConfig": undefined,
                            "kmsKeyArn": undefined,
                            "layers": [
                              "#{Token[TOKEN.680]}",
                            ],
                            "memorySize": undefined,
                            "packageType": undefined,
                            "reservedConcurrentExecutions": undefined,
                            "role": "\${Token[TOKEN.672]}",
                            "runtime": "nodejs14.x",
                            "runtimeManagementConfig": undefined,
                            "timeout": 900,
                            "vpcConfig": undefined,
                          },
                          "architectures": undefined,
                          "attrArn": "\${Token[TOKEN.682]}",
                          "attrSnapStartResponseApplyOn": "\${Token[TOKEN.683]}",
                          "attrSnapStartResponseOptimizationStatus": "\${Token[TOKEN.684]}",
                          "cfnOptions": {},
                          "cfnResourceType": "AWS::Lambda::Function",
                          "code": {
                            "imageUri": undefined,
                            "s3Bucket": "\${Token[TOKEN.676]}",
                            "s3Key": "REPLACED-GENERATED-NAME.zip",
                            "s3ObjectVersion": undefined,
                            "zipFile": undefined,
                          },
                          "codeSigningConfigArn": undefined,
                          "deadLetterConfig": undefined,
                          "dependsOn": Set {},
                          "description": "AWS CDK resource provider framework - onEvent (Default/codeCommitSecret/Custom::GitopsSecrets)",
                          "environment": "<unresolved-lazy>",
                          "ephemeralStorage": undefined,
                          "fileSystemConfigs": undefined,
                          "functionName": "\${Token[TOKEN.664]}",
                          "handler": "framework.onEvent",
                          "imageConfig": undefined,
                          "kmsKeyArn": undefined,
                          "layers": [
                            "#{Token[TOKEN.680]}",
                          ],
                          "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.Resource.LogicalID.681]}",
                          "memorySize": undefined,
                          "node": Node {
                            "_children": {},
                            "_context": {},
                            "_dependencies": Set {
                              Role {
                                "_allowCrossEnvironment": false,
                                "_didSplit": false,
                                "_physicalName": undefined,
                                "_roleId": "\${Token[TOKEN.671]}",
                                "assumeRoleAction": "sts:AssumeRole",
                                "assumeRolePolicy": {
                                  "Statement": [
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Principal": {
                                        "Service": "\${Token[lambda.amazonaws.com.666]}",
                                      },
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "attachedPolicies": AttachedPolicies {
                                  "policies": [
                                    Policy {
                                      "_allowCrossEnvironment": false,
                                      "_physicalName": "\${Token[TOKEN.688]}",
                                      "_policyName": "\${Token[TOKEN.688]}",
                                      "document": {
                                        "Statement": [
                                          {
                                            "Action": "lambda:InvokeFunction",
                                            "Effect": "Allow",
                                            "Resource": [
                                              "\${Token[TOKEN.658]}",
                                              "\${Token[TOKEN.658]}:*",
                                            ],
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "env": {
                                        "account": "\${Token[AWS.AccountId.2]}",
                                        "region": "\${Token[AWS.Region.6]}",
                                      },
                                      "force": false,
                                      "grantPrincipal": PolicyGrantPrincipal {
                                        "_policy": [Circular],
                                        "assumeRoleAction": "sts:AssumeRole",
                                        "grantPrincipal": [Circular],
                                        "principalAccount": "\${Token[AWS.AccountId.2]}",
                                      },
                                      "groups": [],
                                      "node": Node {
                                        "_children": {
                                          "Resource": CfnPolicyConditional {
                                            "_cfnProperties": {
                                              "groups": [
                                                "#{Token[TOKEN.691]}",
                                              ],
                                              "policyDocument": {
                                                "Statement": [
                                                  {
                                                    "Action": "lambda:InvokeFunction",
                                                    "Effect": "Allow",
                                                    "Resource": [
                                                      "\${Token[TOKEN.658]}",
                                                      "\${Token[TOKEN.658]}:*",
                                                    ],
                                                  },
                                                ],
                                                "Version": "2012-10-17",
                                              },
                                              "policyName": "\${Token[TOKEN.688]}",
                                              "roles": [
                                                "#{Token[TOKEN.689]}",
                                              ],
                                              "users": [
                                                "#{Token[TOKEN.690]}",
                                              ],
                                            },
                                            "cfnOptions": {},
                                            "cfnResourceType": "AWS::IAM::Policy",
                                            "dependsOn": Set {},
                                            "groups": [
                                              "#{Token[TOKEN.691]}",
                                            ],
                                            "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                            "node": Node {
                                              "_children": {},
                                              "_context": {},
                                              "_dependencies": Set {},
                                              "_locked": false,
                                              "_metadata": [
                                                {
                                                  "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                                  "trace": undefined,
                                                  "type": "aws:cdk:logicalId",
                                                },
                                              ],
                                              "_validations": [],
                                              "host": [Circular],
                                              "id": "Resource",
                                              "scope": [Circular],
                                            },
                                            "policyDocument": {
                                              "Statement": [
                                                {
                                                  "Action": "lambda:InvokeFunction",
                                                  "Effect": "Allow",
                                                  "Resource": [
                                                    "\${Token[TOKEN.658]}",
                                                    "\${Token[TOKEN.658]}:*",
                                                  ],
                                                },
                                              ],
                                              "Version": "2012-10-17",
                                            },
                                            "policyName": "\${Token[TOKEN.688]}",
                                            "rawOverrides": {},
                                            "roles": [
                                              "#{Token[TOKEN.689]}",
                                            ],
                                            "stack": [Circular],
                                            "users": [
                                              "#{Token[TOKEN.690]}",
                                            ],
                                            Symbol(@aws-cdk/core.DependableTrait): {
                                              "dependencyRoots": [
                                                [Circular],
                                              ],
                                            },
                                          },
                                        },
                                        "_context": {},
                                        "_dependencies": Set {},
                                        "_locked": false,
                                        "_metadata": [],
                                        "_validations": [
                                          {
                                            "validate": [Function],
                                          },
                                        ],
                                        "host": [Circular],
                                        "id": "DefaultPolicy",
                                        "scope": [Circular],
                                      },
                                      "physicalName": "\${Token[TOKEN.688]}",
                                      "referenceTaken": false,
                                      "roles": [
                                        [Circular],
                                      ],
                                      "stack": [Circular],
                                      "users": [],
                                      Symbol(@aws-cdk/core.DependableTrait): {
                                        "dependencyRoots": [
                                          [Circular],
                                        ],
                                      },
                                    },
                                  ],
                                },
                                "defaultPolicy": Policy {
                                  "_allowCrossEnvironment": false,
                                  "_physicalName": "\${Token[TOKEN.688]}",
                                  "_policyName": "\${Token[TOKEN.688]}",
                                  "document": {
                                    "Statement": [
                                      {
                                        "Action": "lambda:InvokeFunction",
                                        "Effect": "Allow",
                                        "Resource": [
                                          "\${Token[TOKEN.658]}",
                                          "\${Token[TOKEN.658]}:*",
                                        ],
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "env": {
                                    "account": "\${Token[AWS.AccountId.2]}",
                                    "region": "\${Token[AWS.Region.6]}",
                                  },
                                  "force": false,
                                  "grantPrincipal": PolicyGrantPrincipal {
                                    "_policy": [Circular],
                                    "assumeRoleAction": "sts:AssumeRole",
                                    "grantPrincipal": [Circular],
                                    "principalAccount": "\${Token[AWS.AccountId.2]}",
                                  },
                                  "groups": [],
                                  "node": Node {
                                    "_children": {
                                      "Resource": CfnPolicyConditional {
                                        "_cfnProperties": {
                                          "groups": [
                                            "#{Token[TOKEN.691]}",
                                          ],
                                          "policyDocument": {
                                            "Statement": [
                                              {
                                                "Action": "lambda:InvokeFunction",
                                                "Effect": "Allow",
                                                "Resource": [
                                                  "\${Token[TOKEN.658]}",
                                                  "\${Token[TOKEN.658]}:*",
                                                ],
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "policyName": "\${Token[TOKEN.688]}",
                                          "roles": [
                                            "#{Token[TOKEN.689]}",
                                          ],
                                          "users": [
                                            "#{Token[TOKEN.690]}",
                                          ],
                                        },
                                        "cfnOptions": {},
                                        "cfnResourceType": "AWS::IAM::Policy",
                                        "dependsOn": Set {},
                                        "groups": [
                                          "#{Token[TOKEN.691]}",
                                        ],
                                        "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                        "node": Node {
                                          "_children": {},
                                          "_context": {},
                                          "_dependencies": Set {},
                                          "_locked": false,
                                          "_metadata": [
                                            {
                                              "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                              "trace": undefined,
                                              "type": "aws:cdk:logicalId",
                                            },
                                          ],
                                          "_validations": [],
                                          "host": [Circular],
                                          "id": "Resource",
                                          "scope": [Circular],
                                        },
                                        "policyDocument": {
                                          "Statement": [
                                            {
                                              "Action": "lambda:InvokeFunction",
                                              "Effect": "Allow",
                                              "Resource": [
                                                "\${Token[TOKEN.658]}",
                                                "\${Token[TOKEN.658]}:*",
                                              ],
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "policyName": "\${Token[TOKEN.688]}",
                                        "rawOverrides": {},
                                        "roles": [
                                          "#{Token[TOKEN.689]}",
                                        ],
                                        "stack": [Circular],
                                        "users": [
                                          "#{Token[TOKEN.690]}",
                                        ],
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [
                                            [Circular],
                                          ],
                                        },
                                      },
                                    },
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [],
                                    "_validations": [
                                      {
                                        "validate": [Function],
                                      },
                                    ],
                                    "host": [Circular],
                                    "id": "DefaultPolicy",
                                    "scope": [Circular],
                                  },
                                  "physicalName": "\${Token[TOKEN.688]}",
                                  "referenceTaken": false,
                                  "roles": [
                                    [Circular],
                                  ],
                                  "stack": [Circular],
                                  "users": [],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                                "dependables": Map {
                                  {
                                    "Action": "lambda:InvokeFunction",
                                    "Effect": "Allow",
                                    "Resource": [
                                      "\${Token[TOKEN.658]}",
                                      "\${Token[TOKEN.658]}:*",
                                    ],
                                  } => DependencyGroup {
                                    "_deps": [],
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [],
                                    },
                                  },
                                },
                                "env": {
                                  "account": "\${Token[AWS.AccountId.2]}",
                                  "region": "\${Token[AWS.Region.6]}",
                                },
                                "grantPrincipal": [Circular],
                                "inlinePolicies": {},
                                "managedPolicies": [
                                  AwsManagedPolicy {
                                    "managedPolicyArn": "arn:\${Token[AWS.Partition.5]}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                                  },
                                ],
                                "node": Node {
                                  "_children": {
                                    "DefaultPolicy": Policy {
                                      "_allowCrossEnvironment": false,
                                      "_physicalName": "\${Token[TOKEN.688]}",
                                      "_policyName": "\${Token[TOKEN.688]}",
                                      "document": {
                                        "Statement": [
                                          {
                                            "Action": "lambda:InvokeFunction",
                                            "Effect": "Allow",
                                            "Resource": [
                                              "\${Token[TOKEN.658]}",
                                              "\${Token[TOKEN.658]}:*",
                                            ],
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "env": {
                                        "account": "\${Token[AWS.AccountId.2]}",
                                        "region": "\${Token[AWS.Region.6]}",
                                      },
                                      "force": false,
                                      "grantPrincipal": PolicyGrantPrincipal {
                                        "_policy": [Circular],
                                        "assumeRoleAction": "sts:AssumeRole",
                                        "grantPrincipal": [Circular],
                                        "principalAccount": "\${Token[AWS.AccountId.2]}",
                                      },
                                      "groups": [],
                                      "node": Node {
                                        "_children": {
                                          "Resource": CfnPolicyConditional {
                                            "_cfnProperties": {
                                              "groups": [
                                                "#{Token[TOKEN.691]}",
                                              ],
                                              "policyDocument": {
                                                "Statement": [
                                                  {
                                                    "Action": "lambda:InvokeFunction",
                                                    "Effect": "Allow",
                                                    "Resource": [
                                                      "\${Token[TOKEN.658]}",
                                                      "\${Token[TOKEN.658]}:*",
                                                    ],
                                                  },
                                                ],
                                                "Version": "2012-10-17",
                                              },
                                              "policyName": "\${Token[TOKEN.688]}",
                                              "roles": [
                                                "#{Token[TOKEN.689]}",
                                              ],
                                              "users": [
                                                "#{Token[TOKEN.690]}",
                                              ],
                                            },
                                            "cfnOptions": {},
                                            "cfnResourceType": "AWS::IAM::Policy",
                                            "dependsOn": Set {},
                                            "groups": [
                                              "#{Token[TOKEN.691]}",
                                            ],
                                            "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                            "node": Node {
                                              "_children": {},
                                              "_context": {},
                                              "_dependencies": Set {},
                                              "_locked": false,
                                              "_metadata": [
                                                {
                                                  "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                                  "trace": undefined,
                                                  "type": "aws:cdk:logicalId",
                                                },
                                              ],
                                              "_validations": [],
                                              "host": [Circular],
                                              "id": "Resource",
                                              "scope": [Circular],
                                            },
                                            "policyDocument": {
                                              "Statement": [
                                                {
                                                  "Action": "lambda:InvokeFunction",
                                                  "Effect": "Allow",
                                                  "Resource": [
                                                    "\${Token[TOKEN.658]}",
                                                    "\${Token[TOKEN.658]}:*",
                                                  ],
                                                },
                                              ],
                                              "Version": "2012-10-17",
                                            },
                                            "policyName": "\${Token[TOKEN.688]}",
                                            "rawOverrides": {},
                                            "roles": [
                                              "#{Token[TOKEN.689]}",
                                            ],
                                            "stack": [Circular],
                                            "users": [
                                              "#{Token[TOKEN.690]}",
                                            ],
                                            Symbol(@aws-cdk/core.DependableTrait): {
                                              "dependencyRoots": [
                                                [Circular],
                                              ],
                                            },
                                          },
                                        },
                                        "_context": {},
                                        "_dependencies": Set {},
                                        "_locked": false,
                                        "_metadata": [],
                                        "_validations": [
                                          {
                                            "validate": [Function],
                                          },
                                        ],
                                        "host": [Circular],
                                        "id": "DefaultPolicy",
                                        "scope": [Circular],
                                      },
                                      "physicalName": "\${Token[TOKEN.688]}",
                                      "referenceTaken": false,
                                      "roles": [
                                        [Circular],
                                      ],
                                      "stack": [Circular],
                                      "users": [],
                                      Symbol(@aws-cdk/core.DependableTrait): {
                                        "dependencyRoots": [
                                          [Circular],
                                        ],
                                      },
                                    },
                                    "ImportServiceRole": ImportedRole {
                                      "_allowCrossEnvironment": false,
                                      "_physicalName": undefined,
                                      "assumeRoleAction": "sts:AssumeRole",
                                      "attachedPolicies": AttachedPolicies {
                                        "policies": [],
                                      },
                                      "defaultPolicyName": undefined,
                                      "env": {
                                        "account": "\${Token[AWS.AccountId.2]}",
                                        "region": "\${Token[AWS.Region.6]}",
                                      },
                                      "grantPrincipal": [Circular],
                                      "node": Node {
                                        "_children": {},
                                        "_context": {},
                                        "_dependencies": Set {},
                                        "_locked": false,
                                        "_metadata": [],
                                        "_validations": [],
                                        "host": [Circular],
                                        "id": "ImportServiceRole",
                                        "scope": [Circular],
                                      },
                                      "physicalName": "\${Token[TOKEN.667]}",
                                      "policyFragment": PrincipalPolicyFragment {
                                        "conditions": {},
                                        "principalJson": {
                                          "AWS": [
                                            "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                                          ],
                                        },
                                      },
                                      "principalAccount": "\${Token[AWS.AccountId.2]}",
                                      "roleArn": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                                      "roleName": "ServiceRole",
                                      "stack": [Circular],
                                      Symbol(@aws-cdk/core.DependableTrait): {
                                        "dependencyRoots": [
                                          [Circular],
                                        ],
                                      },
                                    },
                                    "Resource": CfnRole {
                                      "_cfnProperties": {
                                        "assumeRolePolicyDocument": {
                                          "Statement": [
                                            {
                                              "Action": "sts:AssumeRole",
                                              "Effect": "Allow",
                                              "Principal": {
                                                "Service": "\${Token[lambda.amazonaws.com.666]}",
                                              },
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "description": undefined,
                                        "managedPolicyArns": [
                                          "#{Token[TOKEN.668]}",
                                        ],
                                        "maxSessionDuration": undefined,
                                        "path": undefined,
                                        "permissionsBoundary": undefined,
                                        "policies": undefined,
                                        "roleName": "\${Token[TOKEN.665]}",
                                      },
                                      "assumeRolePolicyDocument": {
                                        "Statement": [
                                          {
                                            "Action": "sts:AssumeRole",
                                            "Effect": "Allow",
                                            "Principal": {
                                              "Service": "\${Token[lambda.amazonaws.com.666]}",
                                            },
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "attrArn": "\${Token[TOKEN.670]}",
                                      "attrRoleId": "\${Token[TOKEN.671]}",
                                      "cfnOptions": {},
                                      "cfnResourceType": "AWS::IAM::Role",
                                      "dependsOn": Set {},
                                      "description": undefined,
                                      "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.Resource.LogicalID.669]}",
                                      "managedPolicyArns": [
                                        "#{Token[TOKEN.668]}",
                                      ],
                                      "maxSessionDuration": undefined,
                                      "node": Node {
                                        "_children": {},
                                        "_context": {},
                                        "_dependencies": Set {},
                                        "_locked": false,
                                        "_metadata": [
                                          {
                                            "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.Resource.LogicalID.669]}",
                                            "trace": undefined,
                                            "type": "aws:cdk:logicalId",
                                          },
                                        ],
                                        "_validations": [],
                                        "host": [Circular],
                                        "id": "Resource",
                                        "scope": [Circular],
                                      },
                                      "path": undefined,
                                      "permissionsBoundary": undefined,
                                      "policies": undefined,
                                      "rawOverrides": {},
                                      "roleName": "\${Token[TOKEN.665]}",
                                      "stack": [Circular],
                                      "tags": TagManager {
                                        "initialTagPriority": 50,
                                        "priorities": Map {},
                                        "renderedTags": "<unresolved-lazy>",
                                        "resourceTypeName": "AWS::IAM::Role",
                                        "tagFormatter": StandardFormatter {},
                                        "tagPropertyName": "tags",
                                        "tags": Map {},
                                      },
                                      Symbol(@aws-cdk/core.DependableTrait): {
                                        "dependencyRoots": [
                                          [Circular],
                                        ],
                                      },
                                    },
                                  },
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [],
                                  "_validations": [
                                    {
                                      "validate": [Function],
                                    },
                                  ],
                                  "host": [Circular],
                                  "id": "ServiceRole",
                                  "scope": [Circular],
                                },
                                "permissionsBoundary": undefined,
                                "physicalName": "\${Token[TOKEN.665]}",
                                "policyFragment": PrincipalPolicyFragment {
                                  "conditions": {},
                                  "principalJson": {
                                    "AWS": [
                                      "\${Token[TOKEN.672]}",
                                    ],
                                  },
                                },
                                "principalAccount": "\${Token[AWS.AccountId.2]}",
                                "roleArn": "\${Token[TOKEN.672]}",
                                "roleName": "\${Token[TOKEN.674]}",
                                "stack": [Circular],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                            },
                            "_locked": false,
                            "_metadata": [
                              {
                                "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.Resource.LogicalID.681]}",
                                "trace": undefined,
                                "type": "aws:cdk:logicalId",
                              },
                            ],
                            "_validations": [],
                            "host": [Circular],
                            "id": "Resource",
                            "scope": [Circular],
                          },
                          "packageType": undefined,
                          "rawOverrides": {},
                          "reservedConcurrentExecutions": undefined,
                          "role": "\${Token[TOKEN.672]}",
                          "runtime": "nodejs14.x",
                          "runtimeManagementConfig": undefined,
                          "snapStart": undefined,
                          "stack": [Circular],
                          "tags": TagManager {
                            "initialTagPriority": 50,
                            "priorities": Map {},
                            "renderedTags": "<unresolved-lazy>",
                            "resourceTypeName": "AWS::Lambda::Function",
                            "tagFormatter": StandardFormatter {},
                            "tagPropertyName": "tags",
                            "tags": Map {},
                          },
                          "timeout": 900,
                          "tracingConfig": undefined,
                          "vpcConfig": undefined,
                          Symbol(@aws-cdk/core.DependableTrait): {
                            "dependencyRoots": [
                              [Circular],
                            ],
                          },
                        },
                        "ServiceRole": Role {
                          "_allowCrossEnvironment": false,
                          "_didSplit": false,
                          "_physicalName": undefined,
                          "_roleId": "\${Token[TOKEN.671]}",
                          "assumeRoleAction": "sts:AssumeRole",
                          "assumeRolePolicy": {
                            "Statement": [
                              {
                                "Action": "sts:AssumeRole",
                                "Effect": "Allow",
                                "Principal": {
                                  "Service": "\${Token[lambda.amazonaws.com.666]}",
                                },
                              },
                            ],
                            "Version": "2012-10-17",
                          },
                          "attachedPolicies": AttachedPolicies {
                            "policies": [
                              Policy {
                                "_allowCrossEnvironment": false,
                                "_physicalName": "\${Token[TOKEN.688]}",
                                "_policyName": "\${Token[TOKEN.688]}",
                                "document": {
                                  "Statement": [
                                    {
                                      "Action": "lambda:InvokeFunction",
                                      "Effect": "Allow",
                                      "Resource": [
                                        "\${Token[TOKEN.658]}",
                                        "\${Token[TOKEN.658]}:*",
                                      ],
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "env": {
                                  "account": "\${Token[AWS.AccountId.2]}",
                                  "region": "\${Token[AWS.Region.6]}",
                                },
                                "force": false,
                                "grantPrincipal": PolicyGrantPrincipal {
                                  "_policy": [Circular],
                                  "assumeRoleAction": "sts:AssumeRole",
                                  "grantPrincipal": [Circular],
                                  "principalAccount": "\${Token[AWS.AccountId.2]}",
                                },
                                "groups": [],
                                "node": Node {
                                  "_children": {
                                    "Resource": CfnPolicyConditional {
                                      "_cfnProperties": {
                                        "groups": [
                                          "#{Token[TOKEN.691]}",
                                        ],
                                        "policyDocument": {
                                          "Statement": [
                                            {
                                              "Action": "lambda:InvokeFunction",
                                              "Effect": "Allow",
                                              "Resource": [
                                                "\${Token[TOKEN.658]}",
                                                "\${Token[TOKEN.658]}:*",
                                              ],
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "policyName": "\${Token[TOKEN.688]}",
                                        "roles": [
                                          "#{Token[TOKEN.689]}",
                                        ],
                                        "users": [
                                          "#{Token[TOKEN.690]}",
                                        ],
                                      },
                                      "cfnOptions": {},
                                      "cfnResourceType": "AWS::IAM::Policy",
                                      "dependsOn": Set {},
                                      "groups": [
                                        "#{Token[TOKEN.691]}",
                                      ],
                                      "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                      "node": Node {
                                        "_children": {},
                                        "_context": {},
                                        "_dependencies": Set {},
                                        "_locked": false,
                                        "_metadata": [
                                          {
                                            "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                            "trace": undefined,
                                            "type": "aws:cdk:logicalId",
                                          },
                                        ],
                                        "_validations": [],
                                        "host": [Circular],
                                        "id": "Resource",
                                        "scope": [Circular],
                                      },
                                      "policyDocument": {
                                        "Statement": [
                                          {
                                            "Action": "lambda:InvokeFunction",
                                            "Effect": "Allow",
                                            "Resource": [
                                              "\${Token[TOKEN.658]}",
                                              "\${Token[TOKEN.658]}:*",
                                            ],
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "policyName": "\${Token[TOKEN.688]}",
                                      "rawOverrides": {},
                                      "roles": [
                                        "#{Token[TOKEN.689]}",
                                      ],
                                      "stack": [Circular],
                                      "users": [
                                        "#{Token[TOKEN.690]}",
                                      ],
                                      Symbol(@aws-cdk/core.DependableTrait): {
                                        "dependencyRoots": [
                                          [Circular],
                                        ],
                                      },
                                    },
                                  },
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [],
                                  "_validations": [
                                    {
                                      "validate": [Function],
                                    },
                                  ],
                                  "host": [Circular],
                                  "id": "DefaultPolicy",
                                  "scope": [Circular],
                                },
                                "physicalName": "\${Token[TOKEN.688]}",
                                "referenceTaken": false,
                                "roles": [
                                  [Circular],
                                ],
                                "stack": [Circular],
                                "users": [],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                            ],
                          },
                          "defaultPolicy": Policy {
                            "_allowCrossEnvironment": false,
                            "_physicalName": "\${Token[TOKEN.688]}",
                            "_policyName": "\${Token[TOKEN.688]}",
                            "document": {
                              "Statement": [
                                {
                                  "Action": "lambda:InvokeFunction",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "\${Token[TOKEN.658]}",
                                    "\${Token[TOKEN.658]}:*",
                                  ],
                                },
                              ],
                              "Version": "2012-10-17",
                            },
                            "env": {
                              "account": "\${Token[AWS.AccountId.2]}",
                              "region": "\${Token[AWS.Region.6]}",
                            },
                            "force": false,
                            "grantPrincipal": PolicyGrantPrincipal {
                              "_policy": [Circular],
                              "assumeRoleAction": "sts:AssumeRole",
                              "grantPrincipal": [Circular],
                              "principalAccount": "\${Token[AWS.AccountId.2]}",
                            },
                            "groups": [],
                            "node": Node {
                              "_children": {
                                "Resource": CfnPolicyConditional {
                                  "_cfnProperties": {
                                    "groups": [
                                      "#{Token[TOKEN.691]}",
                                    ],
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "lambda:InvokeFunction",
                                          "Effect": "Allow",
                                          "Resource": [
                                            "\${Token[TOKEN.658]}",
                                            "\${Token[TOKEN.658]}:*",
                                          ],
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "policyName": "\${Token[TOKEN.688]}",
                                    "roles": [
                                      "#{Token[TOKEN.689]}",
                                    ],
                                    "users": [
                                      "#{Token[TOKEN.690]}",
                                    ],
                                  },
                                  "cfnOptions": {},
                                  "cfnResourceType": "AWS::IAM::Policy",
                                  "dependsOn": Set {},
                                  "groups": [
                                    "#{Token[TOKEN.691]}",
                                  ],
                                  "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                  "node": Node {
                                    "_children": {},
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [
                                      {
                                        "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                        "trace": undefined,
                                        "type": "aws:cdk:logicalId",
                                      },
                                    ],
                                    "_validations": [],
                                    "host": [Circular],
                                    "id": "Resource",
                                    "scope": [Circular],
                                  },
                                  "policyDocument": {
                                    "Statement": [
                                      {
                                        "Action": "lambda:InvokeFunction",
                                        "Effect": "Allow",
                                        "Resource": [
                                          "\${Token[TOKEN.658]}",
                                          "\${Token[TOKEN.658]}:*",
                                        ],
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "policyName": "\${Token[TOKEN.688]}",
                                  "rawOverrides": {},
                                  "roles": [
                                    "#{Token[TOKEN.689]}",
                                  ],
                                  "stack": [Circular],
                                  "users": [
                                    "#{Token[TOKEN.690]}",
                                  ],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                              },
                              "_context": {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": [],
                              "_validations": [
                                {
                                  "validate": [Function],
                                },
                              ],
                              "host": [Circular],
                              "id": "DefaultPolicy",
                              "scope": [Circular],
                            },
                            "physicalName": "\${Token[TOKEN.688]}",
                            "referenceTaken": false,
                            "roles": [
                              [Circular],
                            ],
                            "stack": [Circular],
                            "users": [],
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                          "dependables": Map {
                            {
                              "Action": "lambda:InvokeFunction",
                              "Effect": "Allow",
                              "Resource": [
                                "\${Token[TOKEN.658]}",
                                "\${Token[TOKEN.658]}:*",
                              ],
                            } => DependencyGroup {
                              "_deps": [],
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [],
                              },
                            },
                          },
                          "env": {
                            "account": "\${Token[AWS.AccountId.2]}",
                            "region": "\${Token[AWS.Region.6]}",
                          },
                          "grantPrincipal": [Circular],
                          "inlinePolicies": {},
                          "managedPolicies": [
                            AwsManagedPolicy {
                              "managedPolicyArn": "arn:\${Token[AWS.Partition.5]}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                            },
                          ],
                          "node": Node {
                            "_children": {
                              "DefaultPolicy": Policy {
                                "_allowCrossEnvironment": false,
                                "_physicalName": "\${Token[TOKEN.688]}",
                                "_policyName": "\${Token[TOKEN.688]}",
                                "document": {
                                  "Statement": [
                                    {
                                      "Action": "lambda:InvokeFunction",
                                      "Effect": "Allow",
                                      "Resource": [
                                        "\${Token[TOKEN.658]}",
                                        "\${Token[TOKEN.658]}:*",
                                      ],
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "env": {
                                  "account": "\${Token[AWS.AccountId.2]}",
                                  "region": "\${Token[AWS.Region.6]}",
                                },
                                "force": false,
                                "grantPrincipal": PolicyGrantPrincipal {
                                  "_policy": [Circular],
                                  "assumeRoleAction": "sts:AssumeRole",
                                  "grantPrincipal": [Circular],
                                  "principalAccount": "\${Token[AWS.AccountId.2]}",
                                },
                                "groups": [],
                                "node": Node {
                                  "_children": {
                                    "Resource": CfnPolicyConditional {
                                      "_cfnProperties": {
                                        "groups": [
                                          "#{Token[TOKEN.691]}",
                                        ],
                                        "policyDocument": {
                                          "Statement": [
                                            {
                                              "Action": "lambda:InvokeFunction",
                                              "Effect": "Allow",
                                              "Resource": [
                                                "\${Token[TOKEN.658]}",
                                                "\${Token[TOKEN.658]}:*",
                                              ],
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "policyName": "\${Token[TOKEN.688]}",
                                        "roles": [
                                          "#{Token[TOKEN.689]}",
                                        ],
                                        "users": [
                                          "#{Token[TOKEN.690]}",
                                        ],
                                      },
                                      "cfnOptions": {},
                                      "cfnResourceType": "AWS::IAM::Policy",
                                      "dependsOn": Set {},
                                      "groups": [
                                        "#{Token[TOKEN.691]}",
                                      ],
                                      "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                      "node": Node {
                                        "_children": {},
                                        "_context": {},
                                        "_dependencies": Set {},
                                        "_locked": false,
                                        "_metadata": [
                                          {
                                            "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                            "trace": undefined,
                                            "type": "aws:cdk:logicalId",
                                          },
                                        ],
                                        "_validations": [],
                                        "host": [Circular],
                                        "id": "Resource",
                                        "scope": [Circular],
                                      },
                                      "policyDocument": {
                                        "Statement": [
                                          {
                                            "Action": "lambda:InvokeFunction",
                                            "Effect": "Allow",
                                            "Resource": [
                                              "\${Token[TOKEN.658]}",
                                              "\${Token[TOKEN.658]}:*",
                                            ],
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "policyName": "\${Token[TOKEN.688]}",
                                      "rawOverrides": {},
                                      "roles": [
                                        "#{Token[TOKEN.689]}",
                                      ],
                                      "stack": [Circular],
                                      "users": [
                                        "#{Token[TOKEN.690]}",
                                      ],
                                      Symbol(@aws-cdk/core.DependableTrait): {
                                        "dependencyRoots": [
                                          [Circular],
                                        ],
                                      },
                                    },
                                  },
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [],
                                  "_validations": [
                                    {
                                      "validate": [Function],
                                    },
                                  ],
                                  "host": [Circular],
                                  "id": "DefaultPolicy",
                                  "scope": [Circular],
                                },
                                "physicalName": "\${Token[TOKEN.688]}",
                                "referenceTaken": false,
                                "roles": [
                                  [Circular],
                                ],
                                "stack": [Circular],
                                "users": [],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                              "ImportServiceRole": ImportedRole {
                                "_allowCrossEnvironment": false,
                                "_physicalName": undefined,
                                "assumeRoleAction": "sts:AssumeRole",
                                "attachedPolicies": AttachedPolicies {
                                  "policies": [],
                                },
                                "defaultPolicyName": undefined,
                                "env": {
                                  "account": "\${Token[AWS.AccountId.2]}",
                                  "region": "\${Token[AWS.Region.6]}",
                                },
                                "grantPrincipal": [Circular],
                                "node": Node {
                                  "_children": {},
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [],
                                  "_validations": [],
                                  "host": [Circular],
                                  "id": "ImportServiceRole",
                                  "scope": [Circular],
                                },
                                "physicalName": "\${Token[TOKEN.667]}",
                                "policyFragment": PrincipalPolicyFragment {
                                  "conditions": {},
                                  "principalJson": {
                                    "AWS": [
                                      "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                                    ],
                                  },
                                },
                                "principalAccount": "\${Token[AWS.AccountId.2]}",
                                "roleArn": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                                "roleName": "ServiceRole",
                                "stack": [Circular],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                              "Resource": CfnRole {
                                "_cfnProperties": {
                                  "assumeRolePolicyDocument": {
                                    "Statement": [
                                      {
                                        "Action": "sts:AssumeRole",
                                        "Effect": "Allow",
                                        "Principal": {
                                          "Service": "\${Token[lambda.amazonaws.com.666]}",
                                        },
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "description": undefined,
                                  "managedPolicyArns": [
                                    "#{Token[TOKEN.668]}",
                                  ],
                                  "maxSessionDuration": undefined,
                                  "path": undefined,
                                  "permissionsBoundary": undefined,
                                  "policies": undefined,
                                  "roleName": "\${Token[TOKEN.665]}",
                                },
                                "assumeRolePolicyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Principal": {
                                        "Service": "\${Token[lambda.amazonaws.com.666]}",
                                      },
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "attrArn": "\${Token[TOKEN.670]}",
                                "attrRoleId": "\${Token[TOKEN.671]}",
                                "cfnOptions": {},
                                "cfnResourceType": "AWS::IAM::Role",
                                "dependsOn": Set {},
                                "description": undefined,
                                "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.Resource.LogicalID.669]}",
                                "managedPolicyArns": [
                                  "#{Token[TOKEN.668]}",
                                ],
                                "maxSessionDuration": undefined,
                                "node": Node {
                                  "_children": {},
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [
                                    {
                                      "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.Resource.LogicalID.669]}",
                                      "trace": undefined,
                                      "type": "aws:cdk:logicalId",
                                    },
                                  ],
                                  "_validations": [],
                                  "host": [Circular],
                                  "id": "Resource",
                                  "scope": [Circular],
                                },
                                "path": undefined,
                                "permissionsBoundary": undefined,
                                "policies": undefined,
                                "rawOverrides": {},
                                "roleName": "\${Token[TOKEN.665]}",
                                "stack": [Circular],
                                "tags": TagManager {
                                  "initialTagPriority": 50,
                                  "priorities": Map {},
                                  "renderedTags": "<unresolved-lazy>",
                                  "resourceTypeName": "AWS::IAM::Role",
                                  "tagFormatter": StandardFormatter {},
                                  "tagPropertyName": "tags",
                                  "tags": Map {},
                                },
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                            },
                            "_context": {},
                            "_dependencies": Set {},
                            "_locked": false,
                            "_metadata": [],
                            "_validations": [
                              {
                                "validate": [Function],
                              },
                            ],
                            "host": [Circular],
                            "id": "ServiceRole",
                            "scope": [Circular],
                          },
                          "permissionsBoundary": undefined,
                          "physicalName": "\${Token[TOKEN.665]}",
                          "policyFragment": PrincipalPolicyFragment {
                            "conditions": {},
                            "principalJson": {
                              "AWS": [
                                "\${Token[TOKEN.672]}",
                              ],
                            },
                          },
                          "principalAccount": "\${Token[AWS.AccountId.2]}",
                          "roleArn": "\${Token[TOKEN.672]}",
                          "roleName": "\${Token[TOKEN.674]}",
                          "stack": [Circular],
                          Symbol(@aws-cdk/core.DependableTrait): {
                            "dependencyRoots": [
                              [Circular],
                            ],
                          },
                        },
                      },
                      "_context": {},
                      "_dependencies": Set {},
                      "_locked": false,
                      "_metadata": [],
                      "_validations": [],
                      "host": [Circular],
                      "id": "framework-onEvent",
                      "scope": [Circular],
                    },
                    "permissionsNode": Node {
                      "_children": {
                        "Code": Asset {
                          "assetHash": "903be65b9594a9f17d7120273620367e7830b6d087fc9591f31dc5a080049e46",
                          "assetPath": "asset.903be65b9594a9f17d7120273620367e7830b6d087fc9591f31dc5a080049e46",
                          "bucket": Import {
                            "_allowCrossEnvironment": false,
                            "_physicalName": undefined,
                            "autoCreatePolicy": false,
                            "bucketArn": "arn:\${Token[AWS.Partition.5]}:s3:::\${Token[TOKEN.676]}",
                            "bucketDomainName": "\${Token[TOKEN.676]}.s3.\${Token[AWS.URLSuffix.3]}",
                            "bucketDualStackDomainName": "\${Token[TOKEN.676]}.s3.dualstack.\${Token[AWS.Region.6]}.\${Token[AWS.URLSuffix.3]}",
                            "bucketName": "\${Token[TOKEN.676]}",
                            "bucketRegionalDomainName": "\${Token[TOKEN.676]}.s3.\${Token[AWS.Region.6]}.\${Token[AWS.URLSuffix.3]}",
                            "bucketWebsiteDomainName": "\${Token[TOKEN.676]}.\${Token[TOKEN.678]}",
                            "bucketWebsiteNewUrlFormat": false,
                            "bucketWebsiteUrl": "http://\${Token[TOKEN.676]}.\${Token[TOKEN.678]}",
                            "disallowPublicAccess": false,
                            "encryptionKey": undefined,
                            "env": {
                              "account": "\${Token[AWS.AccountId.2]}",
                              "region": "\${Token[AWS.Region.6]}",
                            },
                            "isWebsite": false,
                            "node": Node {
                              "_children": {},
                              "_context": {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": [],
                              "_validations": [
                                {
                                  "validate": [Function],
                                },
                              ],
                              "host": [Circular],
                              "id": "AssetBucket",
                              "scope": [Circular],
                            },
                            "notificationsHandlerRole": undefined,
                            "physicalName": "\${Token[TOKEN.679]}",
                            "policy": undefined,
                            "stack": [Circular],
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                          "httpUrl": "\${Token[TOKEN.675]}",
                          "isBundled": false,
                          "isFile": false,
                          "isZipArchive": true,
                          "node": Node {
                            "_children": {
                              "AssetBucket": Import {
                                "_allowCrossEnvironment": false,
                                "_physicalName": undefined,
                                "autoCreatePolicy": false,
                                "bucketArn": "arn:\${Token[AWS.Partition.5]}:s3:::\${Token[TOKEN.676]}",
                                "bucketDomainName": "\${Token[TOKEN.676]}.s3.\${Token[AWS.URLSuffix.3]}",
                                "bucketDualStackDomainName": "\${Token[TOKEN.676]}.s3.dualstack.\${Token[AWS.Region.6]}.\${Token[AWS.URLSuffix.3]}",
                                "bucketName": "\${Token[TOKEN.676]}",
                                "bucketRegionalDomainName": "\${Token[TOKEN.676]}.s3.\${Token[AWS.Region.6]}.\${Token[AWS.URLSuffix.3]}",
                                "bucketWebsiteDomainName": "\${Token[TOKEN.676]}.\${Token[TOKEN.678]}",
                                "bucketWebsiteNewUrlFormat": false,
                                "bucketWebsiteUrl": "http://\${Token[TOKEN.676]}.\${Token[TOKEN.678]}",
                                "disallowPublicAccess": false,
                                "encryptionKey": undefined,
                                "env": {
                                  "account": "\${Token[AWS.AccountId.2]}",
                                  "region": "\${Token[AWS.Region.6]}",
                                },
                                "isWebsite": false,
                                "node": Node {
                                  "_children": {},
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [],
                                  "_validations": [
                                    {
                                      "validate": [Function],
                                    },
                                  ],
                                  "host": [Circular],
                                  "id": "AssetBucket",
                                  "scope": [Circular],
                                },
                                "notificationsHandlerRole": undefined,
                                "physicalName": "\${Token[TOKEN.679]}",
                                "policy": undefined,
                                "stack": [Circular],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                              "Stage": AssetStaging {
                                "absoluteStagedPath": "/private/var/folders/tn/799yyvm92g74fj_thj2z7w140000gr/T/cdk-test-app-WFT8EN/asset.903be65b9594a9f17d7120273620367e7830b6d087fc9591f31dc5a080049e46",
                                "assetHash": "903be65b9594a9f17d7120273620367e7830b6d087fc9591f31dc5a080049e46",
                                "assetOutdir": "/private/var/folders/tn/799yyvm92g74fj_thj2z7w140000gr/T/cdk-test-app-WFT8EN",
                                "cacheKey": "d22374b7156fb41ff718678ed8dd7c65d1393bc2a81b4585d0905e2a290f281a",
                                "customSourceFingerprint": undefined,
                                "fingerprintOptions": {
                                  "assetHash": undefined,
                                  "exclude": [
                                    "*.ts",
                                  ],
                                  "extraHash": undefined,
                                  "follow": undefined,
                                  "path": "/Users/rverma/dev/aws/nsl-saas-accelerator/packages/constructs/node_modules/aws-cdk-lib/custom-resources/lib/provider-framework/runtime",
                                  "sourcePath": "/Users/rverma/dev/aws/nsl-saas-accelerator/packages/constructs/node_modules/aws-cdk-lib/custom-resources/lib/provider-framework/runtime",
                                },
                                "hashType": "source",
                                "isArchive": true,
                                "node": Node {
                                  "_children": {},
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [],
                                  "_validations": [],
                                  "host": [Circular],
                                  "id": "Stage",
                                  "scope": [Circular],
                                },
                                "packaging": "zip",
                                "sourcePath": "/Users/rverma/dev/aws/nsl-saas-accelerator/packages/constructs/node_modules/aws-cdk-lib/custom-resources/lib/provider-framework/runtime",
                                "sourceStats": Stats {
                                  "atime": 2023-04-19T02:38:43.261Z,
                                  "atimeMs": 1681871923261.3042,
                                  "birthtime": 2023-04-19T02:37:35.005Z,
                                  "birthtimeMs": 1681871855004.6274,
                                  "blksize": 4096,
                                  "blocks": 0,
                                  "ctime": 2023-04-19T02:37:35.007Z,
                                  "ctimeMs": 1681871855007.1067,
                                  "dev": 16777233,
                                  "gid": 20,
                                  "ino": 64198660,
                                  "mode": 16877,
                                  "mtime": 2023-04-19T02:37:35.007Z,
                                  "mtimeMs": 1681871855007.1067,
                                  "nlink": 12,
                                  "rdev": 0,
                                  "size": 384,
                                  "uid": 504,
                                },
                                "stagedPath": "/private/var/folders/tn/799yyvm92g74fj_thj2z7w140000gr/T/cdk-test-app-WFT8EN/asset.903be65b9594a9f17d7120273620367e7830b6d087fc9591f31dc5a080049e46",
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                            },
                            "_context": {},
                            "_dependencies": Set {},
                            "_locked": false,
                            "_metadata": [],
                            "_validations": [],
                            "host": [Circular],
                            "id": "Code",
                            "scope": [Circular],
                          },
                          "s3BucketName": "\${Token[TOKEN.676]}",
                          "s3ObjectKey": "REPLACED-GENERATED-NAME.zip",
                          "s3ObjectUrl": "\${Token[TOKEN.677]}",
                          "s3Url": "\${Token[TOKEN.675]}",
                          "sourceHash": "903be65b9594a9f17d7120273620367e7830b6d087fc9591f31dc5a080049e46",
                          Symbol(@aws-cdk/core.DependableTrait): {
                            "dependencyRoots": [
                              [Circular],
                            ],
                          },
                        },
                        "Resource": CfnFunction {
                          "_cfnProperties": {
                            "architectures": undefined,
                            "code": {
                              "imageUri": undefined,
                              "s3Bucket": "\${Token[TOKEN.676]}",
                              "s3Key": "REPLACED-GENERATED-NAME.zip",
                              "s3ObjectVersion": undefined,
                              "zipFile": undefined,
                            },
                            "codeSigningConfigArn": undefined,
                            "deadLetterConfig": undefined,
                            "description": "AWS CDK resource provider framework - onEvent (Default/codeCommitSecret/Custom::GitopsSecrets)",
                            "environment": "<unresolved-lazy>",
                            "ephemeralStorage": undefined,
                            "fileSystemConfigs": undefined,
                            "functionName": "\${Token[TOKEN.664]}",
                            "handler": "framework.onEvent",
                            "imageConfig": undefined,
                            "kmsKeyArn": undefined,
                            "layers": [
                              "#{Token[TOKEN.680]}",
                            ],
                            "memorySize": undefined,
                            "packageType": undefined,
                            "reservedConcurrentExecutions": undefined,
                            "role": "\${Token[TOKEN.672]}",
                            "runtime": "nodejs14.x",
                            "runtimeManagementConfig": undefined,
                            "timeout": 900,
                            "vpcConfig": undefined,
                          },
                          "architectures": undefined,
                          "attrArn": "\${Token[TOKEN.682]}",
                          "attrSnapStartResponseApplyOn": "\${Token[TOKEN.683]}",
                          "attrSnapStartResponseOptimizationStatus": "\${Token[TOKEN.684]}",
                          "cfnOptions": {},
                          "cfnResourceType": "AWS::Lambda::Function",
                          "code": {
                            "imageUri": undefined,
                            "s3Bucket": "\${Token[TOKEN.676]}",
                            "s3Key": "REPLACED-GENERATED-NAME.zip",
                            "s3ObjectVersion": undefined,
                            "zipFile": undefined,
                          },
                          "codeSigningConfigArn": undefined,
                          "deadLetterConfig": undefined,
                          "dependsOn": Set {},
                          "description": "AWS CDK resource provider framework - onEvent (Default/codeCommitSecret/Custom::GitopsSecrets)",
                          "environment": "<unresolved-lazy>",
                          "ephemeralStorage": undefined,
                          "fileSystemConfigs": undefined,
                          "functionName": "\${Token[TOKEN.664]}",
                          "handler": "framework.onEvent",
                          "imageConfig": undefined,
                          "kmsKeyArn": undefined,
                          "layers": [
                            "#{Token[TOKEN.680]}",
                          ],
                          "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.Resource.LogicalID.681]}",
                          "memorySize": undefined,
                          "node": Node {
                            "_children": {},
                            "_context": {},
                            "_dependencies": Set {
                              Role {
                                "_allowCrossEnvironment": false,
                                "_didSplit": false,
                                "_physicalName": undefined,
                                "_roleId": "\${Token[TOKEN.671]}",
                                "assumeRoleAction": "sts:AssumeRole",
                                "assumeRolePolicy": {
                                  "Statement": [
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Principal": {
                                        "Service": "\${Token[lambda.amazonaws.com.666]}",
                                      },
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "attachedPolicies": AttachedPolicies {
                                  "policies": [
                                    Policy {
                                      "_allowCrossEnvironment": false,
                                      "_physicalName": "\${Token[TOKEN.688]}",
                                      "_policyName": "\${Token[TOKEN.688]}",
                                      "document": {
                                        "Statement": [
                                          {
                                            "Action": "lambda:InvokeFunction",
                                            "Effect": "Allow",
                                            "Resource": [
                                              "\${Token[TOKEN.658]}",
                                              "\${Token[TOKEN.658]}:*",
                                            ],
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "env": {
                                        "account": "\${Token[AWS.AccountId.2]}",
                                        "region": "\${Token[AWS.Region.6]}",
                                      },
                                      "force": false,
                                      "grantPrincipal": PolicyGrantPrincipal {
                                        "_policy": [Circular],
                                        "assumeRoleAction": "sts:AssumeRole",
                                        "grantPrincipal": [Circular],
                                        "principalAccount": "\${Token[AWS.AccountId.2]}",
                                      },
                                      "groups": [],
                                      "node": Node {
                                        "_children": {
                                          "Resource": CfnPolicyConditional {
                                            "_cfnProperties": {
                                              "groups": [
                                                "#{Token[TOKEN.691]}",
                                              ],
                                              "policyDocument": {
                                                "Statement": [
                                                  {
                                                    "Action": "lambda:InvokeFunction",
                                                    "Effect": "Allow",
                                                    "Resource": [
                                                      "\${Token[TOKEN.658]}",
                                                      "\${Token[TOKEN.658]}:*",
                                                    ],
                                                  },
                                                ],
                                                "Version": "2012-10-17",
                                              },
                                              "policyName": "\${Token[TOKEN.688]}",
                                              "roles": [
                                                "#{Token[TOKEN.689]}",
                                              ],
                                              "users": [
                                                "#{Token[TOKEN.690]}",
                                              ],
                                            },
                                            "cfnOptions": {},
                                            "cfnResourceType": "AWS::IAM::Policy",
                                            "dependsOn": Set {},
                                            "groups": [
                                              "#{Token[TOKEN.691]}",
                                            ],
                                            "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                            "node": Node {
                                              "_children": {},
                                              "_context": {},
                                              "_dependencies": Set {},
                                              "_locked": false,
                                              "_metadata": [
                                                {
                                                  "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                                  "trace": undefined,
                                                  "type": "aws:cdk:logicalId",
                                                },
                                              ],
                                              "_validations": [],
                                              "host": [Circular],
                                              "id": "Resource",
                                              "scope": [Circular],
                                            },
                                            "policyDocument": {
                                              "Statement": [
                                                {
                                                  "Action": "lambda:InvokeFunction",
                                                  "Effect": "Allow",
                                                  "Resource": [
                                                    "\${Token[TOKEN.658]}",
                                                    "\${Token[TOKEN.658]}:*",
                                                  ],
                                                },
                                              ],
                                              "Version": "2012-10-17",
                                            },
                                            "policyName": "\${Token[TOKEN.688]}",
                                            "rawOverrides": {},
                                            "roles": [
                                              "#{Token[TOKEN.689]}",
                                            ],
                                            "stack": [Circular],
                                            "users": [
                                              "#{Token[TOKEN.690]}",
                                            ],
                                            Symbol(@aws-cdk/core.DependableTrait): {
                                              "dependencyRoots": [
                                                [Circular],
                                              ],
                                            },
                                          },
                                        },
                                        "_context": {},
                                        "_dependencies": Set {},
                                        "_locked": false,
                                        "_metadata": [],
                                        "_validations": [
                                          {
                                            "validate": [Function],
                                          },
                                        ],
                                        "host": [Circular],
                                        "id": "DefaultPolicy",
                                        "scope": [Circular],
                                      },
                                      "physicalName": "\${Token[TOKEN.688]}",
                                      "referenceTaken": false,
                                      "roles": [
                                        [Circular],
                                      ],
                                      "stack": [Circular],
                                      "users": [],
                                      Symbol(@aws-cdk/core.DependableTrait): {
                                        "dependencyRoots": [
                                          [Circular],
                                        ],
                                      },
                                    },
                                  ],
                                },
                                "defaultPolicy": Policy {
                                  "_allowCrossEnvironment": false,
                                  "_physicalName": "\${Token[TOKEN.688]}",
                                  "_policyName": "\${Token[TOKEN.688]}",
                                  "document": {
                                    "Statement": [
                                      {
                                        "Action": "lambda:InvokeFunction",
                                        "Effect": "Allow",
                                        "Resource": [
                                          "\${Token[TOKEN.658]}",
                                          "\${Token[TOKEN.658]}:*",
                                        ],
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "env": {
                                    "account": "\${Token[AWS.AccountId.2]}",
                                    "region": "\${Token[AWS.Region.6]}",
                                  },
                                  "force": false,
                                  "grantPrincipal": PolicyGrantPrincipal {
                                    "_policy": [Circular],
                                    "assumeRoleAction": "sts:AssumeRole",
                                    "grantPrincipal": [Circular],
                                    "principalAccount": "\${Token[AWS.AccountId.2]}",
                                  },
                                  "groups": [],
                                  "node": Node {
                                    "_children": {
                                      "Resource": CfnPolicyConditional {
                                        "_cfnProperties": {
                                          "groups": [
                                            "#{Token[TOKEN.691]}",
                                          ],
                                          "policyDocument": {
                                            "Statement": [
                                              {
                                                "Action": "lambda:InvokeFunction",
                                                "Effect": "Allow",
                                                "Resource": [
                                                  "\${Token[TOKEN.658]}",
                                                  "\${Token[TOKEN.658]}:*",
                                                ],
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "policyName": "\${Token[TOKEN.688]}",
                                          "roles": [
                                            "#{Token[TOKEN.689]}",
                                          ],
                                          "users": [
                                            "#{Token[TOKEN.690]}",
                                          ],
                                        },
                                        "cfnOptions": {},
                                        "cfnResourceType": "AWS::IAM::Policy",
                                        "dependsOn": Set {},
                                        "groups": [
                                          "#{Token[TOKEN.691]}",
                                        ],
                                        "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                        "node": Node {
                                          "_children": {},
                                          "_context": {},
                                          "_dependencies": Set {},
                                          "_locked": false,
                                          "_metadata": [
                                            {
                                              "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                              "trace": undefined,
                                              "type": "aws:cdk:logicalId",
                                            },
                                          ],
                                          "_validations": [],
                                          "host": [Circular],
                                          "id": "Resource",
                                          "scope": [Circular],
                                        },
                                        "policyDocument": {
                                          "Statement": [
                                            {
                                              "Action": "lambda:InvokeFunction",
                                              "Effect": "Allow",
                                              "Resource": [
                                                "\${Token[TOKEN.658]}",
                                                "\${Token[TOKEN.658]}:*",
                                              ],
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "policyName": "\${Token[TOKEN.688]}",
                                        "rawOverrides": {},
                                        "roles": [
                                          "#{Token[TOKEN.689]}",
                                        ],
                                        "stack": [Circular],
                                        "users": [
                                          "#{Token[TOKEN.690]}",
                                        ],
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [
                                            [Circular],
                                          ],
                                        },
                                      },
                                    },
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [],
                                    "_validations": [
                                      {
                                        "validate": [Function],
                                      },
                                    ],
                                    "host": [Circular],
                                    "id": "DefaultPolicy",
                                    "scope": [Circular],
                                  },
                                  "physicalName": "\${Token[TOKEN.688]}",
                                  "referenceTaken": false,
                                  "roles": [
                                    [Circular],
                                  ],
                                  "stack": [Circular],
                                  "users": [],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                                "dependables": Map {
                                  {
                                    "Action": "lambda:InvokeFunction",
                                    "Effect": "Allow",
                                    "Resource": [
                                      "\${Token[TOKEN.658]}",
                                      "\${Token[TOKEN.658]}:*",
                                    ],
                                  } => DependencyGroup {
                                    "_deps": [],
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [],
                                    },
                                  },
                                },
                                "env": {
                                  "account": "\${Token[AWS.AccountId.2]}",
                                  "region": "\${Token[AWS.Region.6]}",
                                },
                                "grantPrincipal": [Circular],
                                "inlinePolicies": {},
                                "managedPolicies": [
                                  AwsManagedPolicy {
                                    "managedPolicyArn": "arn:\${Token[AWS.Partition.5]}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                                  },
                                ],
                                "node": Node {
                                  "_children": {
                                    "DefaultPolicy": Policy {
                                      "_allowCrossEnvironment": false,
                                      "_physicalName": "\${Token[TOKEN.688]}",
                                      "_policyName": "\${Token[TOKEN.688]}",
                                      "document": {
                                        "Statement": [
                                          {
                                            "Action": "lambda:InvokeFunction",
                                            "Effect": "Allow",
                                            "Resource": [
                                              "\${Token[TOKEN.658]}",
                                              "\${Token[TOKEN.658]}:*",
                                            ],
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "env": {
                                        "account": "\${Token[AWS.AccountId.2]}",
                                        "region": "\${Token[AWS.Region.6]}",
                                      },
                                      "force": false,
                                      "grantPrincipal": PolicyGrantPrincipal {
                                        "_policy": [Circular],
                                        "assumeRoleAction": "sts:AssumeRole",
                                        "grantPrincipal": [Circular],
                                        "principalAccount": "\${Token[AWS.AccountId.2]}",
                                      },
                                      "groups": [],
                                      "node": Node {
                                        "_children": {
                                          "Resource": CfnPolicyConditional {
                                            "_cfnProperties": {
                                              "groups": [
                                                "#{Token[TOKEN.691]}",
                                              ],
                                              "policyDocument": {
                                                "Statement": [
                                                  {
                                                    "Action": "lambda:InvokeFunction",
                                                    "Effect": "Allow",
                                                    "Resource": [
                                                      "\${Token[TOKEN.658]}",
                                                      "\${Token[TOKEN.658]}:*",
                                                    ],
                                                  },
                                                ],
                                                "Version": "2012-10-17",
                                              },
                                              "policyName": "\${Token[TOKEN.688]}",
                                              "roles": [
                                                "#{Token[TOKEN.689]}",
                                              ],
                                              "users": [
                                                "#{Token[TOKEN.690]}",
                                              ],
                                            },
                                            "cfnOptions": {},
                                            "cfnResourceType": "AWS::IAM::Policy",
                                            "dependsOn": Set {},
                                            "groups": [
                                              "#{Token[TOKEN.691]}",
                                            ],
                                            "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                            "node": Node {
                                              "_children": {},
                                              "_context": {},
                                              "_dependencies": Set {},
                                              "_locked": false,
                                              "_metadata": [
                                                {
                                                  "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                                  "trace": undefined,
                                                  "type": "aws:cdk:logicalId",
                                                },
                                              ],
                                              "_validations": [],
                                              "host": [Circular],
                                              "id": "Resource",
                                              "scope": [Circular],
                                            },
                                            "policyDocument": {
                                              "Statement": [
                                                {
                                                  "Action": "lambda:InvokeFunction",
                                                  "Effect": "Allow",
                                                  "Resource": [
                                                    "\${Token[TOKEN.658]}",
                                                    "\${Token[TOKEN.658]}:*",
                                                  ],
                                                },
                                              ],
                                              "Version": "2012-10-17",
                                            },
                                            "policyName": "\${Token[TOKEN.688]}",
                                            "rawOverrides": {},
                                            "roles": [
                                              "#{Token[TOKEN.689]}",
                                            ],
                                            "stack": [Circular],
                                            "users": [
                                              "#{Token[TOKEN.690]}",
                                            ],
                                            Symbol(@aws-cdk/core.DependableTrait): {
                                              "dependencyRoots": [
                                                [Circular],
                                              ],
                                            },
                                          },
                                        },
                                        "_context": {},
                                        "_dependencies": Set {},
                                        "_locked": false,
                                        "_metadata": [],
                                        "_validations": [
                                          {
                                            "validate": [Function],
                                          },
                                        ],
                                        "host": [Circular],
                                        "id": "DefaultPolicy",
                                        "scope": [Circular],
                                      },
                                      "physicalName": "\${Token[TOKEN.688]}",
                                      "referenceTaken": false,
                                      "roles": [
                                        [Circular],
                                      ],
                                      "stack": [Circular],
                                      "users": [],
                                      Symbol(@aws-cdk/core.DependableTrait): {
                                        "dependencyRoots": [
                                          [Circular],
                                        ],
                                      },
                                    },
                                    "ImportServiceRole": ImportedRole {
                                      "_allowCrossEnvironment": false,
                                      "_physicalName": undefined,
                                      "assumeRoleAction": "sts:AssumeRole",
                                      "attachedPolicies": AttachedPolicies {
                                        "policies": [],
                                      },
                                      "defaultPolicyName": undefined,
                                      "env": {
                                        "account": "\${Token[AWS.AccountId.2]}",
                                        "region": "\${Token[AWS.Region.6]}",
                                      },
                                      "grantPrincipal": [Circular],
                                      "node": Node {
                                        "_children": {},
                                        "_context": {},
                                        "_dependencies": Set {},
                                        "_locked": false,
                                        "_metadata": [],
                                        "_validations": [],
                                        "host": [Circular],
                                        "id": "ImportServiceRole",
                                        "scope": [Circular],
                                      },
                                      "physicalName": "\${Token[TOKEN.667]}",
                                      "policyFragment": PrincipalPolicyFragment {
                                        "conditions": {},
                                        "principalJson": {
                                          "AWS": [
                                            "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                                          ],
                                        },
                                      },
                                      "principalAccount": "\${Token[AWS.AccountId.2]}",
                                      "roleArn": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                                      "roleName": "ServiceRole",
                                      "stack": [Circular],
                                      Symbol(@aws-cdk/core.DependableTrait): {
                                        "dependencyRoots": [
                                          [Circular],
                                        ],
                                      },
                                    },
                                    "Resource": CfnRole {
                                      "_cfnProperties": {
                                        "assumeRolePolicyDocument": {
                                          "Statement": [
                                            {
                                              "Action": "sts:AssumeRole",
                                              "Effect": "Allow",
                                              "Principal": {
                                                "Service": "\${Token[lambda.amazonaws.com.666]}",
                                              },
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "description": undefined,
                                        "managedPolicyArns": [
                                          "#{Token[TOKEN.668]}",
                                        ],
                                        "maxSessionDuration": undefined,
                                        "path": undefined,
                                        "permissionsBoundary": undefined,
                                        "policies": undefined,
                                        "roleName": "\${Token[TOKEN.665]}",
                                      },
                                      "assumeRolePolicyDocument": {
                                        "Statement": [
                                          {
                                            "Action": "sts:AssumeRole",
                                            "Effect": "Allow",
                                            "Principal": {
                                              "Service": "\${Token[lambda.amazonaws.com.666]}",
                                            },
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "attrArn": "\${Token[TOKEN.670]}",
                                      "attrRoleId": "\${Token[TOKEN.671]}",
                                      "cfnOptions": {},
                                      "cfnResourceType": "AWS::IAM::Role",
                                      "dependsOn": Set {},
                                      "description": undefined,
                                      "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.Resource.LogicalID.669]}",
                                      "managedPolicyArns": [
                                        "#{Token[TOKEN.668]}",
                                      ],
                                      "maxSessionDuration": undefined,
                                      "node": Node {
                                        "_children": {},
                                        "_context": {},
                                        "_dependencies": Set {},
                                        "_locked": false,
                                        "_metadata": [
                                          {
                                            "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.Resource.LogicalID.669]}",
                                            "trace": undefined,
                                            "type": "aws:cdk:logicalId",
                                          },
                                        ],
                                        "_validations": [],
                                        "host": [Circular],
                                        "id": "Resource",
                                        "scope": [Circular],
                                      },
                                      "path": undefined,
                                      "permissionsBoundary": undefined,
                                      "policies": undefined,
                                      "rawOverrides": {},
                                      "roleName": "\${Token[TOKEN.665]}",
                                      "stack": [Circular],
                                      "tags": TagManager {
                                        "initialTagPriority": 50,
                                        "priorities": Map {},
                                        "renderedTags": "<unresolved-lazy>",
                                        "resourceTypeName": "AWS::IAM::Role",
                                        "tagFormatter": StandardFormatter {},
                                        "tagPropertyName": "tags",
                                        "tags": Map {},
                                      },
                                      Symbol(@aws-cdk/core.DependableTrait): {
                                        "dependencyRoots": [
                                          [Circular],
                                        ],
                                      },
                                    },
                                  },
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [],
                                  "_validations": [
                                    {
                                      "validate": [Function],
                                    },
                                  ],
                                  "host": [Circular],
                                  "id": "ServiceRole",
                                  "scope": [Circular],
                                },
                                "permissionsBoundary": undefined,
                                "physicalName": "\${Token[TOKEN.665]}",
                                "policyFragment": PrincipalPolicyFragment {
                                  "conditions": {},
                                  "principalJson": {
                                    "AWS": [
                                      "\${Token[TOKEN.672]}",
                                    ],
                                  },
                                },
                                "principalAccount": "\${Token[AWS.AccountId.2]}",
                                "roleArn": "\${Token[TOKEN.672]}",
                                "roleName": "\${Token[TOKEN.674]}",
                                "stack": [Circular],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                            },
                            "_locked": false,
                            "_metadata": [
                              {
                                "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.Resource.LogicalID.681]}",
                                "trace": undefined,
                                "type": "aws:cdk:logicalId",
                              },
                            ],
                            "_validations": [],
                            "host": [Circular],
                            "id": "Resource",
                            "scope": [Circular],
                          },
                          "packageType": undefined,
                          "rawOverrides": {},
                          "reservedConcurrentExecutions": undefined,
                          "role": "\${Token[TOKEN.672]}",
                          "runtime": "nodejs14.x",
                          "runtimeManagementConfig": undefined,
                          "snapStart": undefined,
                          "stack": [Circular],
                          "tags": TagManager {
                            "initialTagPriority": 50,
                            "priorities": Map {},
                            "renderedTags": "<unresolved-lazy>",
                            "resourceTypeName": "AWS::Lambda::Function",
                            "tagFormatter": StandardFormatter {},
                            "tagPropertyName": "tags",
                            "tags": Map {},
                          },
                          "timeout": 900,
                          "tracingConfig": undefined,
                          "vpcConfig": undefined,
                          Symbol(@aws-cdk/core.DependableTrait): {
                            "dependencyRoots": [
                              [Circular],
                            ],
                          },
                        },
                        "ServiceRole": Role {
                          "_allowCrossEnvironment": false,
                          "_didSplit": false,
                          "_physicalName": undefined,
                          "_roleId": "\${Token[TOKEN.671]}",
                          "assumeRoleAction": "sts:AssumeRole",
                          "assumeRolePolicy": {
                            "Statement": [
                              {
                                "Action": "sts:AssumeRole",
                                "Effect": "Allow",
                                "Principal": {
                                  "Service": "\${Token[lambda.amazonaws.com.666]}",
                                },
                              },
                            ],
                            "Version": "2012-10-17",
                          },
                          "attachedPolicies": AttachedPolicies {
                            "policies": [
                              Policy {
                                "_allowCrossEnvironment": false,
                                "_physicalName": "\${Token[TOKEN.688]}",
                                "_policyName": "\${Token[TOKEN.688]}",
                                "document": {
                                  "Statement": [
                                    {
                                      "Action": "lambda:InvokeFunction",
                                      "Effect": "Allow",
                                      "Resource": [
                                        "\${Token[TOKEN.658]}",
                                        "\${Token[TOKEN.658]}:*",
                                      ],
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "env": {
                                  "account": "\${Token[AWS.AccountId.2]}",
                                  "region": "\${Token[AWS.Region.6]}",
                                },
                                "force": false,
                                "grantPrincipal": PolicyGrantPrincipal {
                                  "_policy": [Circular],
                                  "assumeRoleAction": "sts:AssumeRole",
                                  "grantPrincipal": [Circular],
                                  "principalAccount": "\${Token[AWS.AccountId.2]}",
                                },
                                "groups": [],
                                "node": Node {
                                  "_children": {
                                    "Resource": CfnPolicyConditional {
                                      "_cfnProperties": {
                                        "groups": [
                                          "#{Token[TOKEN.691]}",
                                        ],
                                        "policyDocument": {
                                          "Statement": [
                                            {
                                              "Action": "lambda:InvokeFunction",
                                              "Effect": "Allow",
                                              "Resource": [
                                                "\${Token[TOKEN.658]}",
                                                "\${Token[TOKEN.658]}:*",
                                              ],
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "policyName": "\${Token[TOKEN.688]}",
                                        "roles": [
                                          "#{Token[TOKEN.689]}",
                                        ],
                                        "users": [
                                          "#{Token[TOKEN.690]}",
                                        ],
                                      },
                                      "cfnOptions": {},
                                      "cfnResourceType": "AWS::IAM::Policy",
                                      "dependsOn": Set {},
                                      "groups": [
                                        "#{Token[TOKEN.691]}",
                                      ],
                                      "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                      "node": Node {
                                        "_children": {},
                                        "_context": {},
                                        "_dependencies": Set {},
                                        "_locked": false,
                                        "_metadata": [
                                          {
                                            "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                            "trace": undefined,
                                            "type": "aws:cdk:logicalId",
                                          },
                                        ],
                                        "_validations": [],
                                        "host": [Circular],
                                        "id": "Resource",
                                        "scope": [Circular],
                                      },
                                      "policyDocument": {
                                        "Statement": [
                                          {
                                            "Action": "lambda:InvokeFunction",
                                            "Effect": "Allow",
                                            "Resource": [
                                              "\${Token[TOKEN.658]}",
                                              "\${Token[TOKEN.658]}:*",
                                            ],
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "policyName": "\${Token[TOKEN.688]}",
                                      "rawOverrides": {},
                                      "roles": [
                                        "#{Token[TOKEN.689]}",
                                      ],
                                      "stack": [Circular],
                                      "users": [
                                        "#{Token[TOKEN.690]}",
                                      ],
                                      Symbol(@aws-cdk/core.DependableTrait): {
                                        "dependencyRoots": [
                                          [Circular],
                                        ],
                                      },
                                    },
                                  },
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [],
                                  "_validations": [
                                    {
                                      "validate": [Function],
                                    },
                                  ],
                                  "host": [Circular],
                                  "id": "DefaultPolicy",
                                  "scope": [Circular],
                                },
                                "physicalName": "\${Token[TOKEN.688]}",
                                "referenceTaken": false,
                                "roles": [
                                  [Circular],
                                ],
                                "stack": [Circular],
                                "users": [],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                            ],
                          },
                          "defaultPolicy": Policy {
                            "_allowCrossEnvironment": false,
                            "_physicalName": "\${Token[TOKEN.688]}",
                            "_policyName": "\${Token[TOKEN.688]}",
                            "document": {
                              "Statement": [
                                {
                                  "Action": "lambda:InvokeFunction",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "\${Token[TOKEN.658]}",
                                    "\${Token[TOKEN.658]}:*",
                                  ],
                                },
                              ],
                              "Version": "2012-10-17",
                            },
                            "env": {
                              "account": "\${Token[AWS.AccountId.2]}",
                              "region": "\${Token[AWS.Region.6]}",
                            },
                            "force": false,
                            "grantPrincipal": PolicyGrantPrincipal {
                              "_policy": [Circular],
                              "assumeRoleAction": "sts:AssumeRole",
                              "grantPrincipal": [Circular],
                              "principalAccount": "\${Token[AWS.AccountId.2]}",
                            },
                            "groups": [],
                            "node": Node {
                              "_children": {
                                "Resource": CfnPolicyConditional {
                                  "_cfnProperties": {
                                    "groups": [
                                      "#{Token[TOKEN.691]}",
                                    ],
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "lambda:InvokeFunction",
                                          "Effect": "Allow",
                                          "Resource": [
                                            "\${Token[TOKEN.658]}",
                                            "\${Token[TOKEN.658]}:*",
                                          ],
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "policyName": "\${Token[TOKEN.688]}",
                                    "roles": [
                                      "#{Token[TOKEN.689]}",
                                    ],
                                    "users": [
                                      "#{Token[TOKEN.690]}",
                                    ],
                                  },
                                  "cfnOptions": {},
                                  "cfnResourceType": "AWS::IAM::Policy",
                                  "dependsOn": Set {},
                                  "groups": [
                                    "#{Token[TOKEN.691]}",
                                  ],
                                  "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                  "node": Node {
                                    "_children": {},
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [
                                      {
                                        "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                        "trace": undefined,
                                        "type": "aws:cdk:logicalId",
                                      },
                                    ],
                                    "_validations": [],
                                    "host": [Circular],
                                    "id": "Resource",
                                    "scope": [Circular],
                                  },
                                  "policyDocument": {
                                    "Statement": [
                                      {
                                        "Action": "lambda:InvokeFunction",
                                        "Effect": "Allow",
                                        "Resource": [
                                          "\${Token[TOKEN.658]}",
                                          "\${Token[TOKEN.658]}:*",
                                        ],
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "policyName": "\${Token[TOKEN.688]}",
                                  "rawOverrides": {},
                                  "roles": [
                                    "#{Token[TOKEN.689]}",
                                  ],
                                  "stack": [Circular],
                                  "users": [
                                    "#{Token[TOKEN.690]}",
                                  ],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                              },
                              "_context": {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": [],
                              "_validations": [
                                {
                                  "validate": [Function],
                                },
                              ],
                              "host": [Circular],
                              "id": "DefaultPolicy",
                              "scope": [Circular],
                            },
                            "physicalName": "\${Token[TOKEN.688]}",
                            "referenceTaken": false,
                            "roles": [
                              [Circular],
                            ],
                            "stack": [Circular],
                            "users": [],
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                          "dependables": Map {
                            {
                              "Action": "lambda:InvokeFunction",
                              "Effect": "Allow",
                              "Resource": [
                                "\${Token[TOKEN.658]}",
                                "\${Token[TOKEN.658]}:*",
                              ],
                            } => DependencyGroup {
                              "_deps": [],
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [],
                              },
                            },
                          },
                          "env": {
                            "account": "\${Token[AWS.AccountId.2]}",
                            "region": "\${Token[AWS.Region.6]}",
                          },
                          "grantPrincipal": [Circular],
                          "inlinePolicies": {},
                          "managedPolicies": [
                            AwsManagedPolicy {
                              "managedPolicyArn": "arn:\${Token[AWS.Partition.5]}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                            },
                          ],
                          "node": Node {
                            "_children": {
                              "DefaultPolicy": Policy {
                                "_allowCrossEnvironment": false,
                                "_physicalName": "\${Token[TOKEN.688]}",
                                "_policyName": "\${Token[TOKEN.688]}",
                                "document": {
                                  "Statement": [
                                    {
                                      "Action": "lambda:InvokeFunction",
                                      "Effect": "Allow",
                                      "Resource": [
                                        "\${Token[TOKEN.658]}",
                                        "\${Token[TOKEN.658]}:*",
                                      ],
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "env": {
                                  "account": "\${Token[AWS.AccountId.2]}",
                                  "region": "\${Token[AWS.Region.6]}",
                                },
                                "force": false,
                                "grantPrincipal": PolicyGrantPrincipal {
                                  "_policy": [Circular],
                                  "assumeRoleAction": "sts:AssumeRole",
                                  "grantPrincipal": [Circular],
                                  "principalAccount": "\${Token[AWS.AccountId.2]}",
                                },
                                "groups": [],
                                "node": Node {
                                  "_children": {
                                    "Resource": CfnPolicyConditional {
                                      "_cfnProperties": {
                                        "groups": [
                                          "#{Token[TOKEN.691]}",
                                        ],
                                        "policyDocument": {
                                          "Statement": [
                                            {
                                              "Action": "lambda:InvokeFunction",
                                              "Effect": "Allow",
                                              "Resource": [
                                                "\${Token[TOKEN.658]}",
                                                "\${Token[TOKEN.658]}:*",
                                              ],
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "policyName": "\${Token[TOKEN.688]}",
                                        "roles": [
                                          "#{Token[TOKEN.689]}",
                                        ],
                                        "users": [
                                          "#{Token[TOKEN.690]}",
                                        ],
                                      },
                                      "cfnOptions": {},
                                      "cfnResourceType": "AWS::IAM::Policy",
                                      "dependsOn": Set {},
                                      "groups": [
                                        "#{Token[TOKEN.691]}",
                                      ],
                                      "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                      "node": Node {
                                        "_children": {},
                                        "_context": {},
                                        "_dependencies": Set {},
                                        "_locked": false,
                                        "_metadata": [
                                          {
                                            "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                            "trace": undefined,
                                            "type": "aws:cdk:logicalId",
                                          },
                                        ],
                                        "_validations": [],
                                        "host": [Circular],
                                        "id": "Resource",
                                        "scope": [Circular],
                                      },
                                      "policyDocument": {
                                        "Statement": [
                                          {
                                            "Action": "lambda:InvokeFunction",
                                            "Effect": "Allow",
                                            "Resource": [
                                              "\${Token[TOKEN.658]}",
                                              "\${Token[TOKEN.658]}:*",
                                            ],
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "policyName": "\${Token[TOKEN.688]}",
                                      "rawOverrides": {},
                                      "roles": [
                                        "#{Token[TOKEN.689]}",
                                      ],
                                      "stack": [Circular],
                                      "users": [
                                        "#{Token[TOKEN.690]}",
                                      ],
                                      Symbol(@aws-cdk/core.DependableTrait): {
                                        "dependencyRoots": [
                                          [Circular],
                                        ],
                                      },
                                    },
                                  },
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [],
                                  "_validations": [
                                    {
                                      "validate": [Function],
                                    },
                                  ],
                                  "host": [Circular],
                                  "id": "DefaultPolicy",
                                  "scope": [Circular],
                                },
                                "physicalName": "\${Token[TOKEN.688]}",
                                "referenceTaken": false,
                                "roles": [
                                  [Circular],
                                ],
                                "stack": [Circular],
                                "users": [],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                              "ImportServiceRole": ImportedRole {
                                "_allowCrossEnvironment": false,
                                "_physicalName": undefined,
                                "assumeRoleAction": "sts:AssumeRole",
                                "attachedPolicies": AttachedPolicies {
                                  "policies": [],
                                },
                                "defaultPolicyName": undefined,
                                "env": {
                                  "account": "\${Token[AWS.AccountId.2]}",
                                  "region": "\${Token[AWS.Region.6]}",
                                },
                                "grantPrincipal": [Circular],
                                "node": Node {
                                  "_children": {},
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [],
                                  "_validations": [],
                                  "host": [Circular],
                                  "id": "ImportServiceRole",
                                  "scope": [Circular],
                                },
                                "physicalName": "\${Token[TOKEN.667]}",
                                "policyFragment": PrincipalPolicyFragment {
                                  "conditions": {},
                                  "principalJson": {
                                    "AWS": [
                                      "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                                    ],
                                  },
                                },
                                "principalAccount": "\${Token[AWS.AccountId.2]}",
                                "roleArn": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                                "roleName": "ServiceRole",
                                "stack": [Circular],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                              "Resource": CfnRole {
                                "_cfnProperties": {
                                  "assumeRolePolicyDocument": {
                                    "Statement": [
                                      {
                                        "Action": "sts:AssumeRole",
                                        "Effect": "Allow",
                                        "Principal": {
                                          "Service": "\${Token[lambda.amazonaws.com.666]}",
                                        },
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "description": undefined,
                                  "managedPolicyArns": [
                                    "#{Token[TOKEN.668]}",
                                  ],
                                  "maxSessionDuration": undefined,
                                  "path": undefined,
                                  "permissionsBoundary": undefined,
                                  "policies": undefined,
                                  "roleName": "\${Token[TOKEN.665]}",
                                },
                                "assumeRolePolicyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Principal": {
                                        "Service": "\${Token[lambda.amazonaws.com.666]}",
                                      },
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "attrArn": "\${Token[TOKEN.670]}",
                                "attrRoleId": "\${Token[TOKEN.671]}",
                                "cfnOptions": {},
                                "cfnResourceType": "AWS::IAM::Role",
                                "dependsOn": Set {},
                                "description": undefined,
                                "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.Resource.LogicalID.669]}",
                                "managedPolicyArns": [
                                  "#{Token[TOKEN.668]}",
                                ],
                                "maxSessionDuration": undefined,
                                "node": Node {
                                  "_children": {},
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [
                                    {
                                      "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.Resource.LogicalID.669]}",
                                      "trace": undefined,
                                      "type": "aws:cdk:logicalId",
                                    },
                                  ],
                                  "_validations": [],
                                  "host": [Circular],
                                  "id": "Resource",
                                  "scope": [Circular],
                                },
                                "path": undefined,
                                "permissionsBoundary": undefined,
                                "policies": undefined,
                                "rawOverrides": {},
                                "roleName": "\${Token[TOKEN.665]}",
                                "stack": [Circular],
                                "tags": TagManager {
                                  "initialTagPriority": 50,
                                  "priorities": Map {},
                                  "renderedTags": "<unresolved-lazy>",
                                  "resourceTypeName": "AWS::IAM::Role",
                                  "tagFormatter": StandardFormatter {},
                                  "tagPropertyName": "tags",
                                  "tags": Map {},
                                },
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                            },
                            "_context": {},
                            "_dependencies": Set {},
                            "_locked": false,
                            "_metadata": [],
                            "_validations": [
                              {
                                "validate": [Function],
                              },
                            ],
                            "host": [Circular],
                            "id": "ServiceRole",
                            "scope": [Circular],
                          },
                          "permissionsBoundary": undefined,
                          "physicalName": "\${Token[TOKEN.665]}",
                          "policyFragment": PrincipalPolicyFragment {
                            "conditions": {},
                            "principalJson": {
                              "AWS": [
                                "\${Token[TOKEN.672]}",
                              ],
                            },
                          },
                          "principalAccount": "\${Token[AWS.AccountId.2]}",
                          "roleArn": "\${Token[TOKEN.672]}",
                          "roleName": "\${Token[TOKEN.674]}",
                          "stack": [Circular],
                          Symbol(@aws-cdk/core.DependableTrait): {
                            "dependencyRoots": [
                              [Circular],
                            ],
                          },
                        },
                      },
                      "_context": {},
                      "_dependencies": Set {},
                      "_locked": false,
                      "_metadata": [],
                      "_validations": [],
                      "host": [Circular],
                      "id": "framework-onEvent",
                      "scope": [Circular],
                    },
                    "physicalName": "\${Token[TOKEN.664]}",
                    "role": Role {
                      "_allowCrossEnvironment": false,
                      "_didSplit": false,
                      "_physicalName": undefined,
                      "_roleId": "\${Token[TOKEN.671]}",
                      "assumeRoleAction": "sts:AssumeRole",
                      "assumeRolePolicy": {
                        "Statement": [
                          {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                              "Service": "\${Token[lambda.amazonaws.com.666]}",
                            },
                          },
                        ],
                        "Version": "2012-10-17",
                      },
                      "attachedPolicies": AttachedPolicies {
                        "policies": [
                          Policy {
                            "_allowCrossEnvironment": false,
                            "_physicalName": "\${Token[TOKEN.688]}",
                            "_policyName": "\${Token[TOKEN.688]}",
                            "document": {
                              "Statement": [
                                {
                                  "Action": "lambda:InvokeFunction",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "\${Token[TOKEN.658]}",
                                    "\${Token[TOKEN.658]}:*",
                                  ],
                                },
                              ],
                              "Version": "2012-10-17",
                            },
                            "env": {
                              "account": "\${Token[AWS.AccountId.2]}",
                              "region": "\${Token[AWS.Region.6]}",
                            },
                            "force": false,
                            "grantPrincipal": PolicyGrantPrincipal {
                              "_policy": [Circular],
                              "assumeRoleAction": "sts:AssumeRole",
                              "grantPrincipal": [Circular],
                              "principalAccount": "\${Token[AWS.AccountId.2]}",
                            },
                            "groups": [],
                            "node": Node {
                              "_children": {
                                "Resource": CfnPolicyConditional {
                                  "_cfnProperties": {
                                    "groups": [
                                      "#{Token[TOKEN.691]}",
                                    ],
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "lambda:InvokeFunction",
                                          "Effect": "Allow",
                                          "Resource": [
                                            "\${Token[TOKEN.658]}",
                                            "\${Token[TOKEN.658]}:*",
                                          ],
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "policyName": "\${Token[TOKEN.688]}",
                                    "roles": [
                                      "#{Token[TOKEN.689]}",
                                    ],
                                    "users": [
                                      "#{Token[TOKEN.690]}",
                                    ],
                                  },
                                  "cfnOptions": {},
                                  "cfnResourceType": "AWS::IAM::Policy",
                                  "dependsOn": Set {},
                                  "groups": [
                                    "#{Token[TOKEN.691]}",
                                  ],
                                  "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                  "node": Node {
                                    "_children": {},
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [
                                      {
                                        "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                        "trace": undefined,
                                        "type": "aws:cdk:logicalId",
                                      },
                                    ],
                                    "_validations": [],
                                    "host": [Circular],
                                    "id": "Resource",
                                    "scope": [Circular],
                                  },
                                  "policyDocument": {
                                    "Statement": [
                                      {
                                        "Action": "lambda:InvokeFunction",
                                        "Effect": "Allow",
                                        "Resource": [
                                          "\${Token[TOKEN.658]}",
                                          "\${Token[TOKEN.658]}:*",
                                        ],
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "policyName": "\${Token[TOKEN.688]}",
                                  "rawOverrides": {},
                                  "roles": [
                                    "#{Token[TOKEN.689]}",
                                  ],
                                  "stack": [Circular],
                                  "users": [
                                    "#{Token[TOKEN.690]}",
                                  ],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                              },
                              "_context": {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": [],
                              "_validations": [
                                {
                                  "validate": [Function],
                                },
                              ],
                              "host": [Circular],
                              "id": "DefaultPolicy",
                              "scope": [Circular],
                            },
                            "physicalName": "\${Token[TOKEN.688]}",
                            "referenceTaken": false,
                            "roles": [
                              [Circular],
                            ],
                            "stack": [Circular],
                            "users": [],
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                        ],
                      },
                      "defaultPolicy": Policy {
                        "_allowCrossEnvironment": false,
                        "_physicalName": "\${Token[TOKEN.688]}",
                        "_policyName": "\${Token[TOKEN.688]}",
                        "document": {
                          "Statement": [
                            {
                              "Action": "lambda:InvokeFunction",
                              "Effect": "Allow",
                              "Resource": [
                                "\${Token[TOKEN.658]}",
                                "\${Token[TOKEN.658]}:*",
                              ],
                            },
                          ],
                          "Version": "2012-10-17",
                        },
                        "env": {
                          "account": "\${Token[AWS.AccountId.2]}",
                          "region": "\${Token[AWS.Region.6]}",
                        },
                        "force": false,
                        "grantPrincipal": PolicyGrantPrincipal {
                          "_policy": [Circular],
                          "assumeRoleAction": "sts:AssumeRole",
                          "grantPrincipal": [Circular],
                          "principalAccount": "\${Token[AWS.AccountId.2]}",
                        },
                        "groups": [],
                        "node": Node {
                          "_children": {
                            "Resource": CfnPolicyConditional {
                              "_cfnProperties": {
                                "groups": [
                                  "#{Token[TOKEN.691]}",
                                ],
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "lambda:InvokeFunction",
                                      "Effect": "Allow",
                                      "Resource": [
                                        "\${Token[TOKEN.658]}",
                                        "\${Token[TOKEN.658]}:*",
                                      ],
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "policyName": "\${Token[TOKEN.688]}",
                                "roles": [
                                  "#{Token[TOKEN.689]}",
                                ],
                                "users": [
                                  "#{Token[TOKEN.690]}",
                                ],
                              },
                              "cfnOptions": {},
                              "cfnResourceType": "AWS::IAM::Policy",
                              "dependsOn": Set {},
                              "groups": [
                                "#{Token[TOKEN.691]}",
                              ],
                              "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                              "node": Node {
                                "_children": {},
                                "_context": {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": [
                                  {
                                    "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                    "trace": undefined,
                                    "type": "aws:cdk:logicalId",
                                  },
                                ],
                                "_validations": [],
                                "host": [Circular],
                                "id": "Resource",
                                "scope": [Circular],
                              },
                              "policyDocument": {
                                "Statement": [
                                  {
                                    "Action": "lambda:InvokeFunction",
                                    "Effect": "Allow",
                                    "Resource": [
                                      "\${Token[TOKEN.658]}",
                                      "\${Token[TOKEN.658]}:*",
                                    ],
                                  },
                                ],
                                "Version": "2012-10-17",
                              },
                              "policyName": "\${Token[TOKEN.688]}",
                              "rawOverrides": {},
                              "roles": [
                                "#{Token[TOKEN.689]}",
                              ],
                              "stack": [Circular],
                              "users": [
                                "#{Token[TOKEN.690]}",
                              ],
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [
                                  [Circular],
                                ],
                              },
                            },
                          },
                          "_context": {},
                          "_dependencies": Set {},
                          "_locked": false,
                          "_metadata": [],
                          "_validations": [
                            {
                              "validate": [Function],
                            },
                          ],
                          "host": [Circular],
                          "id": "DefaultPolicy",
                          "scope": [Circular],
                        },
                        "physicalName": "\${Token[TOKEN.688]}",
                        "referenceTaken": false,
                        "roles": [
                          [Circular],
                        ],
                        "stack": [Circular],
                        "users": [],
                        Symbol(@aws-cdk/core.DependableTrait): {
                          "dependencyRoots": [
                            [Circular],
                          ],
                        },
                      },
                      "dependables": Map {
                        {
                          "Action": "lambda:InvokeFunction",
                          "Effect": "Allow",
                          "Resource": [
                            "\${Token[TOKEN.658]}",
                            "\${Token[TOKEN.658]}:*",
                          ],
                        } => DependencyGroup {
                          "_deps": [],
                          Symbol(@aws-cdk/core.DependableTrait): {
                            "dependencyRoots": [],
                          },
                        },
                      },
                      "env": {
                        "account": "\${Token[AWS.AccountId.2]}",
                        "region": "\${Token[AWS.Region.6]}",
                      },
                      "grantPrincipal": [Circular],
                      "inlinePolicies": {},
                      "managedPolicies": [
                        AwsManagedPolicy {
                          "managedPolicyArn": "arn:\${Token[AWS.Partition.5]}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                        },
                      ],
                      "node": Node {
                        "_children": {
                          "DefaultPolicy": Policy {
                            "_allowCrossEnvironment": false,
                            "_physicalName": "\${Token[TOKEN.688]}",
                            "_policyName": "\${Token[TOKEN.688]}",
                            "document": {
                              "Statement": [
                                {
                                  "Action": "lambda:InvokeFunction",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "\${Token[TOKEN.658]}",
                                    "\${Token[TOKEN.658]}:*",
                                  ],
                                },
                              ],
                              "Version": "2012-10-17",
                            },
                            "env": {
                              "account": "\${Token[AWS.AccountId.2]}",
                              "region": "\${Token[AWS.Region.6]}",
                            },
                            "force": false,
                            "grantPrincipal": PolicyGrantPrincipal {
                              "_policy": [Circular],
                              "assumeRoleAction": "sts:AssumeRole",
                              "grantPrincipal": [Circular],
                              "principalAccount": "\${Token[AWS.AccountId.2]}",
                            },
                            "groups": [],
                            "node": Node {
                              "_children": {
                                "Resource": CfnPolicyConditional {
                                  "_cfnProperties": {
                                    "groups": [
                                      "#{Token[TOKEN.691]}",
                                    ],
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "lambda:InvokeFunction",
                                          "Effect": "Allow",
                                          "Resource": [
                                            "\${Token[TOKEN.658]}",
                                            "\${Token[TOKEN.658]}:*",
                                          ],
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "policyName": "\${Token[TOKEN.688]}",
                                    "roles": [
                                      "#{Token[TOKEN.689]}",
                                    ],
                                    "users": [
                                      "#{Token[TOKEN.690]}",
                                    ],
                                  },
                                  "cfnOptions": {},
                                  "cfnResourceType": "AWS::IAM::Policy",
                                  "dependsOn": Set {},
                                  "groups": [
                                    "#{Token[TOKEN.691]}",
                                  ],
                                  "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                  "node": Node {
                                    "_children": {},
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [
                                      {
                                        "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                        "trace": undefined,
                                        "type": "aws:cdk:logicalId",
                                      },
                                    ],
                                    "_validations": [],
                                    "host": [Circular],
                                    "id": "Resource",
                                    "scope": [Circular],
                                  },
                                  "policyDocument": {
                                    "Statement": [
                                      {
                                        "Action": "lambda:InvokeFunction",
                                        "Effect": "Allow",
                                        "Resource": [
                                          "\${Token[TOKEN.658]}",
                                          "\${Token[TOKEN.658]}:*",
                                        ],
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "policyName": "\${Token[TOKEN.688]}",
                                  "rawOverrides": {},
                                  "roles": [
                                    "#{Token[TOKEN.689]}",
                                  ],
                                  "stack": [Circular],
                                  "users": [
                                    "#{Token[TOKEN.690]}",
                                  ],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                              },
                              "_context": {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": [],
                              "_validations": [
                                {
                                  "validate": [Function],
                                },
                              ],
                              "host": [Circular],
                              "id": "DefaultPolicy",
                              "scope": [Circular],
                            },
                            "physicalName": "\${Token[TOKEN.688]}",
                            "referenceTaken": false,
                            "roles": [
                              [Circular],
                            ],
                            "stack": [Circular],
                            "users": [],
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                          "ImportServiceRole": ImportedRole {
                            "_allowCrossEnvironment": false,
                            "_physicalName": undefined,
                            "assumeRoleAction": "sts:AssumeRole",
                            "attachedPolicies": AttachedPolicies {
                              "policies": [],
                            },
                            "defaultPolicyName": undefined,
                            "env": {
                              "account": "\${Token[AWS.AccountId.2]}",
                              "region": "\${Token[AWS.Region.6]}",
                            },
                            "grantPrincipal": [Circular],
                            "node": Node {
                              "_children": {},
                              "_context": {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": [],
                              "_validations": [],
                              "host": [Circular],
                              "id": "ImportServiceRole",
                              "scope": [Circular],
                            },
                            "physicalName": "\${Token[TOKEN.667]}",
                            "policyFragment": PrincipalPolicyFragment {
                              "conditions": {},
                              "principalJson": {
                                "AWS": [
                                  "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                                ],
                              },
                            },
                            "principalAccount": "\${Token[AWS.AccountId.2]}",
                            "roleArn": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                            "roleName": "ServiceRole",
                            "stack": [Circular],
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                          "Resource": CfnRole {
                            "_cfnProperties": {
                              "assumeRolePolicyDocument": {
                                "Statement": [
                                  {
                                    "Action": "sts:AssumeRole",
                                    "Effect": "Allow",
                                    "Principal": {
                                      "Service": "\${Token[lambda.amazonaws.com.666]}",
                                    },
                                  },
                                ],
                                "Version": "2012-10-17",
                              },
                              "description": undefined,
                              "managedPolicyArns": [
                                "#{Token[TOKEN.668]}",
                              ],
                              "maxSessionDuration": undefined,
                              "path": undefined,
                              "permissionsBoundary": undefined,
                              "policies": undefined,
                              "roleName": "\${Token[TOKEN.665]}",
                            },
                            "assumeRolePolicyDocument": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "\${Token[lambda.amazonaws.com.666]}",
                                  },
                                },
                              ],
                              "Version": "2012-10-17",
                            },
                            "attrArn": "\${Token[TOKEN.670]}",
                            "attrRoleId": "\${Token[TOKEN.671]}",
                            "cfnOptions": {},
                            "cfnResourceType": "AWS::IAM::Role",
                            "dependsOn": Set {},
                            "description": undefined,
                            "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.Resource.LogicalID.669]}",
                            "managedPolicyArns": [
                              "#{Token[TOKEN.668]}",
                            ],
                            "maxSessionDuration": undefined,
                            "node": Node {
                              "_children": {},
                              "_context": {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": [
                                {
                                  "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.Resource.LogicalID.669]}",
                                  "trace": undefined,
                                  "type": "aws:cdk:logicalId",
                                },
                              ],
                              "_validations": [],
                              "host": [Circular],
                              "id": "Resource",
                              "scope": [Circular],
                            },
                            "path": undefined,
                            "permissionsBoundary": undefined,
                            "policies": undefined,
                            "rawOverrides": {},
                            "roleName": "\${Token[TOKEN.665]}",
                            "stack": [Circular],
                            "tags": TagManager {
                              "initialTagPriority": 50,
                              "priorities": Map {},
                              "renderedTags": "<unresolved-lazy>",
                              "resourceTypeName": "AWS::IAM::Role",
                              "tagFormatter": StandardFormatter {},
                              "tagPropertyName": "tags",
                              "tags": Map {},
                            },
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                        },
                        "_context": {},
                        "_dependencies": Set {},
                        "_locked": false,
                        "_metadata": [],
                        "_validations": [
                          {
                            "validate": [Function],
                          },
                        ],
                        "host": [Circular],
                        "id": "ServiceRole",
                        "scope": [Circular],
                      },
                      "permissionsBoundary": undefined,
                      "physicalName": "\${Token[TOKEN.665]}",
                      "policyFragment": PrincipalPolicyFragment {
                        "conditions": {},
                        "principalJson": {
                          "AWS": [
                            "\${Token[TOKEN.672]}",
                          ],
                        },
                      },
                      "principalAccount": "\${Token[AWS.AccountId.2]}",
                      "roleArn": "\${Token[TOKEN.672]}",
                      "roleName": "\${Token[TOKEN.674]}",
                      "stack": [Circular],
                      Symbol(@aws-cdk/core.DependableTrait): {
                        "dependencyRoots": [
                          [Circular],
                        ],
                      },
                    },
                    "runtime": Runtime {
                      "bundlingDockerImage": "public.ecr.aws/sam/build-nodejs14.x",
                      "bundlingImage": "public.ecr.aws/sam/build-nodejs14.x",
                      "family": 0,
                      "name": "nodejs14.x",
                      "supportsCodeGuruProfiling": false,
                      "supportsInlineCode": true,
                    },
                    "stack": [Circular],
                    "timeout": Duration {
                      "amount": 15,
                      "unit": TimeUnit {
                        "inMillis": 60000,
                        "isoLabel": "M",
                        "label": "minutes",
                      },
                    },
                    Symbol(@aws-cdk/core.DependableTrait): {
                      "dependencyRoots": [
                        [Circular],
                      ],
                    },
                  },
                },
                "_context": {},
                "_dependencies": Set {},
                "_locked": false,
                "_metadata": [],
                "_validations": [],
                "host": [Circular],
                "id": "Custom::GitopsSecrets",
                "scope": [Circular],
              },
              "onEventHandler": Function {
                "_allowCrossEnvironment": false,
                "_architecture": undefined,
                "_functionUrlInvocationGrants": {},
                "_invocationGrants": {
                  "InvokeiHipRdnVp/AhoScXXAlR/hxrZozY2b7f8v/iV08+i8Q=": Grant {
                    "dependables": [
                      DependencyGroup {
                        "_deps": [],
                        Symbol(@aws-cdk/core.DependableTrait): {
                          "dependencyRoots": [],
                        },
                      },
                    ],
                    "options": {
                      "actions": [
                        "lambda:InvokeFunction",
                      ],
                      "grantee": Function {
                        "_allowCrossEnvironment": false,
                        "_architecture": undefined,
                        "_functionUrlInvocationGrants": {},
                        "_invocationGrants": {},
                        "_layers": [],
                        "_physicalName": undefined,
                        "_warnIfCurrentVersionCalled": false,
                        "architecture": Architecture {
                          "dockerPlatform": "linux/amd64",
                          "name": "x86_64",
                        },
                        "canCreatePermissions": true,
                        "currentVersionOptions": undefined,
                        "env": {
                          "account": "\${Token[AWS.AccountId.2]}",
                          "region": "\${Token[AWS.Region.6]}",
                        },
                        "environment": {
                          "USER_ON_EVENT_FUNCTION_ARN": {
                            "value": "\${Token[TOKEN.658]}",
                          },
                        },
                        "functionArn": "\${Token[TOKEN.687]}",
                        "functionName": "\${Token[TOKEN.686]}",
                        "grantPrincipal": Role {
                          "_allowCrossEnvironment": false,
                          "_didSplit": false,
                          "_physicalName": undefined,
                          "_roleId": "\${Token[TOKEN.671]}",
                          "assumeRoleAction": "sts:AssumeRole",
                          "assumeRolePolicy": {
                            "Statement": [
                              {
                                "Action": "sts:AssumeRole",
                                "Effect": "Allow",
                                "Principal": {
                                  "Service": "\${Token[lambda.amazonaws.com.666]}",
                                },
                              },
                            ],
                            "Version": "2012-10-17",
                          },
                          "attachedPolicies": AttachedPolicies {
                            "policies": [
                              Policy {
                                "_allowCrossEnvironment": false,
                                "_physicalName": "\${Token[TOKEN.688]}",
                                "_policyName": "\${Token[TOKEN.688]}",
                                "document": {
                                  "Statement": [
                                    {
                                      "Action": "lambda:InvokeFunction",
                                      "Effect": "Allow",
                                      "Resource": [
                                        "\${Token[TOKEN.658]}",
                                        "\${Token[TOKEN.658]}:*",
                                      ],
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "env": {
                                  "account": "\${Token[AWS.AccountId.2]}",
                                  "region": "\${Token[AWS.Region.6]}",
                                },
                                "force": false,
                                "grantPrincipal": PolicyGrantPrincipal {
                                  "_policy": [Circular],
                                  "assumeRoleAction": "sts:AssumeRole",
                                  "grantPrincipal": [Circular],
                                  "principalAccount": "\${Token[AWS.AccountId.2]}",
                                },
                                "groups": [],
                                "node": Node {
                                  "_children": {
                                    "Resource": CfnPolicyConditional {
                                      "_cfnProperties": {
                                        "groups": [
                                          "#{Token[TOKEN.691]}",
                                        ],
                                        "policyDocument": {
                                          "Statement": [
                                            {
                                              "Action": "lambda:InvokeFunction",
                                              "Effect": "Allow",
                                              "Resource": [
                                                "\${Token[TOKEN.658]}",
                                                "\${Token[TOKEN.658]}:*",
                                              ],
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "policyName": "\${Token[TOKEN.688]}",
                                        "roles": [
                                          "#{Token[TOKEN.689]}",
                                        ],
                                        "users": [
                                          "#{Token[TOKEN.690]}",
                                        ],
                                      },
                                      "cfnOptions": {},
                                      "cfnResourceType": "AWS::IAM::Policy",
                                      "dependsOn": Set {},
                                      "groups": [
                                        "#{Token[TOKEN.691]}",
                                      ],
                                      "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                      "node": Node {
                                        "_children": {},
                                        "_context": {},
                                        "_dependencies": Set {},
                                        "_locked": false,
                                        "_metadata": [
                                          {
                                            "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                            "trace": undefined,
                                            "type": "aws:cdk:logicalId",
                                          },
                                        ],
                                        "_validations": [],
                                        "host": [Circular],
                                        "id": "Resource",
                                        "scope": [Circular],
                                      },
                                      "policyDocument": {
                                        "Statement": [
                                          {
                                            "Action": "lambda:InvokeFunction",
                                            "Effect": "Allow",
                                            "Resource": [
                                              "\${Token[TOKEN.658]}",
                                              "\${Token[TOKEN.658]}:*",
                                            ],
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "policyName": "\${Token[TOKEN.688]}",
                                      "rawOverrides": {},
                                      "roles": [
                                        "#{Token[TOKEN.689]}",
                                      ],
                                      "stack": [Circular],
                                      "users": [
                                        "#{Token[TOKEN.690]}",
                                      ],
                                      Symbol(@aws-cdk/core.DependableTrait): {
                                        "dependencyRoots": [
                                          [Circular],
                                        ],
                                      },
                                    },
                                  },
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [],
                                  "_validations": [
                                    {
                                      "validate": [Function],
                                    },
                                  ],
                                  "host": [Circular],
                                  "id": "DefaultPolicy",
                                  "scope": [Circular],
                                },
                                "physicalName": "\${Token[TOKEN.688]}",
                                "referenceTaken": false,
                                "roles": [
                                  [Circular],
                                ],
                                "stack": [Circular],
                                "users": [],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                            ],
                          },
                          "defaultPolicy": Policy {
                            "_allowCrossEnvironment": false,
                            "_physicalName": "\${Token[TOKEN.688]}",
                            "_policyName": "\${Token[TOKEN.688]}",
                            "document": {
                              "Statement": [
                                {
                                  "Action": "lambda:InvokeFunction",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "\${Token[TOKEN.658]}",
                                    "\${Token[TOKEN.658]}:*",
                                  ],
                                },
                              ],
                              "Version": "2012-10-17",
                            },
                            "env": {
                              "account": "\${Token[AWS.AccountId.2]}",
                              "region": "\${Token[AWS.Region.6]}",
                            },
                            "force": false,
                            "grantPrincipal": PolicyGrantPrincipal {
                              "_policy": [Circular],
                              "assumeRoleAction": "sts:AssumeRole",
                              "grantPrincipal": [Circular],
                              "principalAccount": "\${Token[AWS.AccountId.2]}",
                            },
                            "groups": [],
                            "node": Node {
                              "_children": {
                                "Resource": CfnPolicyConditional {
                                  "_cfnProperties": {
                                    "groups": [
                                      "#{Token[TOKEN.691]}",
                                    ],
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "lambda:InvokeFunction",
                                          "Effect": "Allow",
                                          "Resource": [
                                            "\${Token[TOKEN.658]}",
                                            "\${Token[TOKEN.658]}:*",
                                          ],
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "policyName": "\${Token[TOKEN.688]}",
                                    "roles": [
                                      "#{Token[TOKEN.689]}",
                                    ],
                                    "users": [
                                      "#{Token[TOKEN.690]}",
                                    ],
                                  },
                                  "cfnOptions": {},
                                  "cfnResourceType": "AWS::IAM::Policy",
                                  "dependsOn": Set {},
                                  "groups": [
                                    "#{Token[TOKEN.691]}",
                                  ],
                                  "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                  "node": Node {
                                    "_children": {},
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [
                                      {
                                        "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                        "trace": undefined,
                                        "type": "aws:cdk:logicalId",
                                      },
                                    ],
                                    "_validations": [],
                                    "host": [Circular],
                                    "id": "Resource",
                                    "scope": [Circular],
                                  },
                                  "policyDocument": {
                                    "Statement": [
                                      {
                                        "Action": "lambda:InvokeFunction",
                                        "Effect": "Allow",
                                        "Resource": [
                                          "\${Token[TOKEN.658]}",
                                          "\${Token[TOKEN.658]}:*",
                                        ],
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "policyName": "\${Token[TOKEN.688]}",
                                  "rawOverrides": {},
                                  "roles": [
                                    "#{Token[TOKEN.689]}",
                                  ],
                                  "stack": [Circular],
                                  "users": [
                                    "#{Token[TOKEN.690]}",
                                  ],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                              },
                              "_context": {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": [],
                              "_validations": [
                                {
                                  "validate": [Function],
                                },
                              ],
                              "host": [Circular],
                              "id": "DefaultPolicy",
                              "scope": [Circular],
                            },
                            "physicalName": "\${Token[TOKEN.688]}",
                            "referenceTaken": false,
                            "roles": [
                              [Circular],
                            ],
                            "stack": [Circular],
                            "users": [],
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                          "dependables": Map {
                            {
                              "Action": "lambda:InvokeFunction",
                              "Effect": "Allow",
                              "Resource": [
                                "\${Token[TOKEN.658]}",
                                "\${Token[TOKEN.658]}:*",
                              ],
                            } => DependencyGroup {
                              "_deps": [],
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [],
                              },
                            },
                          },
                          "env": {
                            "account": "\${Token[AWS.AccountId.2]}",
                            "region": "\${Token[AWS.Region.6]}",
                          },
                          "grantPrincipal": [Circular],
                          "inlinePolicies": {},
                          "managedPolicies": [
                            AwsManagedPolicy {
                              "managedPolicyArn": "arn:\${Token[AWS.Partition.5]}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                            },
                          ],
                          "node": Node {
                            "_children": {
                              "DefaultPolicy": Policy {
                                "_allowCrossEnvironment": false,
                                "_physicalName": "\${Token[TOKEN.688]}",
                                "_policyName": "\${Token[TOKEN.688]}",
                                "document": {
                                  "Statement": [
                                    {
                                      "Action": "lambda:InvokeFunction",
                                      "Effect": "Allow",
                                      "Resource": [
                                        "\${Token[TOKEN.658]}",
                                        "\${Token[TOKEN.658]}:*",
                                      ],
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "env": {
                                  "account": "\${Token[AWS.AccountId.2]}",
                                  "region": "\${Token[AWS.Region.6]}",
                                },
                                "force": false,
                                "grantPrincipal": PolicyGrantPrincipal {
                                  "_policy": [Circular],
                                  "assumeRoleAction": "sts:AssumeRole",
                                  "grantPrincipal": [Circular],
                                  "principalAccount": "\${Token[AWS.AccountId.2]}",
                                },
                                "groups": [],
                                "node": Node {
                                  "_children": {
                                    "Resource": CfnPolicyConditional {
                                      "_cfnProperties": {
                                        "groups": [
                                          "#{Token[TOKEN.691]}",
                                        ],
                                        "policyDocument": {
                                          "Statement": [
                                            {
                                              "Action": "lambda:InvokeFunction",
                                              "Effect": "Allow",
                                              "Resource": [
                                                "\${Token[TOKEN.658]}",
                                                "\${Token[TOKEN.658]}:*",
                                              ],
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "policyName": "\${Token[TOKEN.688]}",
                                        "roles": [
                                          "#{Token[TOKEN.689]}",
                                        ],
                                        "users": [
                                          "#{Token[TOKEN.690]}",
                                        ],
                                      },
                                      "cfnOptions": {},
                                      "cfnResourceType": "AWS::IAM::Policy",
                                      "dependsOn": Set {},
                                      "groups": [
                                        "#{Token[TOKEN.691]}",
                                      ],
                                      "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                      "node": Node {
                                        "_children": {},
                                        "_context": {},
                                        "_dependencies": Set {},
                                        "_locked": false,
                                        "_metadata": [
                                          {
                                            "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                            "trace": undefined,
                                            "type": "aws:cdk:logicalId",
                                          },
                                        ],
                                        "_validations": [],
                                        "host": [Circular],
                                        "id": "Resource",
                                        "scope": [Circular],
                                      },
                                      "policyDocument": {
                                        "Statement": [
                                          {
                                            "Action": "lambda:InvokeFunction",
                                            "Effect": "Allow",
                                            "Resource": [
                                              "\${Token[TOKEN.658]}",
                                              "\${Token[TOKEN.658]}:*",
                                            ],
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "policyName": "\${Token[TOKEN.688]}",
                                      "rawOverrides": {},
                                      "roles": [
                                        "#{Token[TOKEN.689]}",
                                      ],
                                      "stack": [Circular],
                                      "users": [
                                        "#{Token[TOKEN.690]}",
                                      ],
                                      Symbol(@aws-cdk/core.DependableTrait): {
                                        "dependencyRoots": [
                                          [Circular],
                                        ],
                                      },
                                    },
                                  },
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [],
                                  "_validations": [
                                    {
                                      "validate": [Function],
                                    },
                                  ],
                                  "host": [Circular],
                                  "id": "DefaultPolicy",
                                  "scope": [Circular],
                                },
                                "physicalName": "\${Token[TOKEN.688]}",
                                "referenceTaken": false,
                                "roles": [
                                  [Circular],
                                ],
                                "stack": [Circular],
                                "users": [],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                              "ImportServiceRole": ImportedRole {
                                "_allowCrossEnvironment": false,
                                "_physicalName": undefined,
                                "assumeRoleAction": "sts:AssumeRole",
                                "attachedPolicies": AttachedPolicies {
                                  "policies": [],
                                },
                                "defaultPolicyName": undefined,
                                "env": {
                                  "account": "\${Token[AWS.AccountId.2]}",
                                  "region": "\${Token[AWS.Region.6]}",
                                },
                                "grantPrincipal": [Circular],
                                "node": Node {
                                  "_children": {},
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [],
                                  "_validations": [],
                                  "host": [Circular],
                                  "id": "ImportServiceRole",
                                  "scope": [Circular],
                                },
                                "physicalName": "\${Token[TOKEN.667]}",
                                "policyFragment": PrincipalPolicyFragment {
                                  "conditions": {},
                                  "principalJson": {
                                    "AWS": [
                                      "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                                    ],
                                  },
                                },
                                "principalAccount": "\${Token[AWS.AccountId.2]}",
                                "roleArn": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                                "roleName": "ServiceRole",
                                "stack": [Circular],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                              "Resource": CfnRole {
                                "_cfnProperties": {
                                  "assumeRolePolicyDocument": {
                                    "Statement": [
                                      {
                                        "Action": "sts:AssumeRole",
                                        "Effect": "Allow",
                                        "Principal": {
                                          "Service": "\${Token[lambda.amazonaws.com.666]}",
                                        },
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "description": undefined,
                                  "managedPolicyArns": [
                                    "#{Token[TOKEN.668]}",
                                  ],
                                  "maxSessionDuration": undefined,
                                  "path": undefined,
                                  "permissionsBoundary": undefined,
                                  "policies": undefined,
                                  "roleName": "\${Token[TOKEN.665]}",
                                },
                                "assumeRolePolicyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Principal": {
                                        "Service": "\${Token[lambda.amazonaws.com.666]}",
                                      },
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "attrArn": "\${Token[TOKEN.670]}",
                                "attrRoleId": "\${Token[TOKEN.671]}",
                                "cfnOptions": {},
                                "cfnResourceType": "AWS::IAM::Role",
                                "dependsOn": Set {},
                                "description": undefined,
                                "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.Resource.LogicalID.669]}",
                                "managedPolicyArns": [
                                  "#{Token[TOKEN.668]}",
                                ],
                                "maxSessionDuration": undefined,
                                "node": Node {
                                  "_children": {},
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [
                                    {
                                      "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.Resource.LogicalID.669]}",
                                      "trace": undefined,
                                      "type": "aws:cdk:logicalId",
                                    },
                                  ],
                                  "_validations": [],
                                  "host": [Circular],
                                  "id": "Resource",
                                  "scope": [Circular],
                                },
                                "path": undefined,
                                "permissionsBoundary": undefined,
                                "policies": undefined,
                                "rawOverrides": {},
                                "roleName": "\${Token[TOKEN.665]}",
                                "stack": [Circular],
                                "tags": TagManager {
                                  "initialTagPriority": 50,
                                  "priorities": Map {},
                                  "renderedTags": "<unresolved-lazy>",
                                  "resourceTypeName": "AWS::IAM::Role",
                                  "tagFormatter": StandardFormatter {},
                                  "tagPropertyName": "tags",
                                  "tags": Map {},
                                },
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                            },
                            "_context": {},
                            "_dependencies": Set {},
                            "_locked": false,
                            "_metadata": [],
                            "_validations": [
                              {
                                "validate": [Function],
                              },
                            ],
                            "host": [Circular],
                            "id": "ServiceRole",
                            "scope": [Circular],
                          },
                          "permissionsBoundary": undefined,
                          "physicalName": "\${Token[TOKEN.665]}",
                          "policyFragment": PrincipalPolicyFragment {
                            "conditions": {},
                            "principalJson": {
                              "AWS": [
                                "\${Token[TOKEN.672]}",
                              ],
                            },
                          },
                          "principalAccount": "\${Token[AWS.AccountId.2]}",
                          "roleArn": "\${Token[TOKEN.672]}",
                          "roleName": "\${Token[TOKEN.674]}",
                          "stack": [Circular],
                          Symbol(@aws-cdk/core.DependableTrait): {
                            "dependencyRoots": [
                              [Circular],
                            ],
                          },
                        },
                        "hashMixins": [],
                        "node": Node {
                          "_children": {
                            "Code": Asset {
                              "assetHash": "903be65b9594a9f17d7120273620367e7830b6d087fc9591f31dc5a080049e46",
                              "assetPath": "asset.903be65b9594a9f17d7120273620367e7830b6d087fc9591f31dc5a080049e46",
                              "bucket": Import {
                                "_allowCrossEnvironment": false,
                                "_physicalName": undefined,
                                "autoCreatePolicy": false,
                                "bucketArn": "arn:\${Token[AWS.Partition.5]}:s3:::\${Token[TOKEN.676]}",
                                "bucketDomainName": "\${Token[TOKEN.676]}.s3.\${Token[AWS.URLSuffix.3]}",
                                "bucketDualStackDomainName": "\${Token[TOKEN.676]}.s3.dualstack.\${Token[AWS.Region.6]}.\${Token[AWS.URLSuffix.3]}",
                                "bucketName": "\${Token[TOKEN.676]}",
                                "bucketRegionalDomainName": "\${Token[TOKEN.676]}.s3.\${Token[AWS.Region.6]}.\${Token[AWS.URLSuffix.3]}",
                                "bucketWebsiteDomainName": "\${Token[TOKEN.676]}.\${Token[TOKEN.678]}",
                                "bucketWebsiteNewUrlFormat": false,
                                "bucketWebsiteUrl": "http://\${Token[TOKEN.676]}.\${Token[TOKEN.678]}",
                                "disallowPublicAccess": false,
                                "encryptionKey": undefined,
                                "env": {
                                  "account": "\${Token[AWS.AccountId.2]}",
                                  "region": "\${Token[AWS.Region.6]}",
                                },
                                "isWebsite": false,
                                "node": Node {
                                  "_children": {},
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [],
                                  "_validations": [
                                    {
                                      "validate": [Function],
                                    },
                                  ],
                                  "host": [Circular],
                                  "id": "AssetBucket",
                                  "scope": [Circular],
                                },
                                "notificationsHandlerRole": undefined,
                                "physicalName": "\${Token[TOKEN.679]}",
                                "policy": undefined,
                                "stack": [Circular],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                              "httpUrl": "\${Token[TOKEN.675]}",
                              "isBundled": false,
                              "isFile": false,
                              "isZipArchive": true,
                              "node": Node {
                                "_children": {
                                  "AssetBucket": Import {
                                    "_allowCrossEnvironment": false,
                                    "_physicalName": undefined,
                                    "autoCreatePolicy": false,
                                    "bucketArn": "arn:\${Token[AWS.Partition.5]}:s3:::\${Token[TOKEN.676]}",
                                    "bucketDomainName": "\${Token[TOKEN.676]}.s3.\${Token[AWS.URLSuffix.3]}",
                                    "bucketDualStackDomainName": "\${Token[TOKEN.676]}.s3.dualstack.\${Token[AWS.Region.6]}.\${Token[AWS.URLSuffix.3]}",
                                    "bucketName": "\${Token[TOKEN.676]}",
                                    "bucketRegionalDomainName": "\${Token[TOKEN.676]}.s3.\${Token[AWS.Region.6]}.\${Token[AWS.URLSuffix.3]}",
                                    "bucketWebsiteDomainName": "\${Token[TOKEN.676]}.\${Token[TOKEN.678]}",
                                    "bucketWebsiteNewUrlFormat": false,
                                    "bucketWebsiteUrl": "http://\${Token[TOKEN.676]}.\${Token[TOKEN.678]}",
                                    "disallowPublicAccess": false,
                                    "encryptionKey": undefined,
                                    "env": {
                                      "account": "\${Token[AWS.AccountId.2]}",
                                      "region": "\${Token[AWS.Region.6]}",
                                    },
                                    "isWebsite": false,
                                    "node": Node {
                                      "_children": {},
                                      "_context": {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": [],
                                      "_validations": [
                                        {
                                          "validate": [Function],
                                        },
                                      ],
                                      "host": [Circular],
                                      "id": "AssetBucket",
                                      "scope": [Circular],
                                    },
                                    "notificationsHandlerRole": undefined,
                                    "physicalName": "\${Token[TOKEN.679]}",
                                    "policy": undefined,
                                    "stack": [Circular],
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [
                                        [Circular],
                                      ],
                                    },
                                  },
                                  "Stage": AssetStaging {
                                    "absoluteStagedPath": "/private/var/folders/tn/799yyvm92g74fj_thj2z7w140000gr/T/cdk-test-app-WFT8EN/asset.903be65b9594a9f17d7120273620367e7830b6d087fc9591f31dc5a080049e46",
                                    "assetHash": "903be65b9594a9f17d7120273620367e7830b6d087fc9591f31dc5a080049e46",
                                    "assetOutdir": "/private/var/folders/tn/799yyvm92g74fj_thj2z7w140000gr/T/cdk-test-app-WFT8EN",
                                    "cacheKey": "d22374b7156fb41ff718678ed8dd7c65d1393bc2a81b4585d0905e2a290f281a",
                                    "customSourceFingerprint": undefined,
                                    "fingerprintOptions": {
                                      "assetHash": undefined,
                                      "exclude": [
                                        "*.ts",
                                      ],
                                      "extraHash": undefined,
                                      "follow": undefined,
                                      "path": "/Users/rverma/dev/aws/nsl-saas-accelerator/packages/constructs/node_modules/aws-cdk-lib/custom-resources/lib/provider-framework/runtime",
                                      "sourcePath": "/Users/rverma/dev/aws/nsl-saas-accelerator/packages/constructs/node_modules/aws-cdk-lib/custom-resources/lib/provider-framework/runtime",
                                    },
                                    "hashType": "source",
                                    "isArchive": true,
                                    "node": Node {
                                      "_children": {},
                                      "_context": {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": [],
                                      "_validations": [],
                                      "host": [Circular],
                                      "id": "Stage",
                                      "scope": [Circular],
                                    },
                                    "packaging": "zip",
                                    "sourcePath": "/Users/rverma/dev/aws/nsl-saas-accelerator/packages/constructs/node_modules/aws-cdk-lib/custom-resources/lib/provider-framework/runtime",
                                    "sourceStats": Stats {
                                      "atime": 2023-04-19T02:38:43.261Z,
                                      "atimeMs": 1681871923261.3042,
                                      "birthtime": 2023-04-19T02:37:35.005Z,
                                      "birthtimeMs": 1681871855004.6274,
                                      "blksize": 4096,
                                      "blocks": 0,
                                      "ctime": 2023-04-19T02:37:35.007Z,
                                      "ctimeMs": 1681871855007.1067,
                                      "dev": 16777233,
                                      "gid": 20,
                                      "ino": 64198660,
                                      "mode": 16877,
                                      "mtime": 2023-04-19T02:37:35.007Z,
                                      "mtimeMs": 1681871855007.1067,
                                      "nlink": 12,
                                      "rdev": 0,
                                      "size": 384,
                                      "uid": 504,
                                    },
                                    "stagedPath": "/private/var/folders/tn/799yyvm92g74fj_thj2z7w140000gr/T/cdk-test-app-WFT8EN/asset.903be65b9594a9f17d7120273620367e7830b6d087fc9591f31dc5a080049e46",
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [
                                        [Circular],
                                      ],
                                    },
                                  },
                                },
                                "_context": {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": [],
                                "_validations": [],
                                "host": [Circular],
                                "id": "Code",
                                "scope": [Circular],
                              },
                              "s3BucketName": "\${Token[TOKEN.676]}",
                              "s3ObjectKey": "REPLACED-GENERATED-NAME.zip",
                              "s3ObjectUrl": "\${Token[TOKEN.677]}",
                              "s3Url": "\${Token[TOKEN.675]}",
                              "sourceHash": "903be65b9594a9f17d7120273620367e7830b6d087fc9591f31dc5a080049e46",
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [
                                  [Circular],
                                ],
                              },
                            },
                            "Resource": CfnFunction {
                              "_cfnProperties": {
                                "architectures": undefined,
                                "code": {
                                  "imageUri": undefined,
                                  "s3Bucket": "\${Token[TOKEN.676]}",
                                  "s3Key": "REPLACED-GENERATED-NAME.zip",
                                  "s3ObjectVersion": undefined,
                                  "zipFile": undefined,
                                },
                                "codeSigningConfigArn": undefined,
                                "deadLetterConfig": undefined,
                                "description": "AWS CDK resource provider framework - onEvent (Default/codeCommitSecret/Custom::GitopsSecrets)",
                                "environment": "<unresolved-lazy>",
                                "ephemeralStorage": undefined,
                                "fileSystemConfigs": undefined,
                                "functionName": "\${Token[TOKEN.664]}",
                                "handler": "framework.onEvent",
                                "imageConfig": undefined,
                                "kmsKeyArn": undefined,
                                "layers": [
                                  "#{Token[TOKEN.680]}",
                                ],
                                "memorySize": undefined,
                                "packageType": undefined,
                                "reservedConcurrentExecutions": undefined,
                                "role": "\${Token[TOKEN.672]}",
                                "runtime": "nodejs14.x",
                                "runtimeManagementConfig": undefined,
                                "timeout": 900,
                                "vpcConfig": undefined,
                              },
                              "architectures": undefined,
                              "attrArn": "\${Token[TOKEN.682]}",
                              "attrSnapStartResponseApplyOn": "\${Token[TOKEN.683]}",
                              "attrSnapStartResponseOptimizationStatus": "\${Token[TOKEN.684]}",
                              "cfnOptions": {},
                              "cfnResourceType": "AWS::Lambda::Function",
                              "code": {
                                "imageUri": undefined,
                                "s3Bucket": "\${Token[TOKEN.676]}",
                                "s3Key": "REPLACED-GENERATED-NAME.zip",
                                "s3ObjectVersion": undefined,
                                "zipFile": undefined,
                              },
                              "codeSigningConfigArn": undefined,
                              "deadLetterConfig": undefined,
                              "dependsOn": Set {},
                              "description": "AWS CDK resource provider framework - onEvent (Default/codeCommitSecret/Custom::GitopsSecrets)",
                              "environment": "<unresolved-lazy>",
                              "ephemeralStorage": undefined,
                              "fileSystemConfigs": undefined,
                              "functionName": "\${Token[TOKEN.664]}",
                              "handler": "framework.onEvent",
                              "imageConfig": undefined,
                              "kmsKeyArn": undefined,
                              "layers": [
                                "#{Token[TOKEN.680]}",
                              ],
                              "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.Resource.LogicalID.681]}",
                              "memorySize": undefined,
                              "node": Node {
                                "_children": {},
                                "_context": {},
                                "_dependencies": Set {
                                  Role {
                                    "_allowCrossEnvironment": false,
                                    "_didSplit": false,
                                    "_physicalName": undefined,
                                    "_roleId": "\${Token[TOKEN.671]}",
                                    "assumeRoleAction": "sts:AssumeRole",
                                    "assumeRolePolicy": {
                                      "Statement": [
                                        {
                                          "Action": "sts:AssumeRole",
                                          "Effect": "Allow",
                                          "Principal": {
                                            "Service": "\${Token[lambda.amazonaws.com.666]}",
                                          },
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "attachedPolicies": AttachedPolicies {
                                      "policies": [
                                        Policy {
                                          "_allowCrossEnvironment": false,
                                          "_physicalName": "\${Token[TOKEN.688]}",
                                          "_policyName": "\${Token[TOKEN.688]}",
                                          "document": {
                                            "Statement": [
                                              {
                                                "Action": "lambda:InvokeFunction",
                                                "Effect": "Allow",
                                                "Resource": [
                                                  "\${Token[TOKEN.658]}",
                                                  "\${Token[TOKEN.658]}:*",
                                                ],
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "env": {
                                            "account": "\${Token[AWS.AccountId.2]}",
                                            "region": "\${Token[AWS.Region.6]}",
                                          },
                                          "force": false,
                                          "grantPrincipal": PolicyGrantPrincipal {
                                            "_policy": [Circular],
                                            "assumeRoleAction": "sts:AssumeRole",
                                            "grantPrincipal": [Circular],
                                            "principalAccount": "\${Token[AWS.AccountId.2]}",
                                          },
                                          "groups": [],
                                          "node": Node {
                                            "_children": {
                                              "Resource": CfnPolicyConditional {
                                                "_cfnProperties": {
                                                  "groups": [
                                                    "#{Token[TOKEN.691]}",
                                                  ],
                                                  "policyDocument": {
                                                    "Statement": [
                                                      {
                                                        "Action": "lambda:InvokeFunction",
                                                        "Effect": "Allow",
                                                        "Resource": [
                                                          "\${Token[TOKEN.658]}",
                                                          "\${Token[TOKEN.658]}:*",
                                                        ],
                                                      },
                                                    ],
                                                    "Version": "2012-10-17",
                                                  },
                                                  "policyName": "\${Token[TOKEN.688]}",
                                                  "roles": [
                                                    "#{Token[TOKEN.689]}",
                                                  ],
                                                  "users": [
                                                    "#{Token[TOKEN.690]}",
                                                  ],
                                                },
                                                "cfnOptions": {},
                                                "cfnResourceType": "AWS::IAM::Policy",
                                                "dependsOn": Set {},
                                                "groups": [
                                                  "#{Token[TOKEN.691]}",
                                                ],
                                                "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                                "node": Node {
                                                  "_children": {},
                                                  "_context": {},
                                                  "_dependencies": Set {},
                                                  "_locked": false,
                                                  "_metadata": [
                                                    {
                                                      "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                                      "trace": undefined,
                                                      "type": "aws:cdk:logicalId",
                                                    },
                                                  ],
                                                  "_validations": [],
                                                  "host": [Circular],
                                                  "id": "Resource",
                                                  "scope": [Circular],
                                                },
                                                "policyDocument": {
                                                  "Statement": [
                                                    {
                                                      "Action": "lambda:InvokeFunction",
                                                      "Effect": "Allow",
                                                      "Resource": [
                                                        "\${Token[TOKEN.658]}",
                                                        "\${Token[TOKEN.658]}:*",
                                                      ],
                                                    },
                                                  ],
                                                  "Version": "2012-10-17",
                                                },
                                                "policyName": "\${Token[TOKEN.688]}",
                                                "rawOverrides": {},
                                                "roles": [
                                                  "#{Token[TOKEN.689]}",
                                                ],
                                                "stack": [Circular],
                                                "users": [
                                                  "#{Token[TOKEN.690]}",
                                                ],
                                                Symbol(@aws-cdk/core.DependableTrait): {
                                                  "dependencyRoots": [
                                                    [Circular],
                                                  ],
                                                },
                                              },
                                            },
                                            "_context": {},
                                            "_dependencies": Set {},
                                            "_locked": false,
                                            "_metadata": [],
                                            "_validations": [
                                              {
                                                "validate": [Function],
                                              },
                                            ],
                                            "host": [Circular],
                                            "id": "DefaultPolicy",
                                            "scope": [Circular],
                                          },
                                          "physicalName": "\${Token[TOKEN.688]}",
                                          "referenceTaken": false,
                                          "roles": [
                                            [Circular],
                                          ],
                                          "stack": [Circular],
                                          "users": [],
                                          Symbol(@aws-cdk/core.DependableTrait): {
                                            "dependencyRoots": [
                                              [Circular],
                                            ],
                                          },
                                        },
                                      ],
                                    },
                                    "defaultPolicy": Policy {
                                      "_allowCrossEnvironment": false,
                                      "_physicalName": "\${Token[TOKEN.688]}",
                                      "_policyName": "\${Token[TOKEN.688]}",
                                      "document": {
                                        "Statement": [
                                          {
                                            "Action": "lambda:InvokeFunction",
                                            "Effect": "Allow",
                                            "Resource": [
                                              "\${Token[TOKEN.658]}",
                                              "\${Token[TOKEN.658]}:*",
                                            ],
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "env": {
                                        "account": "\${Token[AWS.AccountId.2]}",
                                        "region": "\${Token[AWS.Region.6]}",
                                      },
                                      "force": false,
                                      "grantPrincipal": PolicyGrantPrincipal {
                                        "_policy": [Circular],
                                        "assumeRoleAction": "sts:AssumeRole",
                                        "grantPrincipal": [Circular],
                                        "principalAccount": "\${Token[AWS.AccountId.2]}",
                                      },
                                      "groups": [],
                                      "node": Node {
                                        "_children": {
                                          "Resource": CfnPolicyConditional {
                                            "_cfnProperties": {
                                              "groups": [
                                                "#{Token[TOKEN.691]}",
                                              ],
                                              "policyDocument": {
                                                "Statement": [
                                                  {
                                                    "Action": "lambda:InvokeFunction",
                                                    "Effect": "Allow",
                                                    "Resource": [
                                                      "\${Token[TOKEN.658]}",
                                                      "\${Token[TOKEN.658]}:*",
                                                    ],
                                                  },
                                                ],
                                                "Version": "2012-10-17",
                                              },
                                              "policyName": "\${Token[TOKEN.688]}",
                                              "roles": [
                                                "#{Token[TOKEN.689]}",
                                              ],
                                              "users": [
                                                "#{Token[TOKEN.690]}",
                                              ],
                                            },
                                            "cfnOptions": {},
                                            "cfnResourceType": "AWS::IAM::Policy",
                                            "dependsOn": Set {},
                                            "groups": [
                                              "#{Token[TOKEN.691]}",
                                            ],
                                            "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                            "node": Node {
                                              "_children": {},
                                              "_context": {},
                                              "_dependencies": Set {},
                                              "_locked": false,
                                              "_metadata": [
                                                {
                                                  "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                                  "trace": undefined,
                                                  "type": "aws:cdk:logicalId",
                                                },
                                              ],
                                              "_validations": [],
                                              "host": [Circular],
                                              "id": "Resource",
                                              "scope": [Circular],
                                            },
                                            "policyDocument": {
                                              "Statement": [
                                                {
                                                  "Action": "lambda:InvokeFunction",
                                                  "Effect": "Allow",
                                                  "Resource": [
                                                    "\${Token[TOKEN.658]}",
                                                    "\${Token[TOKEN.658]}:*",
                                                  ],
                                                },
                                              ],
                                              "Version": "2012-10-17",
                                            },
                                            "policyName": "\${Token[TOKEN.688]}",
                                            "rawOverrides": {},
                                            "roles": [
                                              "#{Token[TOKEN.689]}",
                                            ],
                                            "stack": [Circular],
                                            "users": [
                                              "#{Token[TOKEN.690]}",
                                            ],
                                            Symbol(@aws-cdk/core.DependableTrait): {
                                              "dependencyRoots": [
                                                [Circular],
                                              ],
                                            },
                                          },
                                        },
                                        "_context": {},
                                        "_dependencies": Set {},
                                        "_locked": false,
                                        "_metadata": [],
                                        "_validations": [
                                          {
                                            "validate": [Function],
                                          },
                                        ],
                                        "host": [Circular],
                                        "id": "DefaultPolicy",
                                        "scope": [Circular],
                                      },
                                      "physicalName": "\${Token[TOKEN.688]}",
                                      "referenceTaken": false,
                                      "roles": [
                                        [Circular],
                                      ],
                                      "stack": [Circular],
                                      "users": [],
                                      Symbol(@aws-cdk/core.DependableTrait): {
                                        "dependencyRoots": [
                                          [Circular],
                                        ],
                                      },
                                    },
                                    "dependables": Map {
                                      {
                                        "Action": "lambda:InvokeFunction",
                                        "Effect": "Allow",
                                        "Resource": [
                                          "\${Token[TOKEN.658]}",
                                          "\${Token[TOKEN.658]}:*",
                                        ],
                                      } => DependencyGroup {
                                        "_deps": [],
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [],
                                        },
                                      },
                                    },
                                    "env": {
                                      "account": "\${Token[AWS.AccountId.2]}",
                                      "region": "\${Token[AWS.Region.6]}",
                                    },
                                    "grantPrincipal": [Circular],
                                    "inlinePolicies": {},
                                    "managedPolicies": [
                                      AwsManagedPolicy {
                                        "managedPolicyArn": "arn:\${Token[AWS.Partition.5]}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                                      },
                                    ],
                                    "node": Node {
                                      "_children": {
                                        "DefaultPolicy": Policy {
                                          "_allowCrossEnvironment": false,
                                          "_physicalName": "\${Token[TOKEN.688]}",
                                          "_policyName": "\${Token[TOKEN.688]}",
                                          "document": {
                                            "Statement": [
                                              {
                                                "Action": "lambda:InvokeFunction",
                                                "Effect": "Allow",
                                                "Resource": [
                                                  "\${Token[TOKEN.658]}",
                                                  "\${Token[TOKEN.658]}:*",
                                                ],
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "env": {
                                            "account": "\${Token[AWS.AccountId.2]}",
                                            "region": "\${Token[AWS.Region.6]}",
                                          },
                                          "force": false,
                                          "grantPrincipal": PolicyGrantPrincipal {
                                            "_policy": [Circular],
                                            "assumeRoleAction": "sts:AssumeRole",
                                            "grantPrincipal": [Circular],
                                            "principalAccount": "\${Token[AWS.AccountId.2]}",
                                          },
                                          "groups": [],
                                          "node": Node {
                                            "_children": {
                                              "Resource": CfnPolicyConditional {
                                                "_cfnProperties": {
                                                  "groups": [
                                                    "#{Token[TOKEN.691]}",
                                                  ],
                                                  "policyDocument": {
                                                    "Statement": [
                                                      {
                                                        "Action": "lambda:InvokeFunction",
                                                        "Effect": "Allow",
                                                        "Resource": [
                                                          "\${Token[TOKEN.658]}",
                                                          "\${Token[TOKEN.658]}:*",
                                                        ],
                                                      },
                                                    ],
                                                    "Version": "2012-10-17",
                                                  },
                                                  "policyName": "\${Token[TOKEN.688]}",
                                                  "roles": [
                                                    "#{Token[TOKEN.689]}",
                                                  ],
                                                  "users": [
                                                    "#{Token[TOKEN.690]}",
                                                  ],
                                                },
                                                "cfnOptions": {},
                                                "cfnResourceType": "AWS::IAM::Policy",
                                                "dependsOn": Set {},
                                                "groups": [
                                                  "#{Token[TOKEN.691]}",
                                                ],
                                                "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                                "node": Node {
                                                  "_children": {},
                                                  "_context": {},
                                                  "_dependencies": Set {},
                                                  "_locked": false,
                                                  "_metadata": [
                                                    {
                                                      "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                                      "trace": undefined,
                                                      "type": "aws:cdk:logicalId",
                                                    },
                                                  ],
                                                  "_validations": [],
                                                  "host": [Circular],
                                                  "id": "Resource",
                                                  "scope": [Circular],
                                                },
                                                "policyDocument": {
                                                  "Statement": [
                                                    {
                                                      "Action": "lambda:InvokeFunction",
                                                      "Effect": "Allow",
                                                      "Resource": [
                                                        "\${Token[TOKEN.658]}",
                                                        "\${Token[TOKEN.658]}:*",
                                                      ],
                                                    },
                                                  ],
                                                  "Version": "2012-10-17",
                                                },
                                                "policyName": "\${Token[TOKEN.688]}",
                                                "rawOverrides": {},
                                                "roles": [
                                                  "#{Token[TOKEN.689]}",
                                                ],
                                                "stack": [Circular],
                                                "users": [
                                                  "#{Token[TOKEN.690]}",
                                                ],
                                                Symbol(@aws-cdk/core.DependableTrait): {
                                                  "dependencyRoots": [
                                                    [Circular],
                                                  ],
                                                },
                                              },
                                            },
                                            "_context": {},
                                            "_dependencies": Set {},
                                            "_locked": false,
                                            "_metadata": [],
                                            "_validations": [
                                              {
                                                "validate": [Function],
                                              },
                                            ],
                                            "host": [Circular],
                                            "id": "DefaultPolicy",
                                            "scope": [Circular],
                                          },
                                          "physicalName": "\${Token[TOKEN.688]}",
                                          "referenceTaken": false,
                                          "roles": [
                                            [Circular],
                                          ],
                                          "stack": [Circular],
                                          "users": [],
                                          Symbol(@aws-cdk/core.DependableTrait): {
                                            "dependencyRoots": [
                                              [Circular],
                                            ],
                                          },
                                        },
                                        "ImportServiceRole": ImportedRole {
                                          "_allowCrossEnvironment": false,
                                          "_physicalName": undefined,
                                          "assumeRoleAction": "sts:AssumeRole",
                                          "attachedPolicies": AttachedPolicies {
                                            "policies": [],
                                          },
                                          "defaultPolicyName": undefined,
                                          "env": {
                                            "account": "\${Token[AWS.AccountId.2]}",
                                            "region": "\${Token[AWS.Region.6]}",
                                          },
                                          "grantPrincipal": [Circular],
                                          "node": Node {
                                            "_children": {},
                                            "_context": {},
                                            "_dependencies": Set {},
                                            "_locked": false,
                                            "_metadata": [],
                                            "_validations": [],
                                            "host": [Circular],
                                            "id": "ImportServiceRole",
                                            "scope": [Circular],
                                          },
                                          "physicalName": "\${Token[TOKEN.667]}",
                                          "policyFragment": PrincipalPolicyFragment {
                                            "conditions": {},
                                            "principalJson": {
                                              "AWS": [
                                                "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                                              ],
                                            },
                                          },
                                          "principalAccount": "\${Token[AWS.AccountId.2]}",
                                          "roleArn": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                                          "roleName": "ServiceRole",
                                          "stack": [Circular],
                                          Symbol(@aws-cdk/core.DependableTrait): {
                                            "dependencyRoots": [
                                              [Circular],
                                            ],
                                          },
                                        },
                                        "Resource": CfnRole {
                                          "_cfnProperties": {
                                            "assumeRolePolicyDocument": {
                                              "Statement": [
                                                {
                                                  "Action": "sts:AssumeRole",
                                                  "Effect": "Allow",
                                                  "Principal": {
                                                    "Service": "\${Token[lambda.amazonaws.com.666]}",
                                                  },
                                                },
                                              ],
                                              "Version": "2012-10-17",
                                            },
                                            "description": undefined,
                                            "managedPolicyArns": [
                                              "#{Token[TOKEN.668]}",
                                            ],
                                            "maxSessionDuration": undefined,
                                            "path": undefined,
                                            "permissionsBoundary": undefined,
                                            "policies": undefined,
                                            "roleName": "\${Token[TOKEN.665]}",
                                          },
                                          "assumeRolePolicyDocument": {
                                            "Statement": [
                                              {
                                                "Action": "sts:AssumeRole",
                                                "Effect": "Allow",
                                                "Principal": {
                                                  "Service": "\${Token[lambda.amazonaws.com.666]}",
                                                },
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "attrArn": "\${Token[TOKEN.670]}",
                                          "attrRoleId": "\${Token[TOKEN.671]}",
                                          "cfnOptions": {},
                                          "cfnResourceType": "AWS::IAM::Role",
                                          "dependsOn": Set {},
                                          "description": undefined,
                                          "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.Resource.LogicalID.669]}",
                                          "managedPolicyArns": [
                                            "#{Token[TOKEN.668]}",
                                          ],
                                          "maxSessionDuration": undefined,
                                          "node": Node {
                                            "_children": {},
                                            "_context": {},
                                            "_dependencies": Set {},
                                            "_locked": false,
                                            "_metadata": [
                                              {
                                                "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.Resource.LogicalID.669]}",
                                                "trace": undefined,
                                                "type": "aws:cdk:logicalId",
                                              },
                                            ],
                                            "_validations": [],
                                            "host": [Circular],
                                            "id": "Resource",
                                            "scope": [Circular],
                                          },
                                          "path": undefined,
                                          "permissionsBoundary": undefined,
                                          "policies": undefined,
                                          "rawOverrides": {},
                                          "roleName": "\${Token[TOKEN.665]}",
                                          "stack": [Circular],
                                          "tags": TagManager {
                                            "initialTagPriority": 50,
                                            "priorities": Map {},
                                            "renderedTags": "<unresolved-lazy>",
                                            "resourceTypeName": "AWS::IAM::Role",
                                            "tagFormatter": StandardFormatter {},
                                            "tagPropertyName": "tags",
                                            "tags": Map {},
                                          },
                                          Symbol(@aws-cdk/core.DependableTrait): {
                                            "dependencyRoots": [
                                              [Circular],
                                            ],
                                          },
                                        },
                                      },
                                      "_context": {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": [],
                                      "_validations": [
                                        {
                                          "validate": [Function],
                                        },
                                      ],
                                      "host": [Circular],
                                      "id": "ServiceRole",
                                      "scope": [Circular],
                                    },
                                    "permissionsBoundary": undefined,
                                    "physicalName": "\${Token[TOKEN.665]}",
                                    "policyFragment": PrincipalPolicyFragment {
                                      "conditions": {},
                                      "principalJson": {
                                        "AWS": [
                                          "\${Token[TOKEN.672]}",
                                        ],
                                      },
                                    },
                                    "principalAccount": "\${Token[AWS.AccountId.2]}",
                                    "roleArn": "\${Token[TOKEN.672]}",
                                    "roleName": "\${Token[TOKEN.674]}",
                                    "stack": [Circular],
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [
                                        [Circular],
                                      ],
                                    },
                                  },
                                },
                                "_locked": false,
                                "_metadata": [
                                  {
                                    "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.Resource.LogicalID.681]}",
                                    "trace": undefined,
                                    "type": "aws:cdk:logicalId",
                                  },
                                ],
                                "_validations": [],
                                "host": [Circular],
                                "id": "Resource",
                                "scope": [Circular],
                              },
                              "packageType": undefined,
                              "rawOverrides": {},
                              "reservedConcurrentExecutions": undefined,
                              "role": "\${Token[TOKEN.672]}",
                              "runtime": "nodejs14.x",
                              "runtimeManagementConfig": undefined,
                              "snapStart": undefined,
                              "stack": [Circular],
                              "tags": TagManager {
                                "initialTagPriority": 50,
                                "priorities": Map {},
                                "renderedTags": "<unresolved-lazy>",
                                "resourceTypeName": "AWS::Lambda::Function",
                                "tagFormatter": StandardFormatter {},
                                "tagPropertyName": "tags",
                                "tags": Map {},
                              },
                              "timeout": 900,
                              "tracingConfig": undefined,
                              "vpcConfig": undefined,
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [
                                  [Circular],
                                ],
                              },
                            },
                            "ServiceRole": Role {
                              "_allowCrossEnvironment": false,
                              "_didSplit": false,
                              "_physicalName": undefined,
                              "_roleId": "\${Token[TOKEN.671]}",
                              "assumeRoleAction": "sts:AssumeRole",
                              "assumeRolePolicy": {
                                "Statement": [
                                  {
                                    "Action": "sts:AssumeRole",
                                    "Effect": "Allow",
                                    "Principal": {
                                      "Service": "\${Token[lambda.amazonaws.com.666]}",
                                    },
                                  },
                                ],
                                "Version": "2012-10-17",
                              },
                              "attachedPolicies": AttachedPolicies {
                                "policies": [
                                  Policy {
                                    "_allowCrossEnvironment": false,
                                    "_physicalName": "\${Token[TOKEN.688]}",
                                    "_policyName": "\${Token[TOKEN.688]}",
                                    "document": {
                                      "Statement": [
                                        {
                                          "Action": "lambda:InvokeFunction",
                                          "Effect": "Allow",
                                          "Resource": [
                                            "\${Token[TOKEN.658]}",
                                            "\${Token[TOKEN.658]}:*",
                                          ],
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "env": {
                                      "account": "\${Token[AWS.AccountId.2]}",
                                      "region": "\${Token[AWS.Region.6]}",
                                    },
                                    "force": false,
                                    "grantPrincipal": PolicyGrantPrincipal {
                                      "_policy": [Circular],
                                      "assumeRoleAction": "sts:AssumeRole",
                                      "grantPrincipal": [Circular],
                                      "principalAccount": "\${Token[AWS.AccountId.2]}",
                                    },
                                    "groups": [],
                                    "node": Node {
                                      "_children": {
                                        "Resource": CfnPolicyConditional {
                                          "_cfnProperties": {
                                            "groups": [
                                              "#{Token[TOKEN.691]}",
                                            ],
                                            "policyDocument": {
                                              "Statement": [
                                                {
                                                  "Action": "lambda:InvokeFunction",
                                                  "Effect": "Allow",
                                                  "Resource": [
                                                    "\${Token[TOKEN.658]}",
                                                    "\${Token[TOKEN.658]}:*",
                                                  ],
                                                },
                                              ],
                                              "Version": "2012-10-17",
                                            },
                                            "policyName": "\${Token[TOKEN.688]}",
                                            "roles": [
                                              "#{Token[TOKEN.689]}",
                                            ],
                                            "users": [
                                              "#{Token[TOKEN.690]}",
                                            ],
                                          },
                                          "cfnOptions": {},
                                          "cfnResourceType": "AWS::IAM::Policy",
                                          "dependsOn": Set {},
                                          "groups": [
                                            "#{Token[TOKEN.691]}",
                                          ],
                                          "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                          "node": Node {
                                            "_children": {},
                                            "_context": {},
                                            "_dependencies": Set {},
                                            "_locked": false,
                                            "_metadata": [
                                              {
                                                "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                                "trace": undefined,
                                                "type": "aws:cdk:logicalId",
                                              },
                                            ],
                                            "_validations": [],
                                            "host": [Circular],
                                            "id": "Resource",
                                            "scope": [Circular],
                                          },
                                          "policyDocument": {
                                            "Statement": [
                                              {
                                                "Action": "lambda:InvokeFunction",
                                                "Effect": "Allow",
                                                "Resource": [
                                                  "\${Token[TOKEN.658]}",
                                                  "\${Token[TOKEN.658]}:*",
                                                ],
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "policyName": "\${Token[TOKEN.688]}",
                                          "rawOverrides": {},
                                          "roles": [
                                            "#{Token[TOKEN.689]}",
                                          ],
                                          "stack": [Circular],
                                          "users": [
                                            "#{Token[TOKEN.690]}",
                                          ],
                                          Symbol(@aws-cdk/core.DependableTrait): {
                                            "dependencyRoots": [
                                              [Circular],
                                            ],
                                          },
                                        },
                                      },
                                      "_context": {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": [],
                                      "_validations": [
                                        {
                                          "validate": [Function],
                                        },
                                      ],
                                      "host": [Circular],
                                      "id": "DefaultPolicy",
                                      "scope": [Circular],
                                    },
                                    "physicalName": "\${Token[TOKEN.688]}",
                                    "referenceTaken": false,
                                    "roles": [
                                      [Circular],
                                    ],
                                    "stack": [Circular],
                                    "users": [],
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [
                                        [Circular],
                                      ],
                                    },
                                  },
                                ],
                              },
                              "defaultPolicy": Policy {
                                "_allowCrossEnvironment": false,
                                "_physicalName": "\${Token[TOKEN.688]}",
                                "_policyName": "\${Token[TOKEN.688]}",
                                "document": {
                                  "Statement": [
                                    {
                                      "Action": "lambda:InvokeFunction",
                                      "Effect": "Allow",
                                      "Resource": [
                                        "\${Token[TOKEN.658]}",
                                        "\${Token[TOKEN.658]}:*",
                                      ],
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "env": {
                                  "account": "\${Token[AWS.AccountId.2]}",
                                  "region": "\${Token[AWS.Region.6]}",
                                },
                                "force": false,
                                "grantPrincipal": PolicyGrantPrincipal {
                                  "_policy": [Circular],
                                  "assumeRoleAction": "sts:AssumeRole",
                                  "grantPrincipal": [Circular],
                                  "principalAccount": "\${Token[AWS.AccountId.2]}",
                                },
                                "groups": [],
                                "node": Node {
                                  "_children": {
                                    "Resource": CfnPolicyConditional {
                                      "_cfnProperties": {
                                        "groups": [
                                          "#{Token[TOKEN.691]}",
                                        ],
                                        "policyDocument": {
                                          "Statement": [
                                            {
                                              "Action": "lambda:InvokeFunction",
                                              "Effect": "Allow",
                                              "Resource": [
                                                "\${Token[TOKEN.658]}",
                                                "\${Token[TOKEN.658]}:*",
                                              ],
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "policyName": "\${Token[TOKEN.688]}",
                                        "roles": [
                                          "#{Token[TOKEN.689]}",
                                        ],
                                        "users": [
                                          "#{Token[TOKEN.690]}",
                                        ],
                                      },
                                      "cfnOptions": {},
                                      "cfnResourceType": "AWS::IAM::Policy",
                                      "dependsOn": Set {},
                                      "groups": [
                                        "#{Token[TOKEN.691]}",
                                      ],
                                      "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                      "node": Node {
                                        "_children": {},
                                        "_context": {},
                                        "_dependencies": Set {},
                                        "_locked": false,
                                        "_metadata": [
                                          {
                                            "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                            "trace": undefined,
                                            "type": "aws:cdk:logicalId",
                                          },
                                        ],
                                        "_validations": [],
                                        "host": [Circular],
                                        "id": "Resource",
                                        "scope": [Circular],
                                      },
                                      "policyDocument": {
                                        "Statement": [
                                          {
                                            "Action": "lambda:InvokeFunction",
                                            "Effect": "Allow",
                                            "Resource": [
                                              "\${Token[TOKEN.658]}",
                                              "\${Token[TOKEN.658]}:*",
                                            ],
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "policyName": "\${Token[TOKEN.688]}",
                                      "rawOverrides": {},
                                      "roles": [
                                        "#{Token[TOKEN.689]}",
                                      ],
                                      "stack": [Circular],
                                      "users": [
                                        "#{Token[TOKEN.690]}",
                                      ],
                                      Symbol(@aws-cdk/core.DependableTrait): {
                                        "dependencyRoots": [
                                          [Circular],
                                        ],
                                      },
                                    },
                                  },
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [],
                                  "_validations": [
                                    {
                                      "validate": [Function],
                                    },
                                  ],
                                  "host": [Circular],
                                  "id": "DefaultPolicy",
                                  "scope": [Circular],
                                },
                                "physicalName": "\${Token[TOKEN.688]}",
                                "referenceTaken": false,
                                "roles": [
                                  [Circular],
                                ],
                                "stack": [Circular],
                                "users": [],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                              "dependables": Map {
                                {
                                  "Action": "lambda:InvokeFunction",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "\${Token[TOKEN.658]}",
                                    "\${Token[TOKEN.658]}:*",
                                  ],
                                } => DependencyGroup {
                                  "_deps": [],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [],
                                  },
                                },
                              },
                              "env": {
                                "account": "\${Token[AWS.AccountId.2]}",
                                "region": "\${Token[AWS.Region.6]}",
                              },
                              "grantPrincipal": [Circular],
                              "inlinePolicies": {},
                              "managedPolicies": [
                                AwsManagedPolicy {
                                  "managedPolicyArn": "arn:\${Token[AWS.Partition.5]}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                                },
                              ],
                              "node": Node {
                                "_children": {
                                  "DefaultPolicy": Policy {
                                    "_allowCrossEnvironment": false,
                                    "_physicalName": "\${Token[TOKEN.688]}",
                                    "_policyName": "\${Token[TOKEN.688]}",
                                    "document": {
                                      "Statement": [
                                        {
                                          "Action": "lambda:InvokeFunction",
                                          "Effect": "Allow",
                                          "Resource": [
                                            "\${Token[TOKEN.658]}",
                                            "\${Token[TOKEN.658]}:*",
                                          ],
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "env": {
                                      "account": "\${Token[AWS.AccountId.2]}",
                                      "region": "\${Token[AWS.Region.6]}",
                                    },
                                    "force": false,
                                    "grantPrincipal": PolicyGrantPrincipal {
                                      "_policy": [Circular],
                                      "assumeRoleAction": "sts:AssumeRole",
                                      "grantPrincipal": [Circular],
                                      "principalAccount": "\${Token[AWS.AccountId.2]}",
                                    },
                                    "groups": [],
                                    "node": Node {
                                      "_children": {
                                        "Resource": CfnPolicyConditional {
                                          "_cfnProperties": {
                                            "groups": [
                                              "#{Token[TOKEN.691]}",
                                            ],
                                            "policyDocument": {
                                              "Statement": [
                                                {
                                                  "Action": "lambda:InvokeFunction",
                                                  "Effect": "Allow",
                                                  "Resource": [
                                                    "\${Token[TOKEN.658]}",
                                                    "\${Token[TOKEN.658]}:*",
                                                  ],
                                                },
                                              ],
                                              "Version": "2012-10-17",
                                            },
                                            "policyName": "\${Token[TOKEN.688]}",
                                            "roles": [
                                              "#{Token[TOKEN.689]}",
                                            ],
                                            "users": [
                                              "#{Token[TOKEN.690]}",
                                            ],
                                          },
                                          "cfnOptions": {},
                                          "cfnResourceType": "AWS::IAM::Policy",
                                          "dependsOn": Set {},
                                          "groups": [
                                            "#{Token[TOKEN.691]}",
                                          ],
                                          "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                          "node": Node {
                                            "_children": {},
                                            "_context": {},
                                            "_dependencies": Set {},
                                            "_locked": false,
                                            "_metadata": [
                                              {
                                                "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                                "trace": undefined,
                                                "type": "aws:cdk:logicalId",
                                              },
                                            ],
                                            "_validations": [],
                                            "host": [Circular],
                                            "id": "Resource",
                                            "scope": [Circular],
                                          },
                                          "policyDocument": {
                                            "Statement": [
                                              {
                                                "Action": "lambda:InvokeFunction",
                                                "Effect": "Allow",
                                                "Resource": [
                                                  "\${Token[TOKEN.658]}",
                                                  "\${Token[TOKEN.658]}:*",
                                                ],
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "policyName": "\${Token[TOKEN.688]}",
                                          "rawOverrides": {},
                                          "roles": [
                                            "#{Token[TOKEN.689]}",
                                          ],
                                          "stack": [Circular],
                                          "users": [
                                            "#{Token[TOKEN.690]}",
                                          ],
                                          Symbol(@aws-cdk/core.DependableTrait): {
                                            "dependencyRoots": [
                                              [Circular],
                                            ],
                                          },
                                        },
                                      },
                                      "_context": {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": [],
                                      "_validations": [
                                        {
                                          "validate": [Function],
                                        },
                                      ],
                                      "host": [Circular],
                                      "id": "DefaultPolicy",
                                      "scope": [Circular],
                                    },
                                    "physicalName": "\${Token[TOKEN.688]}",
                                    "referenceTaken": false,
                                    "roles": [
                                      [Circular],
                                    ],
                                    "stack": [Circular],
                                    "users": [],
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [
                                        [Circular],
                                      ],
                                    },
                                  },
                                  "ImportServiceRole": ImportedRole {
                                    "_allowCrossEnvironment": false,
                                    "_physicalName": undefined,
                                    "assumeRoleAction": "sts:AssumeRole",
                                    "attachedPolicies": AttachedPolicies {
                                      "policies": [],
                                    },
                                    "defaultPolicyName": undefined,
                                    "env": {
                                      "account": "\${Token[AWS.AccountId.2]}",
                                      "region": "\${Token[AWS.Region.6]}",
                                    },
                                    "grantPrincipal": [Circular],
                                    "node": Node {
                                      "_children": {},
                                      "_context": {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": [],
                                      "_validations": [],
                                      "host": [Circular],
                                      "id": "ImportServiceRole",
                                      "scope": [Circular],
                                    },
                                    "physicalName": "\${Token[TOKEN.667]}",
                                    "policyFragment": PrincipalPolicyFragment {
                                      "conditions": {},
                                      "principalJson": {
                                        "AWS": [
                                          "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                                        ],
                                      },
                                    },
                                    "principalAccount": "\${Token[AWS.AccountId.2]}",
                                    "roleArn": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                                    "roleName": "ServiceRole",
                                    "stack": [Circular],
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [
                                        [Circular],
                                      ],
                                    },
                                  },
                                  "Resource": CfnRole {
                                    "_cfnProperties": {
                                      "assumeRolePolicyDocument": {
                                        "Statement": [
                                          {
                                            "Action": "sts:AssumeRole",
                                            "Effect": "Allow",
                                            "Principal": {
                                              "Service": "\${Token[lambda.amazonaws.com.666]}",
                                            },
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "description": undefined,
                                      "managedPolicyArns": [
                                        "#{Token[TOKEN.668]}",
                                      ],
                                      "maxSessionDuration": undefined,
                                      "path": undefined,
                                      "permissionsBoundary": undefined,
                                      "policies": undefined,
                                      "roleName": "\${Token[TOKEN.665]}",
                                    },
                                    "assumeRolePolicyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "sts:AssumeRole",
                                          "Effect": "Allow",
                                          "Principal": {
                                            "Service": "\${Token[lambda.amazonaws.com.666]}",
                                          },
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "attrArn": "\${Token[TOKEN.670]}",
                                    "attrRoleId": "\${Token[TOKEN.671]}",
                                    "cfnOptions": {},
                                    "cfnResourceType": "AWS::IAM::Role",
                                    "dependsOn": Set {},
                                    "description": undefined,
                                    "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.Resource.LogicalID.669]}",
                                    "managedPolicyArns": [
                                      "#{Token[TOKEN.668]}",
                                    ],
                                    "maxSessionDuration": undefined,
                                    "node": Node {
                                      "_children": {},
                                      "_context": {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": [
                                        {
                                          "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.Resource.LogicalID.669]}",
                                          "trace": undefined,
                                          "type": "aws:cdk:logicalId",
                                        },
                                      ],
                                      "_validations": [],
                                      "host": [Circular],
                                      "id": "Resource",
                                      "scope": [Circular],
                                    },
                                    "path": undefined,
                                    "permissionsBoundary": undefined,
                                    "policies": undefined,
                                    "rawOverrides": {},
                                    "roleName": "\${Token[TOKEN.665]}",
                                    "stack": [Circular],
                                    "tags": TagManager {
                                      "initialTagPriority": 50,
                                      "priorities": Map {},
                                      "renderedTags": "<unresolved-lazy>",
                                      "resourceTypeName": "AWS::IAM::Role",
                                      "tagFormatter": StandardFormatter {},
                                      "tagPropertyName": "tags",
                                      "tags": Map {},
                                    },
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [
                                        [Circular],
                                      ],
                                    },
                                  },
                                },
                                "_context": {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": [],
                                "_validations": [
                                  {
                                    "validate": [Function],
                                  },
                                ],
                                "host": [Circular],
                                "id": "ServiceRole",
                                "scope": [Circular],
                              },
                              "permissionsBoundary": undefined,
                              "physicalName": "\${Token[TOKEN.665]}",
                              "policyFragment": PrincipalPolicyFragment {
                                "conditions": {},
                                "principalJson": {
                                  "AWS": [
                                    "\${Token[TOKEN.672]}",
                                  ],
                                },
                              },
                              "principalAccount": "\${Token[AWS.AccountId.2]}",
                              "roleArn": "\${Token[TOKEN.672]}",
                              "roleName": "\${Token[TOKEN.674]}",
                              "stack": [Circular],
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [
                                  [Circular],
                                ],
                              },
                            },
                          },
                          "_context": {},
                          "_dependencies": Set {},
                          "_locked": false,
                          "_metadata": [],
                          "_validations": [],
                          "host": [Circular],
                          "id": "framework-onEvent",
                          "scope": [Circular],
                        },
                        "permissionsNode": Node {
                          "_children": {
                            "Code": Asset {
                              "assetHash": "903be65b9594a9f17d7120273620367e7830b6d087fc9591f31dc5a080049e46",
                              "assetPath": "asset.903be65b9594a9f17d7120273620367e7830b6d087fc9591f31dc5a080049e46",
                              "bucket": Import {
                                "_allowCrossEnvironment": false,
                                "_physicalName": undefined,
                                "autoCreatePolicy": false,
                                "bucketArn": "arn:\${Token[AWS.Partition.5]}:s3:::\${Token[TOKEN.676]}",
                                "bucketDomainName": "\${Token[TOKEN.676]}.s3.\${Token[AWS.URLSuffix.3]}",
                                "bucketDualStackDomainName": "\${Token[TOKEN.676]}.s3.dualstack.\${Token[AWS.Region.6]}.\${Token[AWS.URLSuffix.3]}",
                                "bucketName": "\${Token[TOKEN.676]}",
                                "bucketRegionalDomainName": "\${Token[TOKEN.676]}.s3.\${Token[AWS.Region.6]}.\${Token[AWS.URLSuffix.3]}",
                                "bucketWebsiteDomainName": "\${Token[TOKEN.676]}.\${Token[TOKEN.678]}",
                                "bucketWebsiteNewUrlFormat": false,
                                "bucketWebsiteUrl": "http://\${Token[TOKEN.676]}.\${Token[TOKEN.678]}",
                                "disallowPublicAccess": false,
                                "encryptionKey": undefined,
                                "env": {
                                  "account": "\${Token[AWS.AccountId.2]}",
                                  "region": "\${Token[AWS.Region.6]}",
                                },
                                "isWebsite": false,
                                "node": Node {
                                  "_children": {},
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [],
                                  "_validations": [
                                    {
                                      "validate": [Function],
                                    },
                                  ],
                                  "host": [Circular],
                                  "id": "AssetBucket",
                                  "scope": [Circular],
                                },
                                "notificationsHandlerRole": undefined,
                                "physicalName": "\${Token[TOKEN.679]}",
                                "policy": undefined,
                                "stack": [Circular],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                              "httpUrl": "\${Token[TOKEN.675]}",
                              "isBundled": false,
                              "isFile": false,
                              "isZipArchive": true,
                              "node": Node {
                                "_children": {
                                  "AssetBucket": Import {
                                    "_allowCrossEnvironment": false,
                                    "_physicalName": undefined,
                                    "autoCreatePolicy": false,
                                    "bucketArn": "arn:\${Token[AWS.Partition.5]}:s3:::\${Token[TOKEN.676]}",
                                    "bucketDomainName": "\${Token[TOKEN.676]}.s3.\${Token[AWS.URLSuffix.3]}",
                                    "bucketDualStackDomainName": "\${Token[TOKEN.676]}.s3.dualstack.\${Token[AWS.Region.6]}.\${Token[AWS.URLSuffix.3]}",
                                    "bucketName": "\${Token[TOKEN.676]}",
                                    "bucketRegionalDomainName": "\${Token[TOKEN.676]}.s3.\${Token[AWS.Region.6]}.\${Token[AWS.URLSuffix.3]}",
                                    "bucketWebsiteDomainName": "\${Token[TOKEN.676]}.\${Token[TOKEN.678]}",
                                    "bucketWebsiteNewUrlFormat": false,
                                    "bucketWebsiteUrl": "http://\${Token[TOKEN.676]}.\${Token[TOKEN.678]}",
                                    "disallowPublicAccess": false,
                                    "encryptionKey": undefined,
                                    "env": {
                                      "account": "\${Token[AWS.AccountId.2]}",
                                      "region": "\${Token[AWS.Region.6]}",
                                    },
                                    "isWebsite": false,
                                    "node": Node {
                                      "_children": {},
                                      "_context": {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": [],
                                      "_validations": [
                                        {
                                          "validate": [Function],
                                        },
                                      ],
                                      "host": [Circular],
                                      "id": "AssetBucket",
                                      "scope": [Circular],
                                    },
                                    "notificationsHandlerRole": undefined,
                                    "physicalName": "\${Token[TOKEN.679]}",
                                    "policy": undefined,
                                    "stack": [Circular],
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [
                                        [Circular],
                                      ],
                                    },
                                  },
                                  "Stage": AssetStaging {
                                    "absoluteStagedPath": "/private/var/folders/tn/799yyvm92g74fj_thj2z7w140000gr/T/cdk-test-app-WFT8EN/asset.903be65b9594a9f17d7120273620367e7830b6d087fc9591f31dc5a080049e46",
                                    "assetHash": "903be65b9594a9f17d7120273620367e7830b6d087fc9591f31dc5a080049e46",
                                    "assetOutdir": "/private/var/folders/tn/799yyvm92g74fj_thj2z7w140000gr/T/cdk-test-app-WFT8EN",
                                    "cacheKey": "d22374b7156fb41ff718678ed8dd7c65d1393bc2a81b4585d0905e2a290f281a",
                                    "customSourceFingerprint": undefined,
                                    "fingerprintOptions": {
                                      "assetHash": undefined,
                                      "exclude": [
                                        "*.ts",
                                      ],
                                      "extraHash": undefined,
                                      "follow": undefined,
                                      "path": "/Users/rverma/dev/aws/nsl-saas-accelerator/packages/constructs/node_modules/aws-cdk-lib/custom-resources/lib/provider-framework/runtime",
                                      "sourcePath": "/Users/rverma/dev/aws/nsl-saas-accelerator/packages/constructs/node_modules/aws-cdk-lib/custom-resources/lib/provider-framework/runtime",
                                    },
                                    "hashType": "source",
                                    "isArchive": true,
                                    "node": Node {
                                      "_children": {},
                                      "_context": {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": [],
                                      "_validations": [],
                                      "host": [Circular],
                                      "id": "Stage",
                                      "scope": [Circular],
                                    },
                                    "packaging": "zip",
                                    "sourcePath": "/Users/rverma/dev/aws/nsl-saas-accelerator/packages/constructs/node_modules/aws-cdk-lib/custom-resources/lib/provider-framework/runtime",
                                    "sourceStats": Stats {
                                      "atime": 2023-04-19T02:38:43.261Z,
                                      "atimeMs": 1681871923261.3042,
                                      "birthtime": 2023-04-19T02:37:35.005Z,
                                      "birthtimeMs": 1681871855004.6274,
                                      "blksize": 4096,
                                      "blocks": 0,
                                      "ctime": 2023-04-19T02:37:35.007Z,
                                      "ctimeMs": 1681871855007.1067,
                                      "dev": 16777233,
                                      "gid": 20,
                                      "ino": 64198660,
                                      "mode": 16877,
                                      "mtime": 2023-04-19T02:37:35.007Z,
                                      "mtimeMs": 1681871855007.1067,
                                      "nlink": 12,
                                      "rdev": 0,
                                      "size": 384,
                                      "uid": 504,
                                    },
                                    "stagedPath": "/private/var/folders/tn/799yyvm92g74fj_thj2z7w140000gr/T/cdk-test-app-WFT8EN/asset.903be65b9594a9f17d7120273620367e7830b6d087fc9591f31dc5a080049e46",
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [
                                        [Circular],
                                      ],
                                    },
                                  },
                                },
                                "_context": {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": [],
                                "_validations": [],
                                "host": [Circular],
                                "id": "Code",
                                "scope": [Circular],
                              },
                              "s3BucketName": "\${Token[TOKEN.676]}",
                              "s3ObjectKey": "REPLACED-GENERATED-NAME.zip",
                              "s3ObjectUrl": "\${Token[TOKEN.677]}",
                              "s3Url": "\${Token[TOKEN.675]}",
                              "sourceHash": "903be65b9594a9f17d7120273620367e7830b6d087fc9591f31dc5a080049e46",
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [
                                  [Circular],
                                ],
                              },
                            },
                            "Resource": CfnFunction {
                              "_cfnProperties": {
                                "architectures": undefined,
                                "code": {
                                  "imageUri": undefined,
                                  "s3Bucket": "\${Token[TOKEN.676]}",
                                  "s3Key": "REPLACED-GENERATED-NAME.zip",
                                  "s3ObjectVersion": undefined,
                                  "zipFile": undefined,
                                },
                                "codeSigningConfigArn": undefined,
                                "deadLetterConfig": undefined,
                                "description": "AWS CDK resource provider framework - onEvent (Default/codeCommitSecret/Custom::GitopsSecrets)",
                                "environment": "<unresolved-lazy>",
                                "ephemeralStorage": undefined,
                                "fileSystemConfigs": undefined,
                                "functionName": "\${Token[TOKEN.664]}",
                                "handler": "framework.onEvent",
                                "imageConfig": undefined,
                                "kmsKeyArn": undefined,
                                "layers": [
                                  "#{Token[TOKEN.680]}",
                                ],
                                "memorySize": undefined,
                                "packageType": undefined,
                                "reservedConcurrentExecutions": undefined,
                                "role": "\${Token[TOKEN.672]}",
                                "runtime": "nodejs14.x",
                                "runtimeManagementConfig": undefined,
                                "timeout": 900,
                                "vpcConfig": undefined,
                              },
                              "architectures": undefined,
                              "attrArn": "\${Token[TOKEN.682]}",
                              "attrSnapStartResponseApplyOn": "\${Token[TOKEN.683]}",
                              "attrSnapStartResponseOptimizationStatus": "\${Token[TOKEN.684]}",
                              "cfnOptions": {},
                              "cfnResourceType": "AWS::Lambda::Function",
                              "code": {
                                "imageUri": undefined,
                                "s3Bucket": "\${Token[TOKEN.676]}",
                                "s3Key": "REPLACED-GENERATED-NAME.zip",
                                "s3ObjectVersion": undefined,
                                "zipFile": undefined,
                              },
                              "codeSigningConfigArn": undefined,
                              "deadLetterConfig": undefined,
                              "dependsOn": Set {},
                              "description": "AWS CDK resource provider framework - onEvent (Default/codeCommitSecret/Custom::GitopsSecrets)",
                              "environment": "<unresolved-lazy>",
                              "ephemeralStorage": undefined,
                              "fileSystemConfigs": undefined,
                              "functionName": "\${Token[TOKEN.664]}",
                              "handler": "framework.onEvent",
                              "imageConfig": undefined,
                              "kmsKeyArn": undefined,
                              "layers": [
                                "#{Token[TOKEN.680]}",
                              ],
                              "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.Resource.LogicalID.681]}",
                              "memorySize": undefined,
                              "node": Node {
                                "_children": {},
                                "_context": {},
                                "_dependencies": Set {
                                  Role {
                                    "_allowCrossEnvironment": false,
                                    "_didSplit": false,
                                    "_physicalName": undefined,
                                    "_roleId": "\${Token[TOKEN.671]}",
                                    "assumeRoleAction": "sts:AssumeRole",
                                    "assumeRolePolicy": {
                                      "Statement": [
                                        {
                                          "Action": "sts:AssumeRole",
                                          "Effect": "Allow",
                                          "Principal": {
                                            "Service": "\${Token[lambda.amazonaws.com.666]}",
                                          },
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "attachedPolicies": AttachedPolicies {
                                      "policies": [
                                        Policy {
                                          "_allowCrossEnvironment": false,
                                          "_physicalName": "\${Token[TOKEN.688]}",
                                          "_policyName": "\${Token[TOKEN.688]}",
                                          "document": {
                                            "Statement": [
                                              {
                                                "Action": "lambda:InvokeFunction",
                                                "Effect": "Allow",
                                                "Resource": [
                                                  "\${Token[TOKEN.658]}",
                                                  "\${Token[TOKEN.658]}:*",
                                                ],
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "env": {
                                            "account": "\${Token[AWS.AccountId.2]}",
                                            "region": "\${Token[AWS.Region.6]}",
                                          },
                                          "force": false,
                                          "grantPrincipal": PolicyGrantPrincipal {
                                            "_policy": [Circular],
                                            "assumeRoleAction": "sts:AssumeRole",
                                            "grantPrincipal": [Circular],
                                            "principalAccount": "\${Token[AWS.AccountId.2]}",
                                          },
                                          "groups": [],
                                          "node": Node {
                                            "_children": {
                                              "Resource": CfnPolicyConditional {
                                                "_cfnProperties": {
                                                  "groups": [
                                                    "#{Token[TOKEN.691]}",
                                                  ],
                                                  "policyDocument": {
                                                    "Statement": [
                                                      {
                                                        "Action": "lambda:InvokeFunction",
                                                        "Effect": "Allow",
                                                        "Resource": [
                                                          "\${Token[TOKEN.658]}",
                                                          "\${Token[TOKEN.658]}:*",
                                                        ],
                                                      },
                                                    ],
                                                    "Version": "2012-10-17",
                                                  },
                                                  "policyName": "\${Token[TOKEN.688]}",
                                                  "roles": [
                                                    "#{Token[TOKEN.689]}",
                                                  ],
                                                  "users": [
                                                    "#{Token[TOKEN.690]}",
                                                  ],
                                                },
                                                "cfnOptions": {},
                                                "cfnResourceType": "AWS::IAM::Policy",
                                                "dependsOn": Set {},
                                                "groups": [
                                                  "#{Token[TOKEN.691]}",
                                                ],
                                                "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                                "node": Node {
                                                  "_children": {},
                                                  "_context": {},
                                                  "_dependencies": Set {},
                                                  "_locked": false,
                                                  "_metadata": [
                                                    {
                                                      "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                                      "trace": undefined,
                                                      "type": "aws:cdk:logicalId",
                                                    },
                                                  ],
                                                  "_validations": [],
                                                  "host": [Circular],
                                                  "id": "Resource",
                                                  "scope": [Circular],
                                                },
                                                "policyDocument": {
                                                  "Statement": [
                                                    {
                                                      "Action": "lambda:InvokeFunction",
                                                      "Effect": "Allow",
                                                      "Resource": [
                                                        "\${Token[TOKEN.658]}",
                                                        "\${Token[TOKEN.658]}:*",
                                                      ],
                                                    },
                                                  ],
                                                  "Version": "2012-10-17",
                                                },
                                                "policyName": "\${Token[TOKEN.688]}",
                                                "rawOverrides": {},
                                                "roles": [
                                                  "#{Token[TOKEN.689]}",
                                                ],
                                                "stack": [Circular],
                                                "users": [
                                                  "#{Token[TOKEN.690]}",
                                                ],
                                                Symbol(@aws-cdk/core.DependableTrait): {
                                                  "dependencyRoots": [
                                                    [Circular],
                                                  ],
                                                },
                                              },
                                            },
                                            "_context": {},
                                            "_dependencies": Set {},
                                            "_locked": false,
                                            "_metadata": [],
                                            "_validations": [
                                              {
                                                "validate": [Function],
                                              },
                                            ],
                                            "host": [Circular],
                                            "id": "DefaultPolicy",
                                            "scope": [Circular],
                                          },
                                          "physicalName": "\${Token[TOKEN.688]}",
                                          "referenceTaken": false,
                                          "roles": [
                                            [Circular],
                                          ],
                                          "stack": [Circular],
                                          "users": [],
                                          Symbol(@aws-cdk/core.DependableTrait): {
                                            "dependencyRoots": [
                                              [Circular],
                                            ],
                                          },
                                        },
                                      ],
                                    },
                                    "defaultPolicy": Policy {
                                      "_allowCrossEnvironment": false,
                                      "_physicalName": "\${Token[TOKEN.688]}",
                                      "_policyName": "\${Token[TOKEN.688]}",
                                      "document": {
                                        "Statement": [
                                          {
                                            "Action": "lambda:InvokeFunction",
                                            "Effect": "Allow",
                                            "Resource": [
                                              "\${Token[TOKEN.658]}",
                                              "\${Token[TOKEN.658]}:*",
                                            ],
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "env": {
                                        "account": "\${Token[AWS.AccountId.2]}",
                                        "region": "\${Token[AWS.Region.6]}",
                                      },
                                      "force": false,
                                      "grantPrincipal": PolicyGrantPrincipal {
                                        "_policy": [Circular],
                                        "assumeRoleAction": "sts:AssumeRole",
                                        "grantPrincipal": [Circular],
                                        "principalAccount": "\${Token[AWS.AccountId.2]}",
                                      },
                                      "groups": [],
                                      "node": Node {
                                        "_children": {
                                          "Resource": CfnPolicyConditional {
                                            "_cfnProperties": {
                                              "groups": [
                                                "#{Token[TOKEN.691]}",
                                              ],
                                              "policyDocument": {
                                                "Statement": [
                                                  {
                                                    "Action": "lambda:InvokeFunction",
                                                    "Effect": "Allow",
                                                    "Resource": [
                                                      "\${Token[TOKEN.658]}",
                                                      "\${Token[TOKEN.658]}:*",
                                                    ],
                                                  },
                                                ],
                                                "Version": "2012-10-17",
                                              },
                                              "policyName": "\${Token[TOKEN.688]}",
                                              "roles": [
                                                "#{Token[TOKEN.689]}",
                                              ],
                                              "users": [
                                                "#{Token[TOKEN.690]}",
                                              ],
                                            },
                                            "cfnOptions": {},
                                            "cfnResourceType": "AWS::IAM::Policy",
                                            "dependsOn": Set {},
                                            "groups": [
                                              "#{Token[TOKEN.691]}",
                                            ],
                                            "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                            "node": Node {
                                              "_children": {},
                                              "_context": {},
                                              "_dependencies": Set {},
                                              "_locked": false,
                                              "_metadata": [
                                                {
                                                  "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                                  "trace": undefined,
                                                  "type": "aws:cdk:logicalId",
                                                },
                                              ],
                                              "_validations": [],
                                              "host": [Circular],
                                              "id": "Resource",
                                              "scope": [Circular],
                                            },
                                            "policyDocument": {
                                              "Statement": [
                                                {
                                                  "Action": "lambda:InvokeFunction",
                                                  "Effect": "Allow",
                                                  "Resource": [
                                                    "\${Token[TOKEN.658]}",
                                                    "\${Token[TOKEN.658]}:*",
                                                  ],
                                                },
                                              ],
                                              "Version": "2012-10-17",
                                            },
                                            "policyName": "\${Token[TOKEN.688]}",
                                            "rawOverrides": {},
                                            "roles": [
                                              "#{Token[TOKEN.689]}",
                                            ],
                                            "stack": [Circular],
                                            "users": [
                                              "#{Token[TOKEN.690]}",
                                            ],
                                            Symbol(@aws-cdk/core.DependableTrait): {
                                              "dependencyRoots": [
                                                [Circular],
                                              ],
                                            },
                                          },
                                        },
                                        "_context": {},
                                        "_dependencies": Set {},
                                        "_locked": false,
                                        "_metadata": [],
                                        "_validations": [
                                          {
                                            "validate": [Function],
                                          },
                                        ],
                                        "host": [Circular],
                                        "id": "DefaultPolicy",
                                        "scope": [Circular],
                                      },
                                      "physicalName": "\${Token[TOKEN.688]}",
                                      "referenceTaken": false,
                                      "roles": [
                                        [Circular],
                                      ],
                                      "stack": [Circular],
                                      "users": [],
                                      Symbol(@aws-cdk/core.DependableTrait): {
                                        "dependencyRoots": [
                                          [Circular],
                                        ],
                                      },
                                    },
                                    "dependables": Map {
                                      {
                                        "Action": "lambda:InvokeFunction",
                                        "Effect": "Allow",
                                        "Resource": [
                                          "\${Token[TOKEN.658]}",
                                          "\${Token[TOKEN.658]}:*",
                                        ],
                                      } => DependencyGroup {
                                        "_deps": [],
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [],
                                        },
                                      },
                                    },
                                    "env": {
                                      "account": "\${Token[AWS.AccountId.2]}",
                                      "region": "\${Token[AWS.Region.6]}",
                                    },
                                    "grantPrincipal": [Circular],
                                    "inlinePolicies": {},
                                    "managedPolicies": [
                                      AwsManagedPolicy {
                                        "managedPolicyArn": "arn:\${Token[AWS.Partition.5]}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                                      },
                                    ],
                                    "node": Node {
                                      "_children": {
                                        "DefaultPolicy": Policy {
                                          "_allowCrossEnvironment": false,
                                          "_physicalName": "\${Token[TOKEN.688]}",
                                          "_policyName": "\${Token[TOKEN.688]}",
                                          "document": {
                                            "Statement": [
                                              {
                                                "Action": "lambda:InvokeFunction",
                                                "Effect": "Allow",
                                                "Resource": [
                                                  "\${Token[TOKEN.658]}",
                                                  "\${Token[TOKEN.658]}:*",
                                                ],
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "env": {
                                            "account": "\${Token[AWS.AccountId.2]}",
                                            "region": "\${Token[AWS.Region.6]}",
                                          },
                                          "force": false,
                                          "grantPrincipal": PolicyGrantPrincipal {
                                            "_policy": [Circular],
                                            "assumeRoleAction": "sts:AssumeRole",
                                            "grantPrincipal": [Circular],
                                            "principalAccount": "\${Token[AWS.AccountId.2]}",
                                          },
                                          "groups": [],
                                          "node": Node {
                                            "_children": {
                                              "Resource": CfnPolicyConditional {
                                                "_cfnProperties": {
                                                  "groups": [
                                                    "#{Token[TOKEN.691]}",
                                                  ],
                                                  "policyDocument": {
                                                    "Statement": [
                                                      {
                                                        "Action": "lambda:InvokeFunction",
                                                        "Effect": "Allow",
                                                        "Resource": [
                                                          "\${Token[TOKEN.658]}",
                                                          "\${Token[TOKEN.658]}:*",
                                                        ],
                                                      },
                                                    ],
                                                    "Version": "2012-10-17",
                                                  },
                                                  "policyName": "\${Token[TOKEN.688]}",
                                                  "roles": [
                                                    "#{Token[TOKEN.689]}",
                                                  ],
                                                  "users": [
                                                    "#{Token[TOKEN.690]}",
                                                  ],
                                                },
                                                "cfnOptions": {},
                                                "cfnResourceType": "AWS::IAM::Policy",
                                                "dependsOn": Set {},
                                                "groups": [
                                                  "#{Token[TOKEN.691]}",
                                                ],
                                                "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                                "node": Node {
                                                  "_children": {},
                                                  "_context": {},
                                                  "_dependencies": Set {},
                                                  "_locked": false,
                                                  "_metadata": [
                                                    {
                                                      "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                                      "trace": undefined,
                                                      "type": "aws:cdk:logicalId",
                                                    },
                                                  ],
                                                  "_validations": [],
                                                  "host": [Circular],
                                                  "id": "Resource",
                                                  "scope": [Circular],
                                                },
                                                "policyDocument": {
                                                  "Statement": [
                                                    {
                                                      "Action": "lambda:InvokeFunction",
                                                      "Effect": "Allow",
                                                      "Resource": [
                                                        "\${Token[TOKEN.658]}",
                                                        "\${Token[TOKEN.658]}:*",
                                                      ],
                                                    },
                                                  ],
                                                  "Version": "2012-10-17",
                                                },
                                                "policyName": "\${Token[TOKEN.688]}",
                                                "rawOverrides": {},
                                                "roles": [
                                                  "#{Token[TOKEN.689]}",
                                                ],
                                                "stack": [Circular],
                                                "users": [
                                                  "#{Token[TOKEN.690]}",
                                                ],
                                                Symbol(@aws-cdk/core.DependableTrait): {
                                                  "dependencyRoots": [
                                                    [Circular],
                                                  ],
                                                },
                                              },
                                            },
                                            "_context": {},
                                            "_dependencies": Set {},
                                            "_locked": false,
                                            "_metadata": [],
                                            "_validations": [
                                              {
                                                "validate": [Function],
                                              },
                                            ],
                                            "host": [Circular],
                                            "id": "DefaultPolicy",
                                            "scope": [Circular],
                                          },
                                          "physicalName": "\${Token[TOKEN.688]}",
                                          "referenceTaken": false,
                                          "roles": [
                                            [Circular],
                                          ],
                                          "stack": [Circular],
                                          "users": [],
                                          Symbol(@aws-cdk/core.DependableTrait): {
                                            "dependencyRoots": [
                                              [Circular],
                                            ],
                                          },
                                        },
                                        "ImportServiceRole": ImportedRole {
                                          "_allowCrossEnvironment": false,
                                          "_physicalName": undefined,
                                          "assumeRoleAction": "sts:AssumeRole",
                                          "attachedPolicies": AttachedPolicies {
                                            "policies": [],
                                          },
                                          "defaultPolicyName": undefined,
                                          "env": {
                                            "account": "\${Token[AWS.AccountId.2]}",
                                            "region": "\${Token[AWS.Region.6]}",
                                          },
                                          "grantPrincipal": [Circular],
                                          "node": Node {
                                            "_children": {},
                                            "_context": {},
                                            "_dependencies": Set {},
                                            "_locked": false,
                                            "_metadata": [],
                                            "_validations": [],
                                            "host": [Circular],
                                            "id": "ImportServiceRole",
                                            "scope": [Circular],
                                          },
                                          "physicalName": "\${Token[TOKEN.667]}",
                                          "policyFragment": PrincipalPolicyFragment {
                                            "conditions": {},
                                            "principalJson": {
                                              "AWS": [
                                                "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                                              ],
                                            },
                                          },
                                          "principalAccount": "\${Token[AWS.AccountId.2]}",
                                          "roleArn": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                                          "roleName": "ServiceRole",
                                          "stack": [Circular],
                                          Symbol(@aws-cdk/core.DependableTrait): {
                                            "dependencyRoots": [
                                              [Circular],
                                            ],
                                          },
                                        },
                                        "Resource": CfnRole {
                                          "_cfnProperties": {
                                            "assumeRolePolicyDocument": {
                                              "Statement": [
                                                {
                                                  "Action": "sts:AssumeRole",
                                                  "Effect": "Allow",
                                                  "Principal": {
                                                    "Service": "\${Token[lambda.amazonaws.com.666]}",
                                                  },
                                                },
                                              ],
                                              "Version": "2012-10-17",
                                            },
                                            "description": undefined,
                                            "managedPolicyArns": [
                                              "#{Token[TOKEN.668]}",
                                            ],
                                            "maxSessionDuration": undefined,
                                            "path": undefined,
                                            "permissionsBoundary": undefined,
                                            "policies": undefined,
                                            "roleName": "\${Token[TOKEN.665]}",
                                          },
                                          "assumeRolePolicyDocument": {
                                            "Statement": [
                                              {
                                                "Action": "sts:AssumeRole",
                                                "Effect": "Allow",
                                                "Principal": {
                                                  "Service": "\${Token[lambda.amazonaws.com.666]}",
                                                },
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "attrArn": "\${Token[TOKEN.670]}",
                                          "attrRoleId": "\${Token[TOKEN.671]}",
                                          "cfnOptions": {},
                                          "cfnResourceType": "AWS::IAM::Role",
                                          "dependsOn": Set {},
                                          "description": undefined,
                                          "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.Resource.LogicalID.669]}",
                                          "managedPolicyArns": [
                                            "#{Token[TOKEN.668]}",
                                          ],
                                          "maxSessionDuration": undefined,
                                          "node": Node {
                                            "_children": {},
                                            "_context": {},
                                            "_dependencies": Set {},
                                            "_locked": false,
                                            "_metadata": [
                                              {
                                                "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.Resource.LogicalID.669]}",
                                                "trace": undefined,
                                                "type": "aws:cdk:logicalId",
                                              },
                                            ],
                                            "_validations": [],
                                            "host": [Circular],
                                            "id": "Resource",
                                            "scope": [Circular],
                                          },
                                          "path": undefined,
                                          "permissionsBoundary": undefined,
                                          "policies": undefined,
                                          "rawOverrides": {},
                                          "roleName": "\${Token[TOKEN.665]}",
                                          "stack": [Circular],
                                          "tags": TagManager {
                                            "initialTagPriority": 50,
                                            "priorities": Map {},
                                            "renderedTags": "<unresolved-lazy>",
                                            "resourceTypeName": "AWS::IAM::Role",
                                            "tagFormatter": StandardFormatter {},
                                            "tagPropertyName": "tags",
                                            "tags": Map {},
                                          },
                                          Symbol(@aws-cdk/core.DependableTrait): {
                                            "dependencyRoots": [
                                              [Circular],
                                            ],
                                          },
                                        },
                                      },
                                      "_context": {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": [],
                                      "_validations": [
                                        {
                                          "validate": [Function],
                                        },
                                      ],
                                      "host": [Circular],
                                      "id": "ServiceRole",
                                      "scope": [Circular],
                                    },
                                    "permissionsBoundary": undefined,
                                    "physicalName": "\${Token[TOKEN.665]}",
                                    "policyFragment": PrincipalPolicyFragment {
                                      "conditions": {},
                                      "principalJson": {
                                        "AWS": [
                                          "\${Token[TOKEN.672]}",
                                        ],
                                      },
                                    },
                                    "principalAccount": "\${Token[AWS.AccountId.2]}",
                                    "roleArn": "\${Token[TOKEN.672]}",
                                    "roleName": "\${Token[TOKEN.674]}",
                                    "stack": [Circular],
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [
                                        [Circular],
                                      ],
                                    },
                                  },
                                },
                                "_locked": false,
                                "_metadata": [
                                  {
                                    "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.Resource.LogicalID.681]}",
                                    "trace": undefined,
                                    "type": "aws:cdk:logicalId",
                                  },
                                ],
                                "_validations": [],
                                "host": [Circular],
                                "id": "Resource",
                                "scope": [Circular],
                              },
                              "packageType": undefined,
                              "rawOverrides": {},
                              "reservedConcurrentExecutions": undefined,
                              "role": "\${Token[TOKEN.672]}",
                              "runtime": "nodejs14.x",
                              "runtimeManagementConfig": undefined,
                              "snapStart": undefined,
                              "stack": [Circular],
                              "tags": TagManager {
                                "initialTagPriority": 50,
                                "priorities": Map {},
                                "renderedTags": "<unresolved-lazy>",
                                "resourceTypeName": "AWS::Lambda::Function",
                                "tagFormatter": StandardFormatter {},
                                "tagPropertyName": "tags",
                                "tags": Map {},
                              },
                              "timeout": 900,
                              "tracingConfig": undefined,
                              "vpcConfig": undefined,
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [
                                  [Circular],
                                ],
                              },
                            },
                            "ServiceRole": Role {
                              "_allowCrossEnvironment": false,
                              "_didSplit": false,
                              "_physicalName": undefined,
                              "_roleId": "\${Token[TOKEN.671]}",
                              "assumeRoleAction": "sts:AssumeRole",
                              "assumeRolePolicy": {
                                "Statement": [
                                  {
                                    "Action": "sts:AssumeRole",
                                    "Effect": "Allow",
                                    "Principal": {
                                      "Service": "\${Token[lambda.amazonaws.com.666]}",
                                    },
                                  },
                                ],
                                "Version": "2012-10-17",
                              },
                              "attachedPolicies": AttachedPolicies {
                                "policies": [
                                  Policy {
                                    "_allowCrossEnvironment": false,
                                    "_physicalName": "\${Token[TOKEN.688]}",
                                    "_policyName": "\${Token[TOKEN.688]}",
                                    "document": {
                                      "Statement": [
                                        {
                                          "Action": "lambda:InvokeFunction",
                                          "Effect": "Allow",
                                          "Resource": [
                                            "\${Token[TOKEN.658]}",
                                            "\${Token[TOKEN.658]}:*",
                                          ],
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "env": {
                                      "account": "\${Token[AWS.AccountId.2]}",
                                      "region": "\${Token[AWS.Region.6]}",
                                    },
                                    "force": false,
                                    "grantPrincipal": PolicyGrantPrincipal {
                                      "_policy": [Circular],
                                      "assumeRoleAction": "sts:AssumeRole",
                                      "grantPrincipal": [Circular],
                                      "principalAccount": "\${Token[AWS.AccountId.2]}",
                                    },
                                    "groups": [],
                                    "node": Node {
                                      "_children": {
                                        "Resource": CfnPolicyConditional {
                                          "_cfnProperties": {
                                            "groups": [
                                              "#{Token[TOKEN.691]}",
                                            ],
                                            "policyDocument": {
                                              "Statement": [
                                                {
                                                  "Action": "lambda:InvokeFunction",
                                                  "Effect": "Allow",
                                                  "Resource": [
                                                    "\${Token[TOKEN.658]}",
                                                    "\${Token[TOKEN.658]}:*",
                                                  ],
                                                },
                                              ],
                                              "Version": "2012-10-17",
                                            },
                                            "policyName": "\${Token[TOKEN.688]}",
                                            "roles": [
                                              "#{Token[TOKEN.689]}",
                                            ],
                                            "users": [
                                              "#{Token[TOKEN.690]}",
                                            ],
                                          },
                                          "cfnOptions": {},
                                          "cfnResourceType": "AWS::IAM::Policy",
                                          "dependsOn": Set {},
                                          "groups": [
                                            "#{Token[TOKEN.691]}",
                                          ],
                                          "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                          "node": Node {
                                            "_children": {},
                                            "_context": {},
                                            "_dependencies": Set {},
                                            "_locked": false,
                                            "_metadata": [
                                              {
                                                "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                                "trace": undefined,
                                                "type": "aws:cdk:logicalId",
                                              },
                                            ],
                                            "_validations": [],
                                            "host": [Circular],
                                            "id": "Resource",
                                            "scope": [Circular],
                                          },
                                          "policyDocument": {
                                            "Statement": [
                                              {
                                                "Action": "lambda:InvokeFunction",
                                                "Effect": "Allow",
                                                "Resource": [
                                                  "\${Token[TOKEN.658]}",
                                                  "\${Token[TOKEN.658]}:*",
                                                ],
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "policyName": "\${Token[TOKEN.688]}",
                                          "rawOverrides": {},
                                          "roles": [
                                            "#{Token[TOKEN.689]}",
                                          ],
                                          "stack": [Circular],
                                          "users": [
                                            "#{Token[TOKEN.690]}",
                                          ],
                                          Symbol(@aws-cdk/core.DependableTrait): {
                                            "dependencyRoots": [
                                              [Circular],
                                            ],
                                          },
                                        },
                                      },
                                      "_context": {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": [],
                                      "_validations": [
                                        {
                                          "validate": [Function],
                                        },
                                      ],
                                      "host": [Circular],
                                      "id": "DefaultPolicy",
                                      "scope": [Circular],
                                    },
                                    "physicalName": "\${Token[TOKEN.688]}",
                                    "referenceTaken": false,
                                    "roles": [
                                      [Circular],
                                    ],
                                    "stack": [Circular],
                                    "users": [],
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [
                                        [Circular],
                                      ],
                                    },
                                  },
                                ],
                              },
                              "defaultPolicy": Policy {
                                "_allowCrossEnvironment": false,
                                "_physicalName": "\${Token[TOKEN.688]}",
                                "_policyName": "\${Token[TOKEN.688]}",
                                "document": {
                                  "Statement": [
                                    {
                                      "Action": "lambda:InvokeFunction",
                                      "Effect": "Allow",
                                      "Resource": [
                                        "\${Token[TOKEN.658]}",
                                        "\${Token[TOKEN.658]}:*",
                                      ],
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "env": {
                                  "account": "\${Token[AWS.AccountId.2]}",
                                  "region": "\${Token[AWS.Region.6]}",
                                },
                                "force": false,
                                "grantPrincipal": PolicyGrantPrincipal {
                                  "_policy": [Circular],
                                  "assumeRoleAction": "sts:AssumeRole",
                                  "grantPrincipal": [Circular],
                                  "principalAccount": "\${Token[AWS.AccountId.2]}",
                                },
                                "groups": [],
                                "node": Node {
                                  "_children": {
                                    "Resource": CfnPolicyConditional {
                                      "_cfnProperties": {
                                        "groups": [
                                          "#{Token[TOKEN.691]}",
                                        ],
                                        "policyDocument": {
                                          "Statement": [
                                            {
                                              "Action": "lambda:InvokeFunction",
                                              "Effect": "Allow",
                                              "Resource": [
                                                "\${Token[TOKEN.658]}",
                                                "\${Token[TOKEN.658]}:*",
                                              ],
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "policyName": "\${Token[TOKEN.688]}",
                                        "roles": [
                                          "#{Token[TOKEN.689]}",
                                        ],
                                        "users": [
                                          "#{Token[TOKEN.690]}",
                                        ],
                                      },
                                      "cfnOptions": {},
                                      "cfnResourceType": "AWS::IAM::Policy",
                                      "dependsOn": Set {},
                                      "groups": [
                                        "#{Token[TOKEN.691]}",
                                      ],
                                      "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                      "node": Node {
                                        "_children": {},
                                        "_context": {},
                                        "_dependencies": Set {},
                                        "_locked": false,
                                        "_metadata": [
                                          {
                                            "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                            "trace": undefined,
                                            "type": "aws:cdk:logicalId",
                                          },
                                        ],
                                        "_validations": [],
                                        "host": [Circular],
                                        "id": "Resource",
                                        "scope": [Circular],
                                      },
                                      "policyDocument": {
                                        "Statement": [
                                          {
                                            "Action": "lambda:InvokeFunction",
                                            "Effect": "Allow",
                                            "Resource": [
                                              "\${Token[TOKEN.658]}",
                                              "\${Token[TOKEN.658]}:*",
                                            ],
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "policyName": "\${Token[TOKEN.688]}",
                                      "rawOverrides": {},
                                      "roles": [
                                        "#{Token[TOKEN.689]}",
                                      ],
                                      "stack": [Circular],
                                      "users": [
                                        "#{Token[TOKEN.690]}",
                                      ],
                                      Symbol(@aws-cdk/core.DependableTrait): {
                                        "dependencyRoots": [
                                          [Circular],
                                        ],
                                      },
                                    },
                                  },
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [],
                                  "_validations": [
                                    {
                                      "validate": [Function],
                                    },
                                  ],
                                  "host": [Circular],
                                  "id": "DefaultPolicy",
                                  "scope": [Circular],
                                },
                                "physicalName": "\${Token[TOKEN.688]}",
                                "referenceTaken": false,
                                "roles": [
                                  [Circular],
                                ],
                                "stack": [Circular],
                                "users": [],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                              "dependables": Map {
                                {
                                  "Action": "lambda:InvokeFunction",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "\${Token[TOKEN.658]}",
                                    "\${Token[TOKEN.658]}:*",
                                  ],
                                } => DependencyGroup {
                                  "_deps": [],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [],
                                  },
                                },
                              },
                              "env": {
                                "account": "\${Token[AWS.AccountId.2]}",
                                "region": "\${Token[AWS.Region.6]}",
                              },
                              "grantPrincipal": [Circular],
                              "inlinePolicies": {},
                              "managedPolicies": [
                                AwsManagedPolicy {
                                  "managedPolicyArn": "arn:\${Token[AWS.Partition.5]}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                                },
                              ],
                              "node": Node {
                                "_children": {
                                  "DefaultPolicy": Policy {
                                    "_allowCrossEnvironment": false,
                                    "_physicalName": "\${Token[TOKEN.688]}",
                                    "_policyName": "\${Token[TOKEN.688]}",
                                    "document": {
                                      "Statement": [
                                        {
                                          "Action": "lambda:InvokeFunction",
                                          "Effect": "Allow",
                                          "Resource": [
                                            "\${Token[TOKEN.658]}",
                                            "\${Token[TOKEN.658]}:*",
                                          ],
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "env": {
                                      "account": "\${Token[AWS.AccountId.2]}",
                                      "region": "\${Token[AWS.Region.6]}",
                                    },
                                    "force": false,
                                    "grantPrincipal": PolicyGrantPrincipal {
                                      "_policy": [Circular],
                                      "assumeRoleAction": "sts:AssumeRole",
                                      "grantPrincipal": [Circular],
                                      "principalAccount": "\${Token[AWS.AccountId.2]}",
                                    },
                                    "groups": [],
                                    "node": Node {
                                      "_children": {
                                        "Resource": CfnPolicyConditional {
                                          "_cfnProperties": {
                                            "groups": [
                                              "#{Token[TOKEN.691]}",
                                            ],
                                            "policyDocument": {
                                              "Statement": [
                                                {
                                                  "Action": "lambda:InvokeFunction",
                                                  "Effect": "Allow",
                                                  "Resource": [
                                                    "\${Token[TOKEN.658]}",
                                                    "\${Token[TOKEN.658]}:*",
                                                  ],
                                                },
                                              ],
                                              "Version": "2012-10-17",
                                            },
                                            "policyName": "\${Token[TOKEN.688]}",
                                            "roles": [
                                              "#{Token[TOKEN.689]}",
                                            ],
                                            "users": [
                                              "#{Token[TOKEN.690]}",
                                            ],
                                          },
                                          "cfnOptions": {},
                                          "cfnResourceType": "AWS::IAM::Policy",
                                          "dependsOn": Set {},
                                          "groups": [
                                            "#{Token[TOKEN.691]}",
                                          ],
                                          "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                          "node": Node {
                                            "_children": {},
                                            "_context": {},
                                            "_dependencies": Set {},
                                            "_locked": false,
                                            "_metadata": [
                                              {
                                                "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                                "trace": undefined,
                                                "type": "aws:cdk:logicalId",
                                              },
                                            ],
                                            "_validations": [],
                                            "host": [Circular],
                                            "id": "Resource",
                                            "scope": [Circular],
                                          },
                                          "policyDocument": {
                                            "Statement": [
                                              {
                                                "Action": "lambda:InvokeFunction",
                                                "Effect": "Allow",
                                                "Resource": [
                                                  "\${Token[TOKEN.658]}",
                                                  "\${Token[TOKEN.658]}:*",
                                                ],
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "policyName": "\${Token[TOKEN.688]}",
                                          "rawOverrides": {},
                                          "roles": [
                                            "#{Token[TOKEN.689]}",
                                          ],
                                          "stack": [Circular],
                                          "users": [
                                            "#{Token[TOKEN.690]}",
                                          ],
                                          Symbol(@aws-cdk/core.DependableTrait): {
                                            "dependencyRoots": [
                                              [Circular],
                                            ],
                                          },
                                        },
                                      },
                                      "_context": {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": [],
                                      "_validations": [
                                        {
                                          "validate": [Function],
                                        },
                                      ],
                                      "host": [Circular],
                                      "id": "DefaultPolicy",
                                      "scope": [Circular],
                                    },
                                    "physicalName": "\${Token[TOKEN.688]}",
                                    "referenceTaken": false,
                                    "roles": [
                                      [Circular],
                                    ],
                                    "stack": [Circular],
                                    "users": [],
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [
                                        [Circular],
                                      ],
                                    },
                                  },
                                  "ImportServiceRole": ImportedRole {
                                    "_allowCrossEnvironment": false,
                                    "_physicalName": undefined,
                                    "assumeRoleAction": "sts:AssumeRole",
                                    "attachedPolicies": AttachedPolicies {
                                      "policies": [],
                                    },
                                    "defaultPolicyName": undefined,
                                    "env": {
                                      "account": "\${Token[AWS.AccountId.2]}",
                                      "region": "\${Token[AWS.Region.6]}",
                                    },
                                    "grantPrincipal": [Circular],
                                    "node": Node {
                                      "_children": {},
                                      "_context": {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": [],
                                      "_validations": [],
                                      "host": [Circular],
                                      "id": "ImportServiceRole",
                                      "scope": [Circular],
                                    },
                                    "physicalName": "\${Token[TOKEN.667]}",
                                    "policyFragment": PrincipalPolicyFragment {
                                      "conditions": {},
                                      "principalJson": {
                                        "AWS": [
                                          "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                                        ],
                                      },
                                    },
                                    "principalAccount": "\${Token[AWS.AccountId.2]}",
                                    "roleArn": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                                    "roleName": "ServiceRole",
                                    "stack": [Circular],
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [
                                        [Circular],
                                      ],
                                    },
                                  },
                                  "Resource": CfnRole {
                                    "_cfnProperties": {
                                      "assumeRolePolicyDocument": {
                                        "Statement": [
                                          {
                                            "Action": "sts:AssumeRole",
                                            "Effect": "Allow",
                                            "Principal": {
                                              "Service": "\${Token[lambda.amazonaws.com.666]}",
                                            },
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "description": undefined,
                                      "managedPolicyArns": [
                                        "#{Token[TOKEN.668]}",
                                      ],
                                      "maxSessionDuration": undefined,
                                      "path": undefined,
                                      "permissionsBoundary": undefined,
                                      "policies": undefined,
                                      "roleName": "\${Token[TOKEN.665]}",
                                    },
                                    "assumeRolePolicyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "sts:AssumeRole",
                                          "Effect": "Allow",
                                          "Principal": {
                                            "Service": "\${Token[lambda.amazonaws.com.666]}",
                                          },
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "attrArn": "\${Token[TOKEN.670]}",
                                    "attrRoleId": "\${Token[TOKEN.671]}",
                                    "cfnOptions": {},
                                    "cfnResourceType": "AWS::IAM::Role",
                                    "dependsOn": Set {},
                                    "description": undefined,
                                    "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.Resource.LogicalID.669]}",
                                    "managedPolicyArns": [
                                      "#{Token[TOKEN.668]}",
                                    ],
                                    "maxSessionDuration": undefined,
                                    "node": Node {
                                      "_children": {},
                                      "_context": {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": [
                                        {
                                          "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.Resource.LogicalID.669]}",
                                          "trace": undefined,
                                          "type": "aws:cdk:logicalId",
                                        },
                                      ],
                                      "_validations": [],
                                      "host": [Circular],
                                      "id": "Resource",
                                      "scope": [Circular],
                                    },
                                    "path": undefined,
                                    "permissionsBoundary": undefined,
                                    "policies": undefined,
                                    "rawOverrides": {},
                                    "roleName": "\${Token[TOKEN.665]}",
                                    "stack": [Circular],
                                    "tags": TagManager {
                                      "initialTagPriority": 50,
                                      "priorities": Map {},
                                      "renderedTags": "<unresolved-lazy>",
                                      "resourceTypeName": "AWS::IAM::Role",
                                      "tagFormatter": StandardFormatter {},
                                      "tagPropertyName": "tags",
                                      "tags": Map {},
                                    },
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [
                                        [Circular],
                                      ],
                                    },
                                  },
                                },
                                "_context": {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": [],
                                "_validations": [
                                  {
                                    "validate": [Function],
                                  },
                                ],
                                "host": [Circular],
                                "id": "ServiceRole",
                                "scope": [Circular],
                              },
                              "permissionsBoundary": undefined,
                              "physicalName": "\${Token[TOKEN.665]}",
                              "policyFragment": PrincipalPolicyFragment {
                                "conditions": {},
                                "principalJson": {
                                  "AWS": [
                                    "\${Token[TOKEN.672]}",
                                  ],
                                },
                              },
                              "principalAccount": "\${Token[AWS.AccountId.2]}",
                              "roleArn": "\${Token[TOKEN.672]}",
                              "roleName": "\${Token[TOKEN.674]}",
                              "stack": [Circular],
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [
                                  [Circular],
                                ],
                              },
                            },
                          },
                          "_context": {},
                          "_dependencies": Set {},
                          "_locked": false,
                          "_metadata": [],
                          "_validations": [],
                          "host": [Circular],
                          "id": "framework-onEvent",
                          "scope": [Circular],
                        },
                        "physicalName": "\${Token[TOKEN.664]}",
                        "role": Role {
                          "_allowCrossEnvironment": false,
                          "_didSplit": false,
                          "_physicalName": undefined,
                          "_roleId": "\${Token[TOKEN.671]}",
                          "assumeRoleAction": "sts:AssumeRole",
                          "assumeRolePolicy": {
                            "Statement": [
                              {
                                "Action": "sts:AssumeRole",
                                "Effect": "Allow",
                                "Principal": {
                                  "Service": "\${Token[lambda.amazonaws.com.666]}",
                                },
                              },
                            ],
                            "Version": "2012-10-17",
                          },
                          "attachedPolicies": AttachedPolicies {
                            "policies": [
                              Policy {
                                "_allowCrossEnvironment": false,
                                "_physicalName": "\${Token[TOKEN.688]}",
                                "_policyName": "\${Token[TOKEN.688]}",
                                "document": {
                                  "Statement": [
                                    {
                                      "Action": "lambda:InvokeFunction",
                                      "Effect": "Allow",
                                      "Resource": [
                                        "\${Token[TOKEN.658]}",
                                        "\${Token[TOKEN.658]}:*",
                                      ],
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "env": {
                                  "account": "\${Token[AWS.AccountId.2]}",
                                  "region": "\${Token[AWS.Region.6]}",
                                },
                                "force": false,
                                "grantPrincipal": PolicyGrantPrincipal {
                                  "_policy": [Circular],
                                  "assumeRoleAction": "sts:AssumeRole",
                                  "grantPrincipal": [Circular],
                                  "principalAccount": "\${Token[AWS.AccountId.2]}",
                                },
                                "groups": [],
                                "node": Node {
                                  "_children": {
                                    "Resource": CfnPolicyConditional {
                                      "_cfnProperties": {
                                        "groups": [
                                          "#{Token[TOKEN.691]}",
                                        ],
                                        "policyDocument": {
                                          "Statement": [
                                            {
                                              "Action": "lambda:InvokeFunction",
                                              "Effect": "Allow",
                                              "Resource": [
                                                "\${Token[TOKEN.658]}",
                                                "\${Token[TOKEN.658]}:*",
                                              ],
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "policyName": "\${Token[TOKEN.688]}",
                                        "roles": [
                                          "#{Token[TOKEN.689]}",
                                        ],
                                        "users": [
                                          "#{Token[TOKEN.690]}",
                                        ],
                                      },
                                      "cfnOptions": {},
                                      "cfnResourceType": "AWS::IAM::Policy",
                                      "dependsOn": Set {},
                                      "groups": [
                                        "#{Token[TOKEN.691]}",
                                      ],
                                      "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                      "node": Node {
                                        "_children": {},
                                        "_context": {},
                                        "_dependencies": Set {},
                                        "_locked": false,
                                        "_metadata": [
                                          {
                                            "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                            "trace": undefined,
                                            "type": "aws:cdk:logicalId",
                                          },
                                        ],
                                        "_validations": [],
                                        "host": [Circular],
                                        "id": "Resource",
                                        "scope": [Circular],
                                      },
                                      "policyDocument": {
                                        "Statement": [
                                          {
                                            "Action": "lambda:InvokeFunction",
                                            "Effect": "Allow",
                                            "Resource": [
                                              "\${Token[TOKEN.658]}",
                                              "\${Token[TOKEN.658]}:*",
                                            ],
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "policyName": "\${Token[TOKEN.688]}",
                                      "rawOverrides": {},
                                      "roles": [
                                        "#{Token[TOKEN.689]}",
                                      ],
                                      "stack": [Circular],
                                      "users": [
                                        "#{Token[TOKEN.690]}",
                                      ],
                                      Symbol(@aws-cdk/core.DependableTrait): {
                                        "dependencyRoots": [
                                          [Circular],
                                        ],
                                      },
                                    },
                                  },
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [],
                                  "_validations": [
                                    {
                                      "validate": [Function],
                                    },
                                  ],
                                  "host": [Circular],
                                  "id": "DefaultPolicy",
                                  "scope": [Circular],
                                },
                                "physicalName": "\${Token[TOKEN.688]}",
                                "referenceTaken": false,
                                "roles": [
                                  [Circular],
                                ],
                                "stack": [Circular],
                                "users": [],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                            ],
                          },
                          "defaultPolicy": Policy {
                            "_allowCrossEnvironment": false,
                            "_physicalName": "\${Token[TOKEN.688]}",
                            "_policyName": "\${Token[TOKEN.688]}",
                            "document": {
                              "Statement": [
                                {
                                  "Action": "lambda:InvokeFunction",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "\${Token[TOKEN.658]}",
                                    "\${Token[TOKEN.658]}:*",
                                  ],
                                },
                              ],
                              "Version": "2012-10-17",
                            },
                            "env": {
                              "account": "\${Token[AWS.AccountId.2]}",
                              "region": "\${Token[AWS.Region.6]}",
                            },
                            "force": false,
                            "grantPrincipal": PolicyGrantPrincipal {
                              "_policy": [Circular],
                              "assumeRoleAction": "sts:AssumeRole",
                              "grantPrincipal": [Circular],
                              "principalAccount": "\${Token[AWS.AccountId.2]}",
                            },
                            "groups": [],
                            "node": Node {
                              "_children": {
                                "Resource": CfnPolicyConditional {
                                  "_cfnProperties": {
                                    "groups": [
                                      "#{Token[TOKEN.691]}",
                                    ],
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "lambda:InvokeFunction",
                                          "Effect": "Allow",
                                          "Resource": [
                                            "\${Token[TOKEN.658]}",
                                            "\${Token[TOKEN.658]}:*",
                                          ],
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "policyName": "\${Token[TOKEN.688]}",
                                    "roles": [
                                      "#{Token[TOKEN.689]}",
                                    ],
                                    "users": [
                                      "#{Token[TOKEN.690]}",
                                    ],
                                  },
                                  "cfnOptions": {},
                                  "cfnResourceType": "AWS::IAM::Policy",
                                  "dependsOn": Set {},
                                  "groups": [
                                    "#{Token[TOKEN.691]}",
                                  ],
                                  "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                  "node": Node {
                                    "_children": {},
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [
                                      {
                                        "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                        "trace": undefined,
                                        "type": "aws:cdk:logicalId",
                                      },
                                    ],
                                    "_validations": [],
                                    "host": [Circular],
                                    "id": "Resource",
                                    "scope": [Circular],
                                  },
                                  "policyDocument": {
                                    "Statement": [
                                      {
                                        "Action": "lambda:InvokeFunction",
                                        "Effect": "Allow",
                                        "Resource": [
                                          "\${Token[TOKEN.658]}",
                                          "\${Token[TOKEN.658]}:*",
                                        ],
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "policyName": "\${Token[TOKEN.688]}",
                                  "rawOverrides": {},
                                  "roles": [
                                    "#{Token[TOKEN.689]}",
                                  ],
                                  "stack": [Circular],
                                  "users": [
                                    "#{Token[TOKEN.690]}",
                                  ],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                              },
                              "_context": {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": [],
                              "_validations": [
                                {
                                  "validate": [Function],
                                },
                              ],
                              "host": [Circular],
                              "id": "DefaultPolicy",
                              "scope": [Circular],
                            },
                            "physicalName": "\${Token[TOKEN.688]}",
                            "referenceTaken": false,
                            "roles": [
                              [Circular],
                            ],
                            "stack": [Circular],
                            "users": [],
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                          "dependables": Map {
                            {
                              "Action": "lambda:InvokeFunction",
                              "Effect": "Allow",
                              "Resource": [
                                "\${Token[TOKEN.658]}",
                                "\${Token[TOKEN.658]}:*",
                              ],
                            } => DependencyGroup {
                              "_deps": [],
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [],
                              },
                            },
                          },
                          "env": {
                            "account": "\${Token[AWS.AccountId.2]}",
                            "region": "\${Token[AWS.Region.6]}",
                          },
                          "grantPrincipal": [Circular],
                          "inlinePolicies": {},
                          "managedPolicies": [
                            AwsManagedPolicy {
                              "managedPolicyArn": "arn:\${Token[AWS.Partition.5]}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                            },
                          ],
                          "node": Node {
                            "_children": {
                              "DefaultPolicy": Policy {
                                "_allowCrossEnvironment": false,
                                "_physicalName": "\${Token[TOKEN.688]}",
                                "_policyName": "\${Token[TOKEN.688]}",
                                "document": {
                                  "Statement": [
                                    {
                                      "Action": "lambda:InvokeFunction",
                                      "Effect": "Allow",
                                      "Resource": [
                                        "\${Token[TOKEN.658]}",
                                        "\${Token[TOKEN.658]}:*",
                                      ],
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "env": {
                                  "account": "\${Token[AWS.AccountId.2]}",
                                  "region": "\${Token[AWS.Region.6]}",
                                },
                                "force": false,
                                "grantPrincipal": PolicyGrantPrincipal {
                                  "_policy": [Circular],
                                  "assumeRoleAction": "sts:AssumeRole",
                                  "grantPrincipal": [Circular],
                                  "principalAccount": "\${Token[AWS.AccountId.2]}",
                                },
                                "groups": [],
                                "node": Node {
                                  "_children": {
                                    "Resource": CfnPolicyConditional {
                                      "_cfnProperties": {
                                        "groups": [
                                          "#{Token[TOKEN.691]}",
                                        ],
                                        "policyDocument": {
                                          "Statement": [
                                            {
                                              "Action": "lambda:InvokeFunction",
                                              "Effect": "Allow",
                                              "Resource": [
                                                "\${Token[TOKEN.658]}",
                                                "\${Token[TOKEN.658]}:*",
                                              ],
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "policyName": "\${Token[TOKEN.688]}",
                                        "roles": [
                                          "#{Token[TOKEN.689]}",
                                        ],
                                        "users": [
                                          "#{Token[TOKEN.690]}",
                                        ],
                                      },
                                      "cfnOptions": {},
                                      "cfnResourceType": "AWS::IAM::Policy",
                                      "dependsOn": Set {},
                                      "groups": [
                                        "#{Token[TOKEN.691]}",
                                      ],
                                      "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                      "node": Node {
                                        "_children": {},
                                        "_context": {},
                                        "_dependencies": Set {},
                                        "_locked": false,
                                        "_metadata": [
                                          {
                                            "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                            "trace": undefined,
                                            "type": "aws:cdk:logicalId",
                                          },
                                        ],
                                        "_validations": [],
                                        "host": [Circular],
                                        "id": "Resource",
                                        "scope": [Circular],
                                      },
                                      "policyDocument": {
                                        "Statement": [
                                          {
                                            "Action": "lambda:InvokeFunction",
                                            "Effect": "Allow",
                                            "Resource": [
                                              "\${Token[TOKEN.658]}",
                                              "\${Token[TOKEN.658]}:*",
                                            ],
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "policyName": "\${Token[TOKEN.688]}",
                                      "rawOverrides": {},
                                      "roles": [
                                        "#{Token[TOKEN.689]}",
                                      ],
                                      "stack": [Circular],
                                      "users": [
                                        "#{Token[TOKEN.690]}",
                                      ],
                                      Symbol(@aws-cdk/core.DependableTrait): {
                                        "dependencyRoots": [
                                          [Circular],
                                        ],
                                      },
                                    },
                                  },
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [],
                                  "_validations": [
                                    {
                                      "validate": [Function],
                                    },
                                  ],
                                  "host": [Circular],
                                  "id": "DefaultPolicy",
                                  "scope": [Circular],
                                },
                                "physicalName": "\${Token[TOKEN.688]}",
                                "referenceTaken": false,
                                "roles": [
                                  [Circular],
                                ],
                                "stack": [Circular],
                                "users": [],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                              "ImportServiceRole": ImportedRole {
                                "_allowCrossEnvironment": false,
                                "_physicalName": undefined,
                                "assumeRoleAction": "sts:AssumeRole",
                                "attachedPolicies": AttachedPolicies {
                                  "policies": [],
                                },
                                "defaultPolicyName": undefined,
                                "env": {
                                  "account": "\${Token[AWS.AccountId.2]}",
                                  "region": "\${Token[AWS.Region.6]}",
                                },
                                "grantPrincipal": [Circular],
                                "node": Node {
                                  "_children": {},
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [],
                                  "_validations": [],
                                  "host": [Circular],
                                  "id": "ImportServiceRole",
                                  "scope": [Circular],
                                },
                                "physicalName": "\${Token[TOKEN.667]}",
                                "policyFragment": PrincipalPolicyFragment {
                                  "conditions": {},
                                  "principalJson": {
                                    "AWS": [
                                      "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                                    ],
                                  },
                                },
                                "principalAccount": "\${Token[AWS.AccountId.2]}",
                                "roleArn": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                                "roleName": "ServiceRole",
                                "stack": [Circular],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                              "Resource": CfnRole {
                                "_cfnProperties": {
                                  "assumeRolePolicyDocument": {
                                    "Statement": [
                                      {
                                        "Action": "sts:AssumeRole",
                                        "Effect": "Allow",
                                        "Principal": {
                                          "Service": "\${Token[lambda.amazonaws.com.666]}",
                                        },
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "description": undefined,
                                  "managedPolicyArns": [
                                    "#{Token[TOKEN.668]}",
                                  ],
                                  "maxSessionDuration": undefined,
                                  "path": undefined,
                                  "permissionsBoundary": undefined,
                                  "policies": undefined,
                                  "roleName": "\${Token[TOKEN.665]}",
                                },
                                "assumeRolePolicyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Principal": {
                                        "Service": "\${Token[lambda.amazonaws.com.666]}",
                                      },
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "attrArn": "\${Token[TOKEN.670]}",
                                "attrRoleId": "\${Token[TOKEN.671]}",
                                "cfnOptions": {},
                                "cfnResourceType": "AWS::IAM::Role",
                                "dependsOn": Set {},
                                "description": undefined,
                                "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.Resource.LogicalID.669]}",
                                "managedPolicyArns": [
                                  "#{Token[TOKEN.668]}",
                                ],
                                "maxSessionDuration": undefined,
                                "node": Node {
                                  "_children": {},
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [
                                    {
                                      "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.Resource.LogicalID.669]}",
                                      "trace": undefined,
                                      "type": "aws:cdk:logicalId",
                                    },
                                  ],
                                  "_validations": [],
                                  "host": [Circular],
                                  "id": "Resource",
                                  "scope": [Circular],
                                },
                                "path": undefined,
                                "permissionsBoundary": undefined,
                                "policies": undefined,
                                "rawOverrides": {},
                                "roleName": "\${Token[TOKEN.665]}",
                                "stack": [Circular],
                                "tags": TagManager {
                                  "initialTagPriority": 50,
                                  "priorities": Map {},
                                  "renderedTags": "<unresolved-lazy>",
                                  "resourceTypeName": "AWS::IAM::Role",
                                  "tagFormatter": StandardFormatter {},
                                  "tagPropertyName": "tags",
                                  "tags": Map {},
                                },
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                            },
                            "_context": {},
                            "_dependencies": Set {},
                            "_locked": false,
                            "_metadata": [],
                            "_validations": [
                              {
                                "validate": [Function],
                              },
                            ],
                            "host": [Circular],
                            "id": "ServiceRole",
                            "scope": [Circular],
                          },
                          "permissionsBoundary": undefined,
                          "physicalName": "\${Token[TOKEN.665]}",
                          "policyFragment": PrincipalPolicyFragment {
                            "conditions": {},
                            "principalJson": {
                              "AWS": [
                                "\${Token[TOKEN.672]}",
                              ],
                            },
                          },
                          "principalAccount": "\${Token[AWS.AccountId.2]}",
                          "roleArn": "\${Token[TOKEN.672]}",
                          "roleName": "\${Token[TOKEN.674]}",
                          "stack": [Circular],
                          Symbol(@aws-cdk/core.DependableTrait): {
                            "dependencyRoots": [
                              [Circular],
                            ],
                          },
                        },
                        "runtime": Runtime {
                          "bundlingDockerImage": "public.ecr.aws/sam/build-nodejs14.x",
                          "bundlingImage": "public.ecr.aws/sam/build-nodejs14.x",
                          "family": 0,
                          "name": "nodejs14.x",
                          "supportsCodeGuruProfiling": false,
                          "supportsInlineCode": true,
                        },
                        "stack": [Circular],
                        "timeout": Duration {
                          "amount": 15,
                          "unit": TimeUnit {
                            "inMillis": 60000,
                            "isoLabel": "M",
                            "label": "minutes",
                          },
                        },
                        Symbol(@aws-cdk/core.DependableTrait): {
                          "dependencyRoots": [
                            [Circular],
                          ],
                        },
                      },
                      "resource": {
                        "addToResourcePolicy": [Function],
                        "applyRemovalPolicy": [Function],
                        "env": {
                          "account": "\${Token[AWS.AccountId.2]}",
                          "region": "\${Token[AWS.Region.6]}",
                        },
                        "node": Node {
                          "_children": {
                            "Code": Asset {
                              "assetHash": "437761578112cb81b0b580e5b870f6bb63cb2ab57ec7b59e9c0cf3dd5ce02013",
                              "assetPath": "asset.437761578112cb81b0b580e5b870f6bb63cb2ab57ec7b59e9c0cf3dd5ce02013",
                              "bucket": Import {
                                "_allowCrossEnvironment": false,
                                "_physicalName": undefined,
                                "autoCreatePolicy": false,
                                "bucketArn": "arn:\${Token[AWS.Partition.5]}:s3:::\${Token[TOKEN.647]}",
                                "bucketDomainName": "\${Token[TOKEN.647]}.s3.\${Token[AWS.URLSuffix.3]}",
                                "bucketDualStackDomainName": "\${Token[TOKEN.647]}.s3.dualstack.\${Token[AWS.Region.6]}.\${Token[AWS.URLSuffix.3]}",
                                "bucketName": "\${Token[TOKEN.647]}",
                                "bucketRegionalDomainName": "\${Token[TOKEN.647]}.s3.\${Token[AWS.Region.6]}.\${Token[AWS.URLSuffix.3]}",
                                "bucketWebsiteDomainName": "\${Token[TOKEN.647]}.\${Token[TOKEN.649]}",
                                "bucketWebsiteNewUrlFormat": false,
                                "bucketWebsiteUrl": "http://\${Token[TOKEN.647]}.\${Token[TOKEN.649]}",
                                "disallowPublicAccess": false,
                                "encryptionKey": undefined,
                                "env": {
                                  "account": "\${Token[AWS.AccountId.2]}",
                                  "region": "\${Token[AWS.Region.6]}",
                                },
                                "isWebsite": false,
                                "node": Node {
                                  "_children": {},
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [],
                                  "_validations": [
                                    {
                                      "validate": [Function],
                                    },
                                  ],
                                  "host": [Circular],
                                  "id": "AssetBucket",
                                  "scope": [Circular],
                                },
                                "notificationsHandlerRole": undefined,
                                "physicalName": "\${Token[TOKEN.650]}",
                                "policy": undefined,
                                "stack": [Circular],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                              "httpUrl": "\${Token[TOKEN.646]}",
                              "isBundled": false,
                              "isFile": false,
                              "isZipArchive": true,
                              "node": Node {
                                "_children": {
                                  "AssetBucket": Import {
                                    "_allowCrossEnvironment": false,
                                    "_physicalName": undefined,
                                    "autoCreatePolicy": false,
                                    "bucketArn": "arn:\${Token[AWS.Partition.5]}:s3:::\${Token[TOKEN.647]}",
                                    "bucketDomainName": "\${Token[TOKEN.647]}.s3.\${Token[AWS.URLSuffix.3]}",
                                    "bucketDualStackDomainName": "\${Token[TOKEN.647]}.s3.dualstack.\${Token[AWS.Region.6]}.\${Token[AWS.URLSuffix.3]}",
                                    "bucketName": "\${Token[TOKEN.647]}",
                                    "bucketRegionalDomainName": "\${Token[TOKEN.647]}.s3.\${Token[AWS.Region.6]}.\${Token[AWS.URLSuffix.3]}",
                                    "bucketWebsiteDomainName": "\${Token[TOKEN.647]}.\${Token[TOKEN.649]}",
                                    "bucketWebsiteNewUrlFormat": false,
                                    "bucketWebsiteUrl": "http://\${Token[TOKEN.647]}.\${Token[TOKEN.649]}",
                                    "disallowPublicAccess": false,
                                    "encryptionKey": undefined,
                                    "env": {
                                      "account": "\${Token[AWS.AccountId.2]}",
                                      "region": "\${Token[AWS.Region.6]}",
                                    },
                                    "isWebsite": false,
                                    "node": Node {
                                      "_children": {},
                                      "_context": {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": [],
                                      "_validations": [
                                        {
                                          "validate": [Function],
                                        },
                                      ],
                                      "host": [Circular],
                                      "id": "AssetBucket",
                                      "scope": [Circular],
                                    },
                                    "notificationsHandlerRole": undefined,
                                    "physicalName": "\${Token[TOKEN.650]}",
                                    "policy": undefined,
                                    "stack": [Circular],
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [
                                        [Circular],
                                      ],
                                    },
                                  },
                                  "Stage": AssetStaging {
                                    "absoluteStagedPath": "/private/var/folders/tn/799yyvm92g74fj_thj2z7w140000gr/T/cdk-test-app-WFT8EN/asset.437761578112cb81b0b580e5b870f6bb63cb2ab57ec7b59e9c0cf3dd5ce02013",
                                    "assetHash": "437761578112cb81b0b580e5b870f6bb63cb2ab57ec7b59e9c0cf3dd5ce02013",
                                    "assetOutdir": "/private/var/folders/tn/799yyvm92g74fj_thj2z7w140000gr/T/cdk-test-app-WFT8EN",
                                    "cacheKey": "944e1635f7fdfeb3073e35dcc76cabb302cf6e89afa2c77982bff6c3fdf3cdab",
                                    "customSourceFingerprint": undefined,
                                    "fingerprintOptions": {
                                      "assetHash": undefined,
                                      "extraHash": undefined,
                                      "follow": undefined,
                                      "path": "/Users/rverma/dev/aws/nsl-saas-accelerator/packages/constructs/lib/aws-codecommit/lambda-codecommit-secret/dist",
                                      "sourcePath": "/Users/rverma/dev/aws/nsl-saas-accelerator/packages/constructs/lib/aws-codecommit/lambda-codecommit-secret/dist",
                                    },
                                    "hashType": "source",
                                    "isArchive": true,
                                    "node": Node {
                                      "_children": {},
                                      "_context": {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": [],
                                      "_validations": [],
                                      "host": [Circular],
                                      "id": "Stage",
                                      "scope": [Circular],
                                    },
                                    "packaging": "zip",
                                    "sourcePath": "/Users/rverma/dev/aws/nsl-saas-accelerator/packages/constructs/lib/aws-codecommit/lambda-codecommit-secret/dist",
                                    "sourceStats": Stats {
                                      "atime": 2023-04-19T09:28:15.189Z,
                                      "atimeMs": 1681896495189.284,
                                      "birthtime": 2023-04-18T10:17:45.917Z,
                                      "birthtimeMs": 1681813065916.9114,
                                      "blksize": 4096,
                                      "blocks": 0,
                                      "ctime": 2023-04-19T09:28:15.155Z,
                                      "ctimeMs": 1681896495155.161,
                                      "dev": 16777233,
                                      "gid": 20,
                                      "ino": 64257818,
                                      "mode": 16877,
                                      "mtime": 2023-04-19T09:28:15.155Z,
                                      "mtimeMs": 1681896495155.161,
                                      "nlink": 4,
                                      "rdev": 0,
                                      "size": 128,
                                      "uid": 504,
                                    },
                                    "stagedPath": "/private/var/folders/tn/799yyvm92g74fj_thj2z7w140000gr/T/cdk-test-app-WFT8EN/asset.437761578112cb81b0b580e5b870f6bb63cb2ab57ec7b59e9c0cf3dd5ce02013",
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [
                                        [Circular],
                                      ],
                                    },
                                  },
                                },
                                "_context": {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": [],
                                "_validations": [],
                                "host": [Circular],
                                "id": "Code",
                                "scope": [Circular],
                              },
                              "s3BucketName": "\${Token[TOKEN.647]}",
                              "s3ObjectKey": "REPLACED-GENERATED-NAME.zip",
                              "s3ObjectUrl": "\${Token[TOKEN.648]}",
                              "s3Url": "\${Token[TOKEN.646]}",
                              "sourceHash": "437761578112cb81b0b580e5b870f6bb63cb2ab57ec7b59e9c0cf3dd5ce02013",
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [
                                  [Circular],
                                ],
                              },
                            },
                            "Resource": CfnFunction {
                              "_cfnProperties": {
                                "architectures": undefined,
                                "code": {
                                  "imageUri": undefined,
                                  "s3Bucket": "\${Token[TOKEN.647]}",
                                  "s3Key": "REPLACED-GENERATED-NAME.zip",
                                  "s3ObjectVersion": undefined,
                                  "zipFile": undefined,
                                },
                                "codeSigningConfigArn": undefined,
                                "deadLetterConfig": undefined,
                                "description": "Create Gitops Secret",
                                "environment": "<unresolved-lazy>",
                                "ephemeralStorage": undefined,
                                "fileSystemConfigs": undefined,
                                "functionName": "\${Token[TOKEN.645]}",
                                "handler": "index.handler",
                                "imageConfig": undefined,
                                "kmsKeyArn": undefined,
                                "layers": [
                                  "#{Token[TOKEN.651]}",
                                ],
                                "memorySize": undefined,
                                "packageType": undefined,
                                "reservedConcurrentExecutions": undefined,
                                "role": "\${Token[TOKEN.17]}",
                                "runtime": "nodejs18.x",
                                "runtimeManagementConfig": undefined,
                                "timeout": 900,
                                "vpcConfig": undefined,
                              },
                              "architectures": undefined,
                              "attrArn": "\${Token[TOKEN.653]}",
                              "attrSnapStartResponseApplyOn": "\${Token[TOKEN.654]}",
                              "attrSnapStartResponseOptimizationStatus": "\${Token[TOKEN.655]}",
                              "cfnOptions": {},
                              "cfnResourceType": "AWS::Lambda::Function",
                              "code": {
                                "imageUri": undefined,
                                "s3Bucket": "\${Token[TOKEN.647]}",
                                "s3Key": "REPLACED-GENERATED-NAME.zip",
                                "s3ObjectVersion": undefined,
                                "zipFile": undefined,
                              },
                              "codeSigningConfigArn": undefined,
                              "deadLetterConfig": undefined,
                              "dependsOn": Set {},
                              "description": "Create Gitops Secret",
                              "environment": "<unresolved-lazy>",
                              "ephemeralStorage": undefined,
                              "fileSystemConfigs": undefined,
                              "functionName": "\${Token[TOKEN.645]}",
                              "handler": "index.handler",
                              "imageConfig": undefined,
                              "kmsKeyArn": undefined,
                              "layers": [
                                "#{Token[TOKEN.651]}",
                              ],
                              "logicalId": "\${Token[Default.codeCommitSecret.Function.Resource.LogicalID.652]}",
                              "memorySize": undefined,
                              "node": Node {
                                "_children": {},
                                "_context": {},
                                "_dependencies": Set {
                                  Role {
                                    "_allowCrossEnvironment": true,
                                    "_didSplit": false,
                                    "_physicalName": "AWSLambdaBasicExecutionRole-codeCommitSecret",
                                    "_roleId": "\${Token[TOKEN.16]}",
                                    "assumeRoleAction": "sts:AssumeRole",
                                    "assumeRolePolicy": {
                                      "Statement": [
                                        {
                                          "Action": "sts:AssumeRole",
                                          "Effect": "Allow",
                                          "Principal": {
                                            "Service": "\${Token[lambda.amazonaws.com.11]}",
                                          },
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "attachedPolicies": AttachedPolicies {
                                      "policies": [
                                        Policy {
                                          "_allowCrossEnvironment": false,
                                          "_physicalName": "\${Token[TOKEN.20]}",
                                          "_policyName": "\${Token[TOKEN.20]}",
                                          "document": {
                                            "Statement": [
                                              {
                                                "Action": "logs:CreateLogGroup",
                                                "Effect": "Allow",
                                                "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                              },
                                              {
                                                "Action": "secretsmanager:*",
                                                "Effect": "Allow",
                                                "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                              },
                                              {
                                                "Action": [
                                                  "kms:Decrypt",
                                                  "kms:DescribeKey",
                                                ],
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                              {
                                                "Action": [
                                                  "iam:CreateServiceSpecificCredential",
                                                  "iam:DeleteServiceSpecificCredential",
                                                  "iam:ListServiceSpecificCredentials",
                                                ],
                                                "Effect": "Allow",
                                                "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "env": {
                                            "account": "\${Token[AWS.AccountId.2]}",
                                            "region": "\${Token[AWS.Region.6]}",
                                          },
                                          "force": false,
                                          "grantPrincipal": PolicyGrantPrincipal {
                                            "_policy": [Circular],
                                            "assumeRoleAction": "sts:AssumeRole",
                                            "grantPrincipal": [Circular],
                                            "principalAccount": "\${Token[AWS.AccountId.2]}",
                                          },
                                          "groups": [],
                                          "node": Node {
                                            "_children": {
                                              "Resource": CfnPolicyConditional {
                                                "_cfnProperties": {
                                                  "groups": [
                                                    "#{Token[TOKEN.23]}",
                                                  ],
                                                  "policyDocument": {
                                                    "Statement": [
                                                      {
                                                        "Action": "logs:CreateLogGroup",
                                                        "Effect": "Allow",
                                                        "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                                      },
                                                      {
                                                        "Action": "secretsmanager:*",
                                                        "Effect": "Allow",
                                                        "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                                      },
                                                      {
                                                        "Action": [
                                                          "kms:Decrypt",
                                                          "kms:DescribeKey",
                                                        ],
                                                        "Effect": "Allow",
                                                        "Resource": "*",
                                                      },
                                                      {
                                                        "Action": [
                                                          "iam:CreateServiceSpecificCredential",
                                                          "iam:DeleteServiceSpecificCredential",
                                                          "iam:ListServiceSpecificCredentials",
                                                        ],
                                                        "Effect": "Allow",
                                                        "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                                      },
                                                    ],
                                                    "Version": "2012-10-17",
                                                  },
                                                  "policyName": "\${Token[TOKEN.20]}",
                                                  "roles": [
                                                    "#{Token[TOKEN.21]}",
                                                  ],
                                                  "users": [
                                                    "#{Token[TOKEN.22]}",
                                                  ],
                                                },
                                                "cfnOptions": {},
                                                "cfnResourceType": "AWS::IAM::Policy",
                                                "dependsOn": Set {},
                                                "groups": [
                                                  "#{Token[TOKEN.23]}",
                                                ],
                                                "logicalId": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                                                "node": Node {
                                                  "_children": {},
                                                  "_context": {},
                                                  "_dependencies": Set {},
                                                  "_locked": false,
                                                  "_metadata": [
                                                    {
                                                      "data": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                                                      "trace": undefined,
                                                      "type": "aws:cdk:logicalId",
                                                    },
                                                  ],
                                                  "_validations": [],
                                                  "host": [Circular],
                                                  "id": "Resource",
                                                  "scope": [Circular],
                                                },
                                                "policyDocument": {
                                                  "Statement": [
                                                    {
                                                      "Action": "logs:CreateLogGroup",
                                                      "Effect": "Allow",
                                                      "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                                    },
                                                    {
                                                      "Action": "secretsmanager:*",
                                                      "Effect": "Allow",
                                                      "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                                    },
                                                    {
                                                      "Action": [
                                                        "kms:Decrypt",
                                                        "kms:DescribeKey",
                                                      ],
                                                      "Effect": "Allow",
                                                      "Resource": "*",
                                                    },
                                                    {
                                                      "Action": [
                                                        "iam:CreateServiceSpecificCredential",
                                                        "iam:DeleteServiceSpecificCredential",
                                                        "iam:ListServiceSpecificCredentials",
                                                      ],
                                                      "Effect": "Allow",
                                                      "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                                    },
                                                  ],
                                                  "Version": "2012-10-17",
                                                },
                                                "policyName": "\${Token[TOKEN.20]}",
                                                "rawOverrides": {},
                                                "roles": [
                                                  "#{Token[TOKEN.21]}",
                                                ],
                                                "stack": [Circular],
                                                "users": [
                                                  "#{Token[TOKEN.22]}",
                                                ],
                                                Symbol(@aws-cdk/core.DependableTrait): {
                                                  "dependencyRoots": [
                                                    [Circular],
                                                  ],
                                                },
                                              },
                                            },
                                            "_context": {},
                                            "_dependencies": Set {},
                                            "_locked": false,
                                            "_metadata": [],
                                            "_validations": [
                                              {
                                                "validate": [Function],
                                              },
                                            ],
                                            "host": [Circular],
                                            "id": "DefaultPolicy",
                                            "scope": [Circular],
                                          },
                                          "physicalName": "\${Token[TOKEN.20]}",
                                          "referenceTaken": false,
                                          "roles": [
                                            [Circular],
                                          ],
                                          "stack": [Circular],
                                          "users": [],
                                          Symbol(@aws-cdk/core.DependableTrait): {
                                            "dependencyRoots": [
                                              [Circular],
                                            ],
                                          },
                                        },
                                      ],
                                    },
                                    "defaultPolicy": Policy {
                                      "_allowCrossEnvironment": false,
                                      "_physicalName": "\${Token[TOKEN.20]}",
                                      "_policyName": "\${Token[TOKEN.20]}",
                                      "document": {
                                        "Statement": [
                                          {
                                            "Action": "logs:CreateLogGroup",
                                            "Effect": "Allow",
                                            "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                          },
                                          {
                                            "Action": "secretsmanager:*",
                                            "Effect": "Allow",
                                            "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                          },
                                          {
                                            "Action": [
                                              "kms:Decrypt",
                                              "kms:DescribeKey",
                                            ],
                                            "Effect": "Allow",
                                            "Resource": "*",
                                          },
                                          {
                                            "Action": [
                                              "iam:CreateServiceSpecificCredential",
                                              "iam:DeleteServiceSpecificCredential",
                                              "iam:ListServiceSpecificCredentials",
                                            ],
                                            "Effect": "Allow",
                                            "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "env": {
                                        "account": "\${Token[AWS.AccountId.2]}",
                                        "region": "\${Token[AWS.Region.6]}",
                                      },
                                      "force": false,
                                      "grantPrincipal": PolicyGrantPrincipal {
                                        "_policy": [Circular],
                                        "assumeRoleAction": "sts:AssumeRole",
                                        "grantPrincipal": [Circular],
                                        "principalAccount": "\${Token[AWS.AccountId.2]}",
                                      },
                                      "groups": [],
                                      "node": Node {
                                        "_children": {
                                          "Resource": CfnPolicyConditional {
                                            "_cfnProperties": {
                                              "groups": [
                                                "#{Token[TOKEN.23]}",
                                              ],
                                              "policyDocument": {
                                                "Statement": [
                                                  {
                                                    "Action": "logs:CreateLogGroup",
                                                    "Effect": "Allow",
                                                    "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                                  },
                                                  {
                                                    "Action": "secretsmanager:*",
                                                    "Effect": "Allow",
                                                    "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                                  },
                                                  {
                                                    "Action": [
                                                      "kms:Decrypt",
                                                      "kms:DescribeKey",
                                                    ],
                                                    "Effect": "Allow",
                                                    "Resource": "*",
                                                  },
                                                  {
                                                    "Action": [
                                                      "iam:CreateServiceSpecificCredential",
                                                      "iam:DeleteServiceSpecificCredential",
                                                      "iam:ListServiceSpecificCredentials",
                                                    ],
                                                    "Effect": "Allow",
                                                    "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                                  },
                                                ],
                                                "Version": "2012-10-17",
                                              },
                                              "policyName": "\${Token[TOKEN.20]}",
                                              "roles": [
                                                "#{Token[TOKEN.21]}",
                                              ],
                                              "users": [
                                                "#{Token[TOKEN.22]}",
                                              ],
                                            },
                                            "cfnOptions": {},
                                            "cfnResourceType": "AWS::IAM::Policy",
                                            "dependsOn": Set {},
                                            "groups": [
                                              "#{Token[TOKEN.23]}",
                                            ],
                                            "logicalId": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                                            "node": Node {
                                              "_children": {},
                                              "_context": {},
                                              "_dependencies": Set {},
                                              "_locked": false,
                                              "_metadata": [
                                                {
                                                  "data": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                                                  "trace": undefined,
                                                  "type": "aws:cdk:logicalId",
                                                },
                                              ],
                                              "_validations": [],
                                              "host": [Circular],
                                              "id": "Resource",
                                              "scope": [Circular],
                                            },
                                            "policyDocument": {
                                              "Statement": [
                                                {
                                                  "Action": "logs:CreateLogGroup",
                                                  "Effect": "Allow",
                                                  "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                                },
                                                {
                                                  "Action": "secretsmanager:*",
                                                  "Effect": "Allow",
                                                  "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                                },
                                                {
                                                  "Action": [
                                                    "kms:Decrypt",
                                                    "kms:DescribeKey",
                                                  ],
                                                  "Effect": "Allow",
                                                  "Resource": "*",
                                                },
                                                {
                                                  "Action": [
                                                    "iam:CreateServiceSpecificCredential",
                                                    "iam:DeleteServiceSpecificCredential",
                                                    "iam:ListServiceSpecificCredentials",
                                                  ],
                                                  "Effect": "Allow",
                                                  "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                                },
                                              ],
                                              "Version": "2012-10-17",
                                            },
                                            "policyName": "\${Token[TOKEN.20]}",
                                            "rawOverrides": {},
                                            "roles": [
                                              "#{Token[TOKEN.21]}",
                                            ],
                                            "stack": [Circular],
                                            "users": [
                                              "#{Token[TOKEN.22]}",
                                            ],
                                            Symbol(@aws-cdk/core.DependableTrait): {
                                              "dependencyRoots": [
                                                [Circular],
                                              ],
                                            },
                                          },
                                        },
                                        "_context": {},
                                        "_dependencies": Set {},
                                        "_locked": false,
                                        "_metadata": [],
                                        "_validations": [
                                          {
                                            "validate": [Function],
                                          },
                                        ],
                                        "host": [Circular],
                                        "id": "DefaultPolicy",
                                        "scope": [Circular],
                                      },
                                      "physicalName": "\${Token[TOKEN.20]}",
                                      "referenceTaken": false,
                                      "roles": [
                                        [Circular],
                                      ],
                                      "stack": [Circular],
                                      "users": [],
                                      Symbol(@aws-cdk/core.DependableTrait): {
                                        "dependencyRoots": [
                                          [Circular],
                                        ],
                                      },
                                    },
                                    "dependables": Map {
                                      {
                                        "Action": "logs:CreateLogGroup",
                                        "Effect": "Allow",
                                        "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                      } => DependencyGroup {
                                        "_deps": [],
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [],
                                        },
                                      },
                                      {
                                        "Action": "secretsmanager:*",
                                        "Effect": "Allow",
                                        "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                      } => DependencyGroup {
                                        "_deps": [],
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [],
                                        },
                                      },
                                      {
                                        "Action": [
                                          "kms:Decrypt",
                                          "kms:DescribeKey",
                                        ],
                                        "Effect": "Allow",
                                        "Resource": "*",
                                      } => DependencyGroup {
                                        "_deps": [],
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [],
                                        },
                                      },
                                      {
                                        "Action": [
                                          "iam:CreateServiceSpecificCredential",
                                          "iam:DeleteServiceSpecificCredential",
                                          "iam:ListServiceSpecificCredentials",
                                        ],
                                        "Effect": "Allow",
                                        "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                      } => DependencyGroup {
                                        "_deps": [],
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [],
                                        },
                                      },
                                    },
                                    "env": {
                                      "account": "\${Token[AWS.AccountId.2]}",
                                      "region": "\${Token[AWS.Region.6]}",
                                    },
                                    "grantPrincipal": [Circular],
                                    "inlinePolicies": {},
                                    "managedPolicies": [
                                      AwsManagedPolicy {
                                        "managedPolicyArn": "arn:\${Token[AWS.Partition.5]}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                                      },
                                    ],
                                    "node": Node {
                                      "_children": {
                                        "DefaultPolicy": Policy {
                                          "_allowCrossEnvironment": false,
                                          "_physicalName": "\${Token[TOKEN.20]}",
                                          "_policyName": "\${Token[TOKEN.20]}",
                                          "document": {
                                            "Statement": [
                                              {
                                                "Action": "logs:CreateLogGroup",
                                                "Effect": "Allow",
                                                "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                              },
                                              {
                                                "Action": "secretsmanager:*",
                                                "Effect": "Allow",
                                                "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                              },
                                              {
                                                "Action": [
                                                  "kms:Decrypt",
                                                  "kms:DescribeKey",
                                                ],
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                              {
                                                "Action": [
                                                  "iam:CreateServiceSpecificCredential",
                                                  "iam:DeleteServiceSpecificCredential",
                                                  "iam:ListServiceSpecificCredentials",
                                                ],
                                                "Effect": "Allow",
                                                "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "env": {
                                            "account": "\${Token[AWS.AccountId.2]}",
                                            "region": "\${Token[AWS.Region.6]}",
                                          },
                                          "force": false,
                                          "grantPrincipal": PolicyGrantPrincipal {
                                            "_policy": [Circular],
                                            "assumeRoleAction": "sts:AssumeRole",
                                            "grantPrincipal": [Circular],
                                            "principalAccount": "\${Token[AWS.AccountId.2]}",
                                          },
                                          "groups": [],
                                          "node": Node {
                                            "_children": {
                                              "Resource": CfnPolicyConditional {
                                                "_cfnProperties": {
                                                  "groups": [
                                                    "#{Token[TOKEN.23]}",
                                                  ],
                                                  "policyDocument": {
                                                    "Statement": [
                                                      {
                                                        "Action": "logs:CreateLogGroup",
                                                        "Effect": "Allow",
                                                        "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                                      },
                                                      {
                                                        "Action": "secretsmanager:*",
                                                        "Effect": "Allow",
                                                        "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                                      },
                                                      {
                                                        "Action": [
                                                          "kms:Decrypt",
                                                          "kms:DescribeKey",
                                                        ],
                                                        "Effect": "Allow",
                                                        "Resource": "*",
                                                      },
                                                      {
                                                        "Action": [
                                                          "iam:CreateServiceSpecificCredential",
                                                          "iam:DeleteServiceSpecificCredential",
                                                          "iam:ListServiceSpecificCredentials",
                                                        ],
                                                        "Effect": "Allow",
                                                        "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                                      },
                                                    ],
                                                    "Version": "2012-10-17",
                                                  },
                                                  "policyName": "\${Token[TOKEN.20]}",
                                                  "roles": [
                                                    "#{Token[TOKEN.21]}",
                                                  ],
                                                  "users": [
                                                    "#{Token[TOKEN.22]}",
                                                  ],
                                                },
                                                "cfnOptions": {},
                                                "cfnResourceType": "AWS::IAM::Policy",
                                                "dependsOn": Set {},
                                                "groups": [
                                                  "#{Token[TOKEN.23]}",
                                                ],
                                                "logicalId": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                                                "node": Node {
                                                  "_children": {},
                                                  "_context": {},
                                                  "_dependencies": Set {},
                                                  "_locked": false,
                                                  "_metadata": [
                                                    {
                                                      "data": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                                                      "trace": undefined,
                                                      "type": "aws:cdk:logicalId",
                                                    },
                                                  ],
                                                  "_validations": [],
                                                  "host": [Circular],
                                                  "id": "Resource",
                                                  "scope": [Circular],
                                                },
                                                "policyDocument": {
                                                  "Statement": [
                                                    {
                                                      "Action": "logs:CreateLogGroup",
                                                      "Effect": "Allow",
                                                      "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                                    },
                                                    {
                                                      "Action": "secretsmanager:*",
                                                      "Effect": "Allow",
                                                      "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                                    },
                                                    {
                                                      "Action": [
                                                        "kms:Decrypt",
                                                        "kms:DescribeKey",
                                                      ],
                                                      "Effect": "Allow",
                                                      "Resource": "*",
                                                    },
                                                    {
                                                      "Action": [
                                                        "iam:CreateServiceSpecificCredential",
                                                        "iam:DeleteServiceSpecificCredential",
                                                        "iam:ListServiceSpecificCredentials",
                                                      ],
                                                      "Effect": "Allow",
                                                      "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                                    },
                                                  ],
                                                  "Version": "2012-10-17",
                                                },
                                                "policyName": "\${Token[TOKEN.20]}",
                                                "rawOverrides": {},
                                                "roles": [
                                                  "#{Token[TOKEN.21]}",
                                                ],
                                                "stack": [Circular],
                                                "users": [
                                                  "#{Token[TOKEN.22]}",
                                                ],
                                                Symbol(@aws-cdk/core.DependableTrait): {
                                                  "dependencyRoots": [
                                                    [Circular],
                                                  ],
                                                },
                                              },
                                            },
                                            "_context": {},
                                            "_dependencies": Set {},
                                            "_locked": false,
                                            "_metadata": [],
                                            "_validations": [
                                              {
                                                "validate": [Function],
                                              },
                                            ],
                                            "host": [Circular],
                                            "id": "DefaultPolicy",
                                            "scope": [Circular],
                                          },
                                          "physicalName": "\${Token[TOKEN.20]}",
                                          "referenceTaken": false,
                                          "roles": [
                                            [Circular],
                                          ],
                                          "stack": [Circular],
                                          "users": [],
                                          Symbol(@aws-cdk/core.DependableTrait): {
                                            "dependencyRoots": [
                                              [Circular],
                                            ],
                                          },
                                        },
                                        "ImportCreateGitopsSecretLambda": ImportedRole {
                                          "_allowCrossEnvironment": false,
                                          "_physicalName": undefined,
                                          "assumeRoleAction": "sts:AssumeRole",
                                          "attachedPolicies": AttachedPolicies {
                                            "policies": [],
                                          },
                                          "defaultPolicyName": undefined,
                                          "env": {
                                            "account": "\${Token[AWS.AccountId.2]}",
                                            "region": "\${Token[AWS.Region.6]}",
                                          },
                                          "grantPrincipal": [Circular],
                                          "node": Node {
                                            "_children": {},
                                            "_context": {},
                                            "_dependencies": Set {},
                                            "_locked": false,
                                            "_metadata": [],
                                            "_validations": [],
                                            "host": [Circular],
                                            "id": "ImportCreateGitopsSecretLambda",
                                            "scope": [Circular],
                                          },
                                          "physicalName": "\${Token[TOKEN.12]}",
                                          "policyFragment": PrincipalPolicyFragment {
                                            "conditions": {},
                                            "principalJson": {
                                              "AWS": [
                                                "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                                              ],
                                            },
                                          },
                                          "principalAccount": "\${Token[AWS.AccountId.2]}",
                                          "roleArn": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                                          "roleName": "CreateGitopsSecretLambda",
                                          "stack": [Circular],
                                          Symbol(@aws-cdk/core.DependableTrait): {
                                            "dependencyRoots": [
                                              [Circular],
                                            ],
                                          },
                                        },
                                        "Resource": CfnRole {
                                          "_cfnProperties": {
                                            "assumeRolePolicyDocument": {
                                              "Statement": [
                                                {
                                                  "Action": "sts:AssumeRole",
                                                  "Effect": "Allow",
                                                  "Principal": {
                                                    "Service": "\${Token[lambda.amazonaws.com.11]}",
                                                  },
                                                },
                                              ],
                                              "Version": "2012-10-17",
                                            },
                                            "description": "AWS Accelerator assets access role in workload accounts to bootstrap gitops credentials",
                                            "managedPolicyArns": [
                                              "#{Token[TOKEN.13]}",
                                            ],
                                            "maxSessionDuration": undefined,
                                            "path": undefined,
                                            "permissionsBoundary": undefined,
                                            "policies": undefined,
                                            "roleName": "AWSLambdaBasicExecutionRole-codeCommitSecret",
                                          },
                                          "assumeRolePolicyDocument": {
                                            "Statement": [
                                              {
                                                "Action": "sts:AssumeRole",
                                                "Effect": "Allow",
                                                "Principal": {
                                                  "Service": "\${Token[lambda.amazonaws.com.11]}",
                                                },
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "attrArn": "\${Token[TOKEN.15]}",
                                          "attrRoleId": "\${Token[TOKEN.16]}",
                                          "cfnOptions": {},
                                          "cfnResourceType": "AWS::IAM::Role",
                                          "dependsOn": Set {},
                                          "description": "AWS Accelerator assets access role in workload accounts to bootstrap gitops credentials",
                                          "logicalId": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.Resource.LogicalID.14]}",
                                          "managedPolicyArns": [
                                            "#{Token[TOKEN.13]}",
                                          ],
                                          "maxSessionDuration": undefined,
                                          "node": Node {
                                            "_children": {},
                                            "_context": {},
                                            "_dependencies": Set {},
                                            "_locked": false,
                                            "_metadata": [
                                              {
                                                "data": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.Resource.LogicalID.14]}",
                                                "trace": undefined,
                                                "type": "aws:cdk:logicalId",
                                              },
                                            ],
                                            "_validations": [],
                                            "host": [Circular],
                                            "id": "Resource",
                                            "scope": [Circular],
                                          },
                                          "path": undefined,
                                          "permissionsBoundary": undefined,
                                          "policies": undefined,
                                          "rawOverrides": {},
                                          "roleName": "AWSLambdaBasicExecutionRole-codeCommitSecret",
                                          "stack": [Circular],
                                          "tags": TagManager {
                                            "initialTagPriority": 50,
                                            "priorities": Map {},
                                            "renderedTags": "<unresolved-lazy>",
                                            "resourceTypeName": "AWS::IAM::Role",
                                            "tagFormatter": StandardFormatter {},
                                            "tagPropertyName": "tags",
                                            "tags": Map {},
                                          },
                                          Symbol(@aws-cdk/core.DependableTrait): {
                                            "dependencyRoots": [
                                              [Circular],
                                            ],
                                          },
                                        },
                                      },
                                      "_context": {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": [],
                                      "_validations": [
                                        {
                                          "validate": [Function],
                                        },
                                      ],
                                      "host": [Circular],
                                      "id": "CreateGitopsSecretLambda",
                                      "scope": [Circular],
                                    },
                                    "permissionsBoundary": undefined,
                                    "physicalName": "AWSLambdaBasicExecutionRole-codeCommitSecret",
                                    "policyFragment": PrincipalPolicyFragment {
                                      "conditions": {},
                                      "principalJson": {
                                        "AWS": [
                                          "\${Token[TOKEN.17]}",
                                        ],
                                      },
                                    },
                                    "principalAccount": "\${Token[AWS.AccountId.2]}",
                                    "roleArn": "\${Token[TOKEN.17]}",
                                    "roleName": "\${Token[TOKEN.19]}",
                                    "stack": [Circular],
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [
                                        [Circular],
                                      ],
                                    },
                                  },
                                },
                                "_locked": false,
                                "_metadata": [
                                  {
                                    "data": "\${Token[Default.codeCommitSecret.Function.Resource.LogicalID.652]}",
                                    "trace": undefined,
                                    "type": "aws:cdk:logicalId",
                                  },
                                ],
                                "_validations": [],
                                "host": [Circular],
                                "id": "Resource",
                                "scope": [Circular],
                              },
                              "packageType": undefined,
                              "rawOverrides": {},
                              "reservedConcurrentExecutions": undefined,
                              "role": "\${Token[TOKEN.17]}",
                              "runtime": "nodejs18.x",
                              "runtimeManagementConfig": undefined,
                              "snapStart": undefined,
                              "stack": [Circular],
                              "tags": TagManager {
                                "initialTagPriority": 50,
                                "priorities": Map {},
                                "renderedTags": "<unresolved-lazy>",
                                "resourceTypeName": "AWS::Lambda::Function",
                                "tagFormatter": StandardFormatter {},
                                "tagPropertyName": "tags",
                                "tags": Map {},
                              },
                              "timeout": 900,
                              "tracingConfig": undefined,
                              "vpcConfig": undefined,
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [
                                  [Circular],
                                ],
                              },
                            },
                          },
                          "_context": {},
                          "_dependencies": Set {},
                          "_locked": false,
                          "_metadata": [],
                          "_validations": [],
                          "host": [Circular],
                          "id": "Function",
                          "scope": [Circular],
                        },
                        "stack": [Circular],
                      },
                      "resourceArns": [
                        "\${Token[TOKEN.658]}",
                        "\${Token[TOKEN.658]}:*",
                      ],
                      "scope": {
                        "addToResourcePolicy": [Function],
                        "applyRemovalPolicy": [Function],
                        "env": {
                          "account": "\${Token[AWS.AccountId.2]}",
                          "region": "\${Token[AWS.Region.6]}",
                        },
                        "node": Node {
                          "_children": {
                            "Code": Asset {
                              "assetHash": "437761578112cb81b0b580e5b870f6bb63cb2ab57ec7b59e9c0cf3dd5ce02013",
                              "assetPath": "asset.437761578112cb81b0b580e5b870f6bb63cb2ab57ec7b59e9c0cf3dd5ce02013",
                              "bucket": Import {
                                "_allowCrossEnvironment": false,
                                "_physicalName": undefined,
                                "autoCreatePolicy": false,
                                "bucketArn": "arn:\${Token[AWS.Partition.5]}:s3:::\${Token[TOKEN.647]}",
                                "bucketDomainName": "\${Token[TOKEN.647]}.s3.\${Token[AWS.URLSuffix.3]}",
                                "bucketDualStackDomainName": "\${Token[TOKEN.647]}.s3.dualstack.\${Token[AWS.Region.6]}.\${Token[AWS.URLSuffix.3]}",
                                "bucketName": "\${Token[TOKEN.647]}",
                                "bucketRegionalDomainName": "\${Token[TOKEN.647]}.s3.\${Token[AWS.Region.6]}.\${Token[AWS.URLSuffix.3]}",
                                "bucketWebsiteDomainName": "\${Token[TOKEN.647]}.\${Token[TOKEN.649]}",
                                "bucketWebsiteNewUrlFormat": false,
                                "bucketWebsiteUrl": "http://\${Token[TOKEN.647]}.\${Token[TOKEN.649]}",
                                "disallowPublicAccess": false,
                                "encryptionKey": undefined,
                                "env": {
                                  "account": "\${Token[AWS.AccountId.2]}",
                                  "region": "\${Token[AWS.Region.6]}",
                                },
                                "isWebsite": false,
                                "node": Node {
                                  "_children": {},
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [],
                                  "_validations": [
                                    {
                                      "validate": [Function],
                                    },
                                  ],
                                  "host": [Circular],
                                  "id": "AssetBucket",
                                  "scope": [Circular],
                                },
                                "notificationsHandlerRole": undefined,
                                "physicalName": "\${Token[TOKEN.650]}",
                                "policy": undefined,
                                "stack": [Circular],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                              "httpUrl": "\${Token[TOKEN.646]}",
                              "isBundled": false,
                              "isFile": false,
                              "isZipArchive": true,
                              "node": Node {
                                "_children": {
                                  "AssetBucket": Import {
                                    "_allowCrossEnvironment": false,
                                    "_physicalName": undefined,
                                    "autoCreatePolicy": false,
                                    "bucketArn": "arn:\${Token[AWS.Partition.5]}:s3:::\${Token[TOKEN.647]}",
                                    "bucketDomainName": "\${Token[TOKEN.647]}.s3.\${Token[AWS.URLSuffix.3]}",
                                    "bucketDualStackDomainName": "\${Token[TOKEN.647]}.s3.dualstack.\${Token[AWS.Region.6]}.\${Token[AWS.URLSuffix.3]}",
                                    "bucketName": "\${Token[TOKEN.647]}",
                                    "bucketRegionalDomainName": "\${Token[TOKEN.647]}.s3.\${Token[AWS.Region.6]}.\${Token[AWS.URLSuffix.3]}",
                                    "bucketWebsiteDomainName": "\${Token[TOKEN.647]}.\${Token[TOKEN.649]}",
                                    "bucketWebsiteNewUrlFormat": false,
                                    "bucketWebsiteUrl": "http://\${Token[TOKEN.647]}.\${Token[TOKEN.649]}",
                                    "disallowPublicAccess": false,
                                    "encryptionKey": undefined,
                                    "env": {
                                      "account": "\${Token[AWS.AccountId.2]}",
                                      "region": "\${Token[AWS.Region.6]}",
                                    },
                                    "isWebsite": false,
                                    "node": Node {
                                      "_children": {},
                                      "_context": {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": [],
                                      "_validations": [
                                        {
                                          "validate": [Function],
                                        },
                                      ],
                                      "host": [Circular],
                                      "id": "AssetBucket",
                                      "scope": [Circular],
                                    },
                                    "notificationsHandlerRole": undefined,
                                    "physicalName": "\${Token[TOKEN.650]}",
                                    "policy": undefined,
                                    "stack": [Circular],
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [
                                        [Circular],
                                      ],
                                    },
                                  },
                                  "Stage": AssetStaging {
                                    "absoluteStagedPath": "/private/var/folders/tn/799yyvm92g74fj_thj2z7w140000gr/T/cdk-test-app-WFT8EN/asset.437761578112cb81b0b580e5b870f6bb63cb2ab57ec7b59e9c0cf3dd5ce02013",
                                    "assetHash": "437761578112cb81b0b580e5b870f6bb63cb2ab57ec7b59e9c0cf3dd5ce02013",
                                    "assetOutdir": "/private/var/folders/tn/799yyvm92g74fj_thj2z7w140000gr/T/cdk-test-app-WFT8EN",
                                    "cacheKey": "944e1635f7fdfeb3073e35dcc76cabb302cf6e89afa2c77982bff6c3fdf3cdab",
                                    "customSourceFingerprint": undefined,
                                    "fingerprintOptions": {
                                      "assetHash": undefined,
                                      "extraHash": undefined,
                                      "follow": undefined,
                                      "path": "/Users/rverma/dev/aws/nsl-saas-accelerator/packages/constructs/lib/aws-codecommit/lambda-codecommit-secret/dist",
                                      "sourcePath": "/Users/rverma/dev/aws/nsl-saas-accelerator/packages/constructs/lib/aws-codecommit/lambda-codecommit-secret/dist",
                                    },
                                    "hashType": "source",
                                    "isArchive": true,
                                    "node": Node {
                                      "_children": {},
                                      "_context": {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": [],
                                      "_validations": [],
                                      "host": [Circular],
                                      "id": "Stage",
                                      "scope": [Circular],
                                    },
                                    "packaging": "zip",
                                    "sourcePath": "/Users/rverma/dev/aws/nsl-saas-accelerator/packages/constructs/lib/aws-codecommit/lambda-codecommit-secret/dist",
                                    "sourceStats": Stats {
                                      "atime": 2023-04-19T09:28:15.189Z,
                                      "atimeMs": 1681896495189.284,
                                      "birthtime": 2023-04-18T10:17:45.917Z,
                                      "birthtimeMs": 1681813065916.9114,
                                      "blksize": 4096,
                                      "blocks": 0,
                                      "ctime": 2023-04-19T09:28:15.155Z,
                                      "ctimeMs": 1681896495155.161,
                                      "dev": 16777233,
                                      "gid": 20,
                                      "ino": 64257818,
                                      "mode": 16877,
                                      "mtime": 2023-04-19T09:28:15.155Z,
                                      "mtimeMs": 1681896495155.161,
                                      "nlink": 4,
                                      "rdev": 0,
                                      "size": 128,
                                      "uid": 504,
                                    },
                                    "stagedPath": "/private/var/folders/tn/799yyvm92g74fj_thj2z7w140000gr/T/cdk-test-app-WFT8EN/asset.437761578112cb81b0b580e5b870f6bb63cb2ab57ec7b59e9c0cf3dd5ce02013",
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [
                                        [Circular],
                                      ],
                                    },
                                  },
                                },
                                "_context": {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": [],
                                "_validations": [],
                                "host": [Circular],
                                "id": "Code",
                                "scope": [Circular],
                              },
                              "s3BucketName": "\${Token[TOKEN.647]}",
                              "s3ObjectKey": "REPLACED-GENERATED-NAME.zip",
                              "s3ObjectUrl": "\${Token[TOKEN.648]}",
                              "s3Url": "\${Token[TOKEN.646]}",
                              "sourceHash": "437761578112cb81b0b580e5b870f6bb63cb2ab57ec7b59e9c0cf3dd5ce02013",
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [
                                  [Circular],
                                ],
                              },
                            },
                            "Resource": CfnFunction {
                              "_cfnProperties": {
                                "architectures": undefined,
                                "code": {
                                  "imageUri": undefined,
                                  "s3Bucket": "\${Token[TOKEN.647]}",
                                  "s3Key": "REPLACED-GENERATED-NAME.zip",
                                  "s3ObjectVersion": undefined,
                                  "zipFile": undefined,
                                },
                                "codeSigningConfigArn": undefined,
                                "deadLetterConfig": undefined,
                                "description": "Create Gitops Secret",
                                "environment": "<unresolved-lazy>",
                                "ephemeralStorage": undefined,
                                "fileSystemConfigs": undefined,
                                "functionName": "\${Token[TOKEN.645]}",
                                "handler": "index.handler",
                                "imageConfig": undefined,
                                "kmsKeyArn": undefined,
                                "layers": [
                                  "#{Token[TOKEN.651]}",
                                ],
                                "memorySize": undefined,
                                "packageType": undefined,
                                "reservedConcurrentExecutions": undefined,
                                "role": "\${Token[TOKEN.17]}",
                                "runtime": "nodejs18.x",
                                "runtimeManagementConfig": undefined,
                                "timeout": 900,
                                "vpcConfig": undefined,
                              },
                              "architectures": undefined,
                              "attrArn": "\${Token[TOKEN.653]}",
                              "attrSnapStartResponseApplyOn": "\${Token[TOKEN.654]}",
                              "attrSnapStartResponseOptimizationStatus": "\${Token[TOKEN.655]}",
                              "cfnOptions": {},
                              "cfnResourceType": "AWS::Lambda::Function",
                              "code": {
                                "imageUri": undefined,
                                "s3Bucket": "\${Token[TOKEN.647]}",
                                "s3Key": "REPLACED-GENERATED-NAME.zip",
                                "s3ObjectVersion": undefined,
                                "zipFile": undefined,
                              },
                              "codeSigningConfigArn": undefined,
                              "deadLetterConfig": undefined,
                              "dependsOn": Set {},
                              "description": "Create Gitops Secret",
                              "environment": "<unresolved-lazy>",
                              "ephemeralStorage": undefined,
                              "fileSystemConfigs": undefined,
                              "functionName": "\${Token[TOKEN.645]}",
                              "handler": "index.handler",
                              "imageConfig": undefined,
                              "kmsKeyArn": undefined,
                              "layers": [
                                "#{Token[TOKEN.651]}",
                              ],
                              "logicalId": "\${Token[Default.codeCommitSecret.Function.Resource.LogicalID.652]}",
                              "memorySize": undefined,
                              "node": Node {
                                "_children": {},
                                "_context": {},
                                "_dependencies": Set {
                                  Role {
                                    "_allowCrossEnvironment": true,
                                    "_didSplit": false,
                                    "_physicalName": "AWSLambdaBasicExecutionRole-codeCommitSecret",
                                    "_roleId": "\${Token[TOKEN.16]}",
                                    "assumeRoleAction": "sts:AssumeRole",
                                    "assumeRolePolicy": {
                                      "Statement": [
                                        {
                                          "Action": "sts:AssumeRole",
                                          "Effect": "Allow",
                                          "Principal": {
                                            "Service": "\${Token[lambda.amazonaws.com.11]}",
                                          },
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "attachedPolicies": AttachedPolicies {
                                      "policies": [
                                        Policy {
                                          "_allowCrossEnvironment": false,
                                          "_physicalName": "\${Token[TOKEN.20]}",
                                          "_policyName": "\${Token[TOKEN.20]}",
                                          "document": {
                                            "Statement": [
                                              {
                                                "Action": "logs:CreateLogGroup",
                                                "Effect": "Allow",
                                                "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                              },
                                              {
                                                "Action": "secretsmanager:*",
                                                "Effect": "Allow",
                                                "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                              },
                                              {
                                                "Action": [
                                                  "kms:Decrypt",
                                                  "kms:DescribeKey",
                                                ],
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                              {
                                                "Action": [
                                                  "iam:CreateServiceSpecificCredential",
                                                  "iam:DeleteServiceSpecificCredential",
                                                  "iam:ListServiceSpecificCredentials",
                                                ],
                                                "Effect": "Allow",
                                                "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "env": {
                                            "account": "\${Token[AWS.AccountId.2]}",
                                            "region": "\${Token[AWS.Region.6]}",
                                          },
                                          "force": false,
                                          "grantPrincipal": PolicyGrantPrincipal {
                                            "_policy": [Circular],
                                            "assumeRoleAction": "sts:AssumeRole",
                                            "grantPrincipal": [Circular],
                                            "principalAccount": "\${Token[AWS.AccountId.2]}",
                                          },
                                          "groups": [],
                                          "node": Node {
                                            "_children": {
                                              "Resource": CfnPolicyConditional {
                                                "_cfnProperties": {
                                                  "groups": [
                                                    "#{Token[TOKEN.23]}",
                                                  ],
                                                  "policyDocument": {
                                                    "Statement": [
                                                      {
                                                        "Action": "logs:CreateLogGroup",
                                                        "Effect": "Allow",
                                                        "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                                      },
                                                      {
                                                        "Action": "secretsmanager:*",
                                                        "Effect": "Allow",
                                                        "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                                      },
                                                      {
                                                        "Action": [
                                                          "kms:Decrypt",
                                                          "kms:DescribeKey",
                                                        ],
                                                        "Effect": "Allow",
                                                        "Resource": "*",
                                                      },
                                                      {
                                                        "Action": [
                                                          "iam:CreateServiceSpecificCredential",
                                                          "iam:DeleteServiceSpecificCredential",
                                                          "iam:ListServiceSpecificCredentials",
                                                        ],
                                                        "Effect": "Allow",
                                                        "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                                      },
                                                    ],
                                                    "Version": "2012-10-17",
                                                  },
                                                  "policyName": "\${Token[TOKEN.20]}",
                                                  "roles": [
                                                    "#{Token[TOKEN.21]}",
                                                  ],
                                                  "users": [
                                                    "#{Token[TOKEN.22]}",
                                                  ],
                                                },
                                                "cfnOptions": {},
                                                "cfnResourceType": "AWS::IAM::Policy",
                                                "dependsOn": Set {},
                                                "groups": [
                                                  "#{Token[TOKEN.23]}",
                                                ],
                                                "logicalId": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                                                "node": Node {
                                                  "_children": {},
                                                  "_context": {},
                                                  "_dependencies": Set {},
                                                  "_locked": false,
                                                  "_metadata": [
                                                    {
                                                      "data": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                                                      "trace": undefined,
                                                      "type": "aws:cdk:logicalId",
                                                    },
                                                  ],
                                                  "_validations": [],
                                                  "host": [Circular],
                                                  "id": "Resource",
                                                  "scope": [Circular],
                                                },
                                                "policyDocument": {
                                                  "Statement": [
                                                    {
                                                      "Action": "logs:CreateLogGroup",
                                                      "Effect": "Allow",
                                                      "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                                    },
                                                    {
                                                      "Action": "secretsmanager:*",
                                                      "Effect": "Allow",
                                                      "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                                    },
                                                    {
                                                      "Action": [
                                                        "kms:Decrypt",
                                                        "kms:DescribeKey",
                                                      ],
                                                      "Effect": "Allow",
                                                      "Resource": "*",
                                                    },
                                                    {
                                                      "Action": [
                                                        "iam:CreateServiceSpecificCredential",
                                                        "iam:DeleteServiceSpecificCredential",
                                                        "iam:ListServiceSpecificCredentials",
                                                      ],
                                                      "Effect": "Allow",
                                                      "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                                    },
                                                  ],
                                                  "Version": "2012-10-17",
                                                },
                                                "policyName": "\${Token[TOKEN.20]}",
                                                "rawOverrides": {},
                                                "roles": [
                                                  "#{Token[TOKEN.21]}",
                                                ],
                                                "stack": [Circular],
                                                "users": [
                                                  "#{Token[TOKEN.22]}",
                                                ],
                                                Symbol(@aws-cdk/core.DependableTrait): {
                                                  "dependencyRoots": [
                                                    [Circular],
                                                  ],
                                                },
                                              },
                                            },
                                            "_context": {},
                                            "_dependencies": Set {},
                                            "_locked": false,
                                            "_metadata": [],
                                            "_validations": [
                                              {
                                                "validate": [Function],
                                              },
                                            ],
                                            "host": [Circular],
                                            "id": "DefaultPolicy",
                                            "scope": [Circular],
                                          },
                                          "physicalName": "\${Token[TOKEN.20]}",
                                          "referenceTaken": false,
                                          "roles": [
                                            [Circular],
                                          ],
                                          "stack": [Circular],
                                          "users": [],
                                          Symbol(@aws-cdk/core.DependableTrait): {
                                            "dependencyRoots": [
                                              [Circular],
                                            ],
                                          },
                                        },
                                      ],
                                    },
                                    "defaultPolicy": Policy {
                                      "_allowCrossEnvironment": false,
                                      "_physicalName": "\${Token[TOKEN.20]}",
                                      "_policyName": "\${Token[TOKEN.20]}",
                                      "document": {
                                        "Statement": [
                                          {
                                            "Action": "logs:CreateLogGroup",
                                            "Effect": "Allow",
                                            "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                          },
                                          {
                                            "Action": "secretsmanager:*",
                                            "Effect": "Allow",
                                            "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                          },
                                          {
                                            "Action": [
                                              "kms:Decrypt",
                                              "kms:DescribeKey",
                                            ],
                                            "Effect": "Allow",
                                            "Resource": "*",
                                          },
                                          {
                                            "Action": [
                                              "iam:CreateServiceSpecificCredential",
                                              "iam:DeleteServiceSpecificCredential",
                                              "iam:ListServiceSpecificCredentials",
                                            ],
                                            "Effect": "Allow",
                                            "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "env": {
                                        "account": "\${Token[AWS.AccountId.2]}",
                                        "region": "\${Token[AWS.Region.6]}",
                                      },
                                      "force": false,
                                      "grantPrincipal": PolicyGrantPrincipal {
                                        "_policy": [Circular],
                                        "assumeRoleAction": "sts:AssumeRole",
                                        "grantPrincipal": [Circular],
                                        "principalAccount": "\${Token[AWS.AccountId.2]}",
                                      },
                                      "groups": [],
                                      "node": Node {
                                        "_children": {
                                          "Resource": CfnPolicyConditional {
                                            "_cfnProperties": {
                                              "groups": [
                                                "#{Token[TOKEN.23]}",
                                              ],
                                              "policyDocument": {
                                                "Statement": [
                                                  {
                                                    "Action": "logs:CreateLogGroup",
                                                    "Effect": "Allow",
                                                    "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                                  },
                                                  {
                                                    "Action": "secretsmanager:*",
                                                    "Effect": "Allow",
                                                    "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                                  },
                                                  {
                                                    "Action": [
                                                      "kms:Decrypt",
                                                      "kms:DescribeKey",
                                                    ],
                                                    "Effect": "Allow",
                                                    "Resource": "*",
                                                  },
                                                  {
                                                    "Action": [
                                                      "iam:CreateServiceSpecificCredential",
                                                      "iam:DeleteServiceSpecificCredential",
                                                      "iam:ListServiceSpecificCredentials",
                                                    ],
                                                    "Effect": "Allow",
                                                    "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                                  },
                                                ],
                                                "Version": "2012-10-17",
                                              },
                                              "policyName": "\${Token[TOKEN.20]}",
                                              "roles": [
                                                "#{Token[TOKEN.21]}",
                                              ],
                                              "users": [
                                                "#{Token[TOKEN.22]}",
                                              ],
                                            },
                                            "cfnOptions": {},
                                            "cfnResourceType": "AWS::IAM::Policy",
                                            "dependsOn": Set {},
                                            "groups": [
                                              "#{Token[TOKEN.23]}",
                                            ],
                                            "logicalId": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                                            "node": Node {
                                              "_children": {},
                                              "_context": {},
                                              "_dependencies": Set {},
                                              "_locked": false,
                                              "_metadata": [
                                                {
                                                  "data": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                                                  "trace": undefined,
                                                  "type": "aws:cdk:logicalId",
                                                },
                                              ],
                                              "_validations": [],
                                              "host": [Circular],
                                              "id": "Resource",
                                              "scope": [Circular],
                                            },
                                            "policyDocument": {
                                              "Statement": [
                                                {
                                                  "Action": "logs:CreateLogGroup",
                                                  "Effect": "Allow",
                                                  "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                                },
                                                {
                                                  "Action": "secretsmanager:*",
                                                  "Effect": "Allow",
                                                  "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                                },
                                                {
                                                  "Action": [
                                                    "kms:Decrypt",
                                                    "kms:DescribeKey",
                                                  ],
                                                  "Effect": "Allow",
                                                  "Resource": "*",
                                                },
                                                {
                                                  "Action": [
                                                    "iam:CreateServiceSpecificCredential",
                                                    "iam:DeleteServiceSpecificCredential",
                                                    "iam:ListServiceSpecificCredentials",
                                                  ],
                                                  "Effect": "Allow",
                                                  "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                                },
                                              ],
                                              "Version": "2012-10-17",
                                            },
                                            "policyName": "\${Token[TOKEN.20]}",
                                            "rawOverrides": {},
                                            "roles": [
                                              "#{Token[TOKEN.21]}",
                                            ],
                                            "stack": [Circular],
                                            "users": [
                                              "#{Token[TOKEN.22]}",
                                            ],
                                            Symbol(@aws-cdk/core.DependableTrait): {
                                              "dependencyRoots": [
                                                [Circular],
                                              ],
                                            },
                                          },
                                        },
                                        "_context": {},
                                        "_dependencies": Set {},
                                        "_locked": false,
                                        "_metadata": [],
                                        "_validations": [
                                          {
                                            "validate": [Function],
                                          },
                                        ],
                                        "host": [Circular],
                                        "id": "DefaultPolicy",
                                        "scope": [Circular],
                                      },
                                      "physicalName": "\${Token[TOKEN.20]}",
                                      "referenceTaken": false,
                                      "roles": [
                                        [Circular],
                                      ],
                                      "stack": [Circular],
                                      "users": [],
                                      Symbol(@aws-cdk/core.DependableTrait): {
                                        "dependencyRoots": [
                                          [Circular],
                                        ],
                                      },
                                    },
                                    "dependables": Map {
                                      {
                                        "Action": "logs:CreateLogGroup",
                                        "Effect": "Allow",
                                        "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                      } => DependencyGroup {
                                        "_deps": [],
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [],
                                        },
                                      },
                                      {
                                        "Action": "secretsmanager:*",
                                        "Effect": "Allow",
                                        "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                      } => DependencyGroup {
                                        "_deps": [],
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [],
                                        },
                                      },
                                      {
                                        "Action": [
                                          "kms:Decrypt",
                                          "kms:DescribeKey",
                                        ],
                                        "Effect": "Allow",
                                        "Resource": "*",
                                      } => DependencyGroup {
                                        "_deps": [],
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [],
                                        },
                                      },
                                      {
                                        "Action": [
                                          "iam:CreateServiceSpecificCredential",
                                          "iam:DeleteServiceSpecificCredential",
                                          "iam:ListServiceSpecificCredentials",
                                        ],
                                        "Effect": "Allow",
                                        "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                      } => DependencyGroup {
                                        "_deps": [],
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [],
                                        },
                                      },
                                    },
                                    "env": {
                                      "account": "\${Token[AWS.AccountId.2]}",
                                      "region": "\${Token[AWS.Region.6]}",
                                    },
                                    "grantPrincipal": [Circular],
                                    "inlinePolicies": {},
                                    "managedPolicies": [
                                      AwsManagedPolicy {
                                        "managedPolicyArn": "arn:\${Token[AWS.Partition.5]}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                                      },
                                    ],
                                    "node": Node {
                                      "_children": {
                                        "DefaultPolicy": Policy {
                                          "_allowCrossEnvironment": false,
                                          "_physicalName": "\${Token[TOKEN.20]}",
                                          "_policyName": "\${Token[TOKEN.20]}",
                                          "document": {
                                            "Statement": [
                                              {
                                                "Action": "logs:CreateLogGroup",
                                                "Effect": "Allow",
                                                "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                              },
                                              {
                                                "Action": "secretsmanager:*",
                                                "Effect": "Allow",
                                                "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                              },
                                              {
                                                "Action": [
                                                  "kms:Decrypt",
                                                  "kms:DescribeKey",
                                                ],
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                              {
                                                "Action": [
                                                  "iam:CreateServiceSpecificCredential",
                                                  "iam:DeleteServiceSpecificCredential",
                                                  "iam:ListServiceSpecificCredentials",
                                                ],
                                                "Effect": "Allow",
                                                "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "env": {
                                            "account": "\${Token[AWS.AccountId.2]}",
                                            "region": "\${Token[AWS.Region.6]}",
                                          },
                                          "force": false,
                                          "grantPrincipal": PolicyGrantPrincipal {
                                            "_policy": [Circular],
                                            "assumeRoleAction": "sts:AssumeRole",
                                            "grantPrincipal": [Circular],
                                            "principalAccount": "\${Token[AWS.AccountId.2]}",
                                          },
                                          "groups": [],
                                          "node": Node {
                                            "_children": {
                                              "Resource": CfnPolicyConditional {
                                                "_cfnProperties": {
                                                  "groups": [
                                                    "#{Token[TOKEN.23]}",
                                                  ],
                                                  "policyDocument": {
                                                    "Statement": [
                                                      {
                                                        "Action": "logs:CreateLogGroup",
                                                        "Effect": "Allow",
                                                        "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                                      },
                                                      {
                                                        "Action": "secretsmanager:*",
                                                        "Effect": "Allow",
                                                        "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                                      },
                                                      {
                                                        "Action": [
                                                          "kms:Decrypt",
                                                          "kms:DescribeKey",
                                                        ],
                                                        "Effect": "Allow",
                                                        "Resource": "*",
                                                      },
                                                      {
                                                        "Action": [
                                                          "iam:CreateServiceSpecificCredential",
                                                          "iam:DeleteServiceSpecificCredential",
                                                          "iam:ListServiceSpecificCredentials",
                                                        ],
                                                        "Effect": "Allow",
                                                        "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                                      },
                                                    ],
                                                    "Version": "2012-10-17",
                                                  },
                                                  "policyName": "\${Token[TOKEN.20]}",
                                                  "roles": [
                                                    "#{Token[TOKEN.21]}",
                                                  ],
                                                  "users": [
                                                    "#{Token[TOKEN.22]}",
                                                  ],
                                                },
                                                "cfnOptions": {},
                                                "cfnResourceType": "AWS::IAM::Policy",
                                                "dependsOn": Set {},
                                                "groups": [
                                                  "#{Token[TOKEN.23]}",
                                                ],
                                                "logicalId": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                                                "node": Node {
                                                  "_children": {},
                                                  "_context": {},
                                                  "_dependencies": Set {},
                                                  "_locked": false,
                                                  "_metadata": [
                                                    {
                                                      "data": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                                                      "trace": undefined,
                                                      "type": "aws:cdk:logicalId",
                                                    },
                                                  ],
                                                  "_validations": [],
                                                  "host": [Circular],
                                                  "id": "Resource",
                                                  "scope": [Circular],
                                                },
                                                "policyDocument": {
                                                  "Statement": [
                                                    {
                                                      "Action": "logs:CreateLogGroup",
                                                      "Effect": "Allow",
                                                      "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                                    },
                                                    {
                                                      "Action": "secretsmanager:*",
                                                      "Effect": "Allow",
                                                      "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                                    },
                                                    {
                                                      "Action": [
                                                        "kms:Decrypt",
                                                        "kms:DescribeKey",
                                                      ],
                                                      "Effect": "Allow",
                                                      "Resource": "*",
                                                    },
                                                    {
                                                      "Action": [
                                                        "iam:CreateServiceSpecificCredential",
                                                        "iam:DeleteServiceSpecificCredential",
                                                        "iam:ListServiceSpecificCredentials",
                                                      ],
                                                      "Effect": "Allow",
                                                      "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                                    },
                                                  ],
                                                  "Version": "2012-10-17",
                                                },
                                                "policyName": "\${Token[TOKEN.20]}",
                                                "rawOverrides": {},
                                                "roles": [
                                                  "#{Token[TOKEN.21]}",
                                                ],
                                                "stack": [Circular],
                                                "users": [
                                                  "#{Token[TOKEN.22]}",
                                                ],
                                                Symbol(@aws-cdk/core.DependableTrait): {
                                                  "dependencyRoots": [
                                                    [Circular],
                                                  ],
                                                },
                                              },
                                            },
                                            "_context": {},
                                            "_dependencies": Set {},
                                            "_locked": false,
                                            "_metadata": [],
                                            "_validations": [
                                              {
                                                "validate": [Function],
                                              },
                                            ],
                                            "host": [Circular],
                                            "id": "DefaultPolicy",
                                            "scope": [Circular],
                                          },
                                          "physicalName": "\${Token[TOKEN.20]}",
                                          "referenceTaken": false,
                                          "roles": [
                                            [Circular],
                                          ],
                                          "stack": [Circular],
                                          "users": [],
                                          Symbol(@aws-cdk/core.DependableTrait): {
                                            "dependencyRoots": [
                                              [Circular],
                                            ],
                                          },
                                        },
                                        "ImportCreateGitopsSecretLambda": ImportedRole {
                                          "_allowCrossEnvironment": false,
                                          "_physicalName": undefined,
                                          "assumeRoleAction": "sts:AssumeRole",
                                          "attachedPolicies": AttachedPolicies {
                                            "policies": [],
                                          },
                                          "defaultPolicyName": undefined,
                                          "env": {
                                            "account": "\${Token[AWS.AccountId.2]}",
                                            "region": "\${Token[AWS.Region.6]}",
                                          },
                                          "grantPrincipal": [Circular],
                                          "node": Node {
                                            "_children": {},
                                            "_context": {},
                                            "_dependencies": Set {},
                                            "_locked": false,
                                            "_metadata": [],
                                            "_validations": [],
                                            "host": [Circular],
                                            "id": "ImportCreateGitopsSecretLambda",
                                            "scope": [Circular],
                                          },
                                          "physicalName": "\${Token[TOKEN.12]}",
                                          "policyFragment": PrincipalPolicyFragment {
                                            "conditions": {},
                                            "principalJson": {
                                              "AWS": [
                                                "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                                              ],
                                            },
                                          },
                                          "principalAccount": "\${Token[AWS.AccountId.2]}",
                                          "roleArn": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                                          "roleName": "CreateGitopsSecretLambda",
                                          "stack": [Circular],
                                          Symbol(@aws-cdk/core.DependableTrait): {
                                            "dependencyRoots": [
                                              [Circular],
                                            ],
                                          },
                                        },
                                        "Resource": CfnRole {
                                          "_cfnProperties": {
                                            "assumeRolePolicyDocument": {
                                              "Statement": [
                                                {
                                                  "Action": "sts:AssumeRole",
                                                  "Effect": "Allow",
                                                  "Principal": {
                                                    "Service": "\${Token[lambda.amazonaws.com.11]}",
                                                  },
                                                },
                                              ],
                                              "Version": "2012-10-17",
                                            },
                                            "description": "AWS Accelerator assets access role in workload accounts to bootstrap gitops credentials",
                                            "managedPolicyArns": [
                                              "#{Token[TOKEN.13]}",
                                            ],
                                            "maxSessionDuration": undefined,
                                            "path": undefined,
                                            "permissionsBoundary": undefined,
                                            "policies": undefined,
                                            "roleName": "AWSLambdaBasicExecutionRole-codeCommitSecret",
                                          },
                                          "assumeRolePolicyDocument": {
                                            "Statement": [
                                              {
                                                "Action": "sts:AssumeRole",
                                                "Effect": "Allow",
                                                "Principal": {
                                                  "Service": "\${Token[lambda.amazonaws.com.11]}",
                                                },
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "attrArn": "\${Token[TOKEN.15]}",
                                          "attrRoleId": "\${Token[TOKEN.16]}",
                                          "cfnOptions": {},
                                          "cfnResourceType": "AWS::IAM::Role",
                                          "dependsOn": Set {},
                                          "description": "AWS Accelerator assets access role in workload accounts to bootstrap gitops credentials",
                                          "logicalId": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.Resource.LogicalID.14]}",
                                          "managedPolicyArns": [
                                            "#{Token[TOKEN.13]}",
                                          ],
                                          "maxSessionDuration": undefined,
                                          "node": Node {
                                            "_children": {},
                                            "_context": {},
                                            "_dependencies": Set {},
                                            "_locked": false,
                                            "_metadata": [
                                              {
                                                "data": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.Resource.LogicalID.14]}",
                                                "trace": undefined,
                                                "type": "aws:cdk:logicalId",
                                              },
                                            ],
                                            "_validations": [],
                                            "host": [Circular],
                                            "id": "Resource",
                                            "scope": [Circular],
                                          },
                                          "path": undefined,
                                          "permissionsBoundary": undefined,
                                          "policies": undefined,
                                          "rawOverrides": {},
                                          "roleName": "AWSLambdaBasicExecutionRole-codeCommitSecret",
                                          "stack": [Circular],
                                          "tags": TagManager {
                                            "initialTagPriority": 50,
                                            "priorities": Map {},
                                            "renderedTags": "<unresolved-lazy>",
                                            "resourceTypeName": "AWS::IAM::Role",
                                            "tagFormatter": StandardFormatter {},
                                            "tagPropertyName": "tags",
                                            "tags": Map {},
                                          },
                                          Symbol(@aws-cdk/core.DependableTrait): {
                                            "dependencyRoots": [
                                              [Circular],
                                            ],
                                          },
                                        },
                                      },
                                      "_context": {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": [],
                                      "_validations": [
                                        {
                                          "validate": [Function],
                                        },
                                      ],
                                      "host": [Circular],
                                      "id": "CreateGitopsSecretLambda",
                                      "scope": [Circular],
                                    },
                                    "permissionsBoundary": undefined,
                                    "physicalName": "AWSLambdaBasicExecutionRole-codeCommitSecret",
                                    "policyFragment": PrincipalPolicyFragment {
                                      "conditions": {},
                                      "principalJson": {
                                        "AWS": [
                                          "\${Token[TOKEN.17]}",
                                        ],
                                      },
                                    },
                                    "principalAccount": "\${Token[AWS.AccountId.2]}",
                                    "roleArn": "\${Token[TOKEN.17]}",
                                    "roleName": "\${Token[TOKEN.19]}",
                                    "stack": [Circular],
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [
                                        [Circular],
                                      ],
                                    },
                                  },
                                },
                                "_locked": false,
                                "_metadata": [
                                  {
                                    "data": "\${Token[Default.codeCommitSecret.Function.Resource.LogicalID.652]}",
                                    "trace": undefined,
                                    "type": "aws:cdk:logicalId",
                                  },
                                ],
                                "_validations": [],
                                "host": [Circular],
                                "id": "Resource",
                                "scope": [Circular],
                              },
                              "packageType": undefined,
                              "rawOverrides": {},
                              "reservedConcurrentExecutions": undefined,
                              "role": "\${Token[TOKEN.17]}",
                              "runtime": "nodejs18.x",
                              "runtimeManagementConfig": undefined,
                              "snapStart": undefined,
                              "stack": [Circular],
                              "tags": TagManager {
                                "initialTagPriority": 50,
                                "priorities": Map {},
                                "renderedTags": "<unresolved-lazy>",
                                "resourceTypeName": "AWS::Lambda::Function",
                                "tagFormatter": StandardFormatter {},
                                "tagPropertyName": "tags",
                                "tags": Map {},
                              },
                              "timeout": 900,
                              "tracingConfig": undefined,
                              "vpcConfig": undefined,
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [
                                  [Circular],
                                ],
                              },
                            },
                          },
                          "_context": {},
                          "_dependencies": Set {},
                          "_locked": false,
                          "_metadata": [],
                          "_validations": [],
                          "host": [Circular],
                          "id": "Function",
                          "scope": [Circular],
                        },
                        "stack": [Circular],
                      },
                    },
                    "principalStatement": {
                      "Action": "lambda:InvokeFunction",
                      "Effect": "Allow",
                      "Resource": [
                        "\${Token[TOKEN.658]}",
                        "\${Token[TOKEN.658]}:*",
                      ],
                    },
                    "principalStatements": [
                      {
                        "Action": "lambda:InvokeFunction",
                        "Effect": "Allow",
                        "Resource": [
                          "\${Token[TOKEN.658]}",
                          "\${Token[TOKEN.658]}:*",
                        ],
                      },
                    ],
                    "resourceStatement": undefined,
                    "resourceStatements": [],
                    Symbol(@aws-cdk/core.DependableTrait): {
                      "dependencyRoots": [],
                    },
                  },
                },
                "_layers": [],
                "_physicalName": undefined,
                "_warnIfCurrentVersionCalled": false,
                "architecture": Architecture {
                  "dockerPlatform": "linux/amd64",
                  "name": "x86_64",
                },
                "canCreatePermissions": true,
                "currentVersionOptions": undefined,
                "env": {
                  "account": "\${Token[AWS.AccountId.2]}",
                  "region": "\${Token[AWS.Region.6]}",
                },
                "environment": {},
                "functionArn": "\${Token[TOKEN.658]}",
                "functionName": "\${Token[TOKEN.657]}",
                "grantPrincipal": Role {
                  "_allowCrossEnvironment": true,
                  "_didSplit": false,
                  "_physicalName": "AWSLambdaBasicExecutionRole-codeCommitSecret",
                  "_roleId": "\${Token[TOKEN.16]}",
                  "assumeRoleAction": "sts:AssumeRole",
                  "assumeRolePolicy": {
                    "Statement": [
                      {
                        "Action": "sts:AssumeRole",
                        "Effect": "Allow",
                        "Principal": {
                          "Service": "\${Token[lambda.amazonaws.com.11]}",
                        },
                      },
                    ],
                    "Version": "2012-10-17",
                  },
                  "attachedPolicies": AttachedPolicies {
                    "policies": [
                      Policy {
                        "_allowCrossEnvironment": false,
                        "_physicalName": "\${Token[TOKEN.20]}",
                        "_policyName": "\${Token[TOKEN.20]}",
                        "document": {
                          "Statement": [
                            {
                              "Action": "logs:CreateLogGroup",
                              "Effect": "Allow",
                              "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                            },
                            {
                              "Action": "secretsmanager:*",
                              "Effect": "Allow",
                              "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                            },
                            {
                              "Action": [
                                "kms:Decrypt",
                                "kms:DescribeKey",
                              ],
                              "Effect": "Allow",
                              "Resource": "*",
                            },
                            {
                              "Action": [
                                "iam:CreateServiceSpecificCredential",
                                "iam:DeleteServiceSpecificCredential",
                                "iam:ListServiceSpecificCredentials",
                              ],
                              "Effect": "Allow",
                              "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                            },
                          ],
                          "Version": "2012-10-17",
                        },
                        "env": {
                          "account": "\${Token[AWS.AccountId.2]}",
                          "region": "\${Token[AWS.Region.6]}",
                        },
                        "force": false,
                        "grantPrincipal": PolicyGrantPrincipal {
                          "_policy": [Circular],
                          "assumeRoleAction": "sts:AssumeRole",
                          "grantPrincipal": [Circular],
                          "principalAccount": "\${Token[AWS.AccountId.2]}",
                        },
                        "groups": [],
                        "node": Node {
                          "_children": {
                            "Resource": CfnPolicyConditional {
                              "_cfnProperties": {
                                "groups": [
                                  "#{Token[TOKEN.23]}",
                                ],
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "logs:CreateLogGroup",
                                      "Effect": "Allow",
                                      "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                    },
                                    {
                                      "Action": "secretsmanager:*",
                                      "Effect": "Allow",
                                      "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                    },
                                    {
                                      "Action": [
                                        "kms:Decrypt",
                                        "kms:DescribeKey",
                                      ],
                                      "Effect": "Allow",
                                      "Resource": "*",
                                    },
                                    {
                                      "Action": [
                                        "iam:CreateServiceSpecificCredential",
                                        "iam:DeleteServiceSpecificCredential",
                                        "iam:ListServiceSpecificCredentials",
                                      ],
                                      "Effect": "Allow",
                                      "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "policyName": "\${Token[TOKEN.20]}",
                                "roles": [
                                  "#{Token[TOKEN.21]}",
                                ],
                                "users": [
                                  "#{Token[TOKEN.22]}",
                                ],
                              },
                              "cfnOptions": {},
                              "cfnResourceType": "AWS::IAM::Policy",
                              "dependsOn": Set {},
                              "groups": [
                                "#{Token[TOKEN.23]}",
                              ],
                              "logicalId": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                              "node": Node {
                                "_children": {},
                                "_context": {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": [
                                  {
                                    "data": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                                    "trace": undefined,
                                    "type": "aws:cdk:logicalId",
                                  },
                                ],
                                "_validations": [],
                                "host": [Circular],
                                "id": "Resource",
                                "scope": [Circular],
                              },
                              "policyDocument": {
                                "Statement": [
                                  {
                                    "Action": "logs:CreateLogGroup",
                                    "Effect": "Allow",
                                    "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                  },
                                  {
                                    "Action": "secretsmanager:*",
                                    "Effect": "Allow",
                                    "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                  },
                                  {
                                    "Action": [
                                      "kms:Decrypt",
                                      "kms:DescribeKey",
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "*",
                                  },
                                  {
                                    "Action": [
                                      "iam:CreateServiceSpecificCredential",
                                      "iam:DeleteServiceSpecificCredential",
                                      "iam:ListServiceSpecificCredentials",
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                  },
                                ],
                                "Version": "2012-10-17",
                              },
                              "policyName": "\${Token[TOKEN.20]}",
                              "rawOverrides": {},
                              "roles": [
                                "#{Token[TOKEN.21]}",
                              ],
                              "stack": [Circular],
                              "users": [
                                "#{Token[TOKEN.22]}",
                              ],
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [
                                  [Circular],
                                ],
                              },
                            },
                          },
                          "_context": {},
                          "_dependencies": Set {},
                          "_locked": false,
                          "_metadata": [],
                          "_validations": [
                            {
                              "validate": [Function],
                            },
                          ],
                          "host": [Circular],
                          "id": "DefaultPolicy",
                          "scope": [Circular],
                        },
                        "physicalName": "\${Token[TOKEN.20]}",
                        "referenceTaken": false,
                        "roles": [
                          [Circular],
                        ],
                        "stack": [Circular],
                        "users": [],
                        Symbol(@aws-cdk/core.DependableTrait): {
                          "dependencyRoots": [
                            [Circular],
                          ],
                        },
                      },
                    ],
                  },
                  "defaultPolicy": Policy {
                    "_allowCrossEnvironment": false,
                    "_physicalName": "\${Token[TOKEN.20]}",
                    "_policyName": "\${Token[TOKEN.20]}",
                    "document": {
                      "Statement": [
                        {
                          "Action": "logs:CreateLogGroup",
                          "Effect": "Allow",
                          "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                        },
                        {
                          "Action": "secretsmanager:*",
                          "Effect": "Allow",
                          "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                        },
                        {
                          "Action": [
                            "kms:Decrypt",
                            "kms:DescribeKey",
                          ],
                          "Effect": "Allow",
                          "Resource": "*",
                        },
                        {
                          "Action": [
                            "iam:CreateServiceSpecificCredential",
                            "iam:DeleteServiceSpecificCredential",
                            "iam:ListServiceSpecificCredentials",
                          ],
                          "Effect": "Allow",
                          "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                        },
                      ],
                      "Version": "2012-10-17",
                    },
                    "env": {
                      "account": "\${Token[AWS.AccountId.2]}",
                      "region": "\${Token[AWS.Region.6]}",
                    },
                    "force": false,
                    "grantPrincipal": PolicyGrantPrincipal {
                      "_policy": [Circular],
                      "assumeRoleAction": "sts:AssumeRole",
                      "grantPrincipal": [Circular],
                      "principalAccount": "\${Token[AWS.AccountId.2]}",
                    },
                    "groups": [],
                    "node": Node {
                      "_children": {
                        "Resource": CfnPolicyConditional {
                          "_cfnProperties": {
                            "groups": [
                              "#{Token[TOKEN.23]}",
                            ],
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "logs:CreateLogGroup",
                                  "Effect": "Allow",
                                  "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                },
                                {
                                  "Action": "secretsmanager:*",
                                  "Effect": "Allow",
                                  "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                },
                                {
                                  "Action": [
                                    "kms:Decrypt",
                                    "kms:DescribeKey",
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*",
                                },
                                {
                                  "Action": [
                                    "iam:CreateServiceSpecificCredential",
                                    "iam:DeleteServiceSpecificCredential",
                                    "iam:ListServiceSpecificCredentials",
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                },
                              ],
                              "Version": "2012-10-17",
                            },
                            "policyName": "\${Token[TOKEN.20]}",
                            "roles": [
                              "#{Token[TOKEN.21]}",
                            ],
                            "users": [
                              "#{Token[TOKEN.22]}",
                            ],
                          },
                          "cfnOptions": {},
                          "cfnResourceType": "AWS::IAM::Policy",
                          "dependsOn": Set {},
                          "groups": [
                            "#{Token[TOKEN.23]}",
                          ],
                          "logicalId": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                          "node": Node {
                            "_children": {},
                            "_context": {},
                            "_dependencies": Set {},
                            "_locked": false,
                            "_metadata": [
                              {
                                "data": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                                "trace": undefined,
                                "type": "aws:cdk:logicalId",
                              },
                            ],
                            "_validations": [],
                            "host": [Circular],
                            "id": "Resource",
                            "scope": [Circular],
                          },
                          "policyDocument": {
                            "Statement": [
                              {
                                "Action": "logs:CreateLogGroup",
                                "Effect": "Allow",
                                "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                              },
                              {
                                "Action": "secretsmanager:*",
                                "Effect": "Allow",
                                "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                              },
                              {
                                "Action": [
                                  "kms:Decrypt",
                                  "kms:DescribeKey",
                                ],
                                "Effect": "Allow",
                                "Resource": "*",
                              },
                              {
                                "Action": [
                                  "iam:CreateServiceSpecificCredential",
                                  "iam:DeleteServiceSpecificCredential",
                                  "iam:ListServiceSpecificCredentials",
                                ],
                                "Effect": "Allow",
                                "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                              },
                            ],
                            "Version": "2012-10-17",
                          },
                          "policyName": "\${Token[TOKEN.20]}",
                          "rawOverrides": {},
                          "roles": [
                            "#{Token[TOKEN.21]}",
                          ],
                          "stack": [Circular],
                          "users": [
                            "#{Token[TOKEN.22]}",
                          ],
                          Symbol(@aws-cdk/core.DependableTrait): {
                            "dependencyRoots": [
                              [Circular],
                            ],
                          },
                        },
                      },
                      "_context": {},
                      "_dependencies": Set {},
                      "_locked": false,
                      "_metadata": [],
                      "_validations": [
                        {
                          "validate": [Function],
                        },
                      ],
                      "host": [Circular],
                      "id": "DefaultPolicy",
                      "scope": [Circular],
                    },
                    "physicalName": "\${Token[TOKEN.20]}",
                    "referenceTaken": false,
                    "roles": [
                      [Circular],
                    ],
                    "stack": [Circular],
                    "users": [],
                    Symbol(@aws-cdk/core.DependableTrait): {
                      "dependencyRoots": [
                        [Circular],
                      ],
                    },
                  },
                  "dependables": Map {
                    {
                      "Action": "logs:CreateLogGroup",
                      "Effect": "Allow",
                      "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                    } => DependencyGroup {
                      "_deps": [],
                      Symbol(@aws-cdk/core.DependableTrait): {
                        "dependencyRoots": [],
                      },
                    },
                    {
                      "Action": "secretsmanager:*",
                      "Effect": "Allow",
                      "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                    } => DependencyGroup {
                      "_deps": [],
                      Symbol(@aws-cdk/core.DependableTrait): {
                        "dependencyRoots": [],
                      },
                    },
                    {
                      "Action": [
                        "kms:Decrypt",
                        "kms:DescribeKey",
                      ],
                      "Effect": "Allow",
                      "Resource": "*",
                    } => DependencyGroup {
                      "_deps": [],
                      Symbol(@aws-cdk/core.DependableTrait): {
                        "dependencyRoots": [],
                      },
                    },
                    {
                      "Action": [
                        "iam:CreateServiceSpecificCredential",
                        "iam:DeleteServiceSpecificCredential",
                        "iam:ListServiceSpecificCredentials",
                      ],
                      "Effect": "Allow",
                      "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                    } => DependencyGroup {
                      "_deps": [],
                      Symbol(@aws-cdk/core.DependableTrait): {
                        "dependencyRoots": [],
                      },
                    },
                  },
                  "env": {
                    "account": "\${Token[AWS.AccountId.2]}",
                    "region": "\${Token[AWS.Region.6]}",
                  },
                  "grantPrincipal": [Circular],
                  "inlinePolicies": {},
                  "managedPolicies": [
                    AwsManagedPolicy {
                      "managedPolicyArn": "arn:\${Token[AWS.Partition.5]}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                    },
                  ],
                  "node": Node {
                    "_children": {
                      "DefaultPolicy": Policy {
                        "_allowCrossEnvironment": false,
                        "_physicalName": "\${Token[TOKEN.20]}",
                        "_policyName": "\${Token[TOKEN.20]}",
                        "document": {
                          "Statement": [
                            {
                              "Action": "logs:CreateLogGroup",
                              "Effect": "Allow",
                              "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                            },
                            {
                              "Action": "secretsmanager:*",
                              "Effect": "Allow",
                              "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                            },
                            {
                              "Action": [
                                "kms:Decrypt",
                                "kms:DescribeKey",
                              ],
                              "Effect": "Allow",
                              "Resource": "*",
                            },
                            {
                              "Action": [
                                "iam:CreateServiceSpecificCredential",
                                "iam:DeleteServiceSpecificCredential",
                                "iam:ListServiceSpecificCredentials",
                              ],
                              "Effect": "Allow",
                              "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                            },
                          ],
                          "Version": "2012-10-17",
                        },
                        "env": {
                          "account": "\${Token[AWS.AccountId.2]}",
                          "region": "\${Token[AWS.Region.6]}",
                        },
                        "force": false,
                        "grantPrincipal": PolicyGrantPrincipal {
                          "_policy": [Circular],
                          "assumeRoleAction": "sts:AssumeRole",
                          "grantPrincipal": [Circular],
                          "principalAccount": "\${Token[AWS.AccountId.2]}",
                        },
                        "groups": [],
                        "node": Node {
                          "_children": {
                            "Resource": CfnPolicyConditional {
                              "_cfnProperties": {
                                "groups": [
                                  "#{Token[TOKEN.23]}",
                                ],
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "logs:CreateLogGroup",
                                      "Effect": "Allow",
                                      "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                    },
                                    {
                                      "Action": "secretsmanager:*",
                                      "Effect": "Allow",
                                      "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                    },
                                    {
                                      "Action": [
                                        "kms:Decrypt",
                                        "kms:DescribeKey",
                                      ],
                                      "Effect": "Allow",
                                      "Resource": "*",
                                    },
                                    {
                                      "Action": [
                                        "iam:CreateServiceSpecificCredential",
                                        "iam:DeleteServiceSpecificCredential",
                                        "iam:ListServiceSpecificCredentials",
                                      ],
                                      "Effect": "Allow",
                                      "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "policyName": "\${Token[TOKEN.20]}",
                                "roles": [
                                  "#{Token[TOKEN.21]}",
                                ],
                                "users": [
                                  "#{Token[TOKEN.22]}",
                                ],
                              },
                              "cfnOptions": {},
                              "cfnResourceType": "AWS::IAM::Policy",
                              "dependsOn": Set {},
                              "groups": [
                                "#{Token[TOKEN.23]}",
                              ],
                              "logicalId": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                              "node": Node {
                                "_children": {},
                                "_context": {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": [
                                  {
                                    "data": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                                    "trace": undefined,
                                    "type": "aws:cdk:logicalId",
                                  },
                                ],
                                "_validations": [],
                                "host": [Circular],
                                "id": "Resource",
                                "scope": [Circular],
                              },
                              "policyDocument": {
                                "Statement": [
                                  {
                                    "Action": "logs:CreateLogGroup",
                                    "Effect": "Allow",
                                    "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                  },
                                  {
                                    "Action": "secretsmanager:*",
                                    "Effect": "Allow",
                                    "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                  },
                                  {
                                    "Action": [
                                      "kms:Decrypt",
                                      "kms:DescribeKey",
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "*",
                                  },
                                  {
                                    "Action": [
                                      "iam:CreateServiceSpecificCredential",
                                      "iam:DeleteServiceSpecificCredential",
                                      "iam:ListServiceSpecificCredentials",
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                  },
                                ],
                                "Version": "2012-10-17",
                              },
                              "policyName": "\${Token[TOKEN.20]}",
                              "rawOverrides": {},
                              "roles": [
                                "#{Token[TOKEN.21]}",
                              ],
                              "stack": [Circular],
                              "users": [
                                "#{Token[TOKEN.22]}",
                              ],
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [
                                  [Circular],
                                ],
                              },
                            },
                          },
                          "_context": {},
                          "_dependencies": Set {},
                          "_locked": false,
                          "_metadata": [],
                          "_validations": [
                            {
                              "validate": [Function],
                            },
                          ],
                          "host": [Circular],
                          "id": "DefaultPolicy",
                          "scope": [Circular],
                        },
                        "physicalName": "\${Token[TOKEN.20]}",
                        "referenceTaken": false,
                        "roles": [
                          [Circular],
                        ],
                        "stack": [Circular],
                        "users": [],
                        Symbol(@aws-cdk/core.DependableTrait): {
                          "dependencyRoots": [
                            [Circular],
                          ],
                        },
                      },
                      "ImportCreateGitopsSecretLambda": ImportedRole {
                        "_allowCrossEnvironment": false,
                        "_physicalName": undefined,
                        "assumeRoleAction": "sts:AssumeRole",
                        "attachedPolicies": AttachedPolicies {
                          "policies": [],
                        },
                        "defaultPolicyName": undefined,
                        "env": {
                          "account": "\${Token[AWS.AccountId.2]}",
                          "region": "\${Token[AWS.Region.6]}",
                        },
                        "grantPrincipal": [Circular],
                        "node": Node {
                          "_children": {},
                          "_context": {},
                          "_dependencies": Set {},
                          "_locked": false,
                          "_metadata": [],
                          "_validations": [],
                          "host": [Circular],
                          "id": "ImportCreateGitopsSecretLambda",
                          "scope": [Circular],
                        },
                        "physicalName": "\${Token[TOKEN.12]}",
                        "policyFragment": PrincipalPolicyFragment {
                          "conditions": {},
                          "principalJson": {
                            "AWS": [
                              "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                            ],
                          },
                        },
                        "principalAccount": "\${Token[AWS.AccountId.2]}",
                        "roleArn": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                        "roleName": "CreateGitopsSecretLambda",
                        "stack": [Circular],
                        Symbol(@aws-cdk/core.DependableTrait): {
                          "dependencyRoots": [
                            [Circular],
                          ],
                        },
                      },
                      "Resource": CfnRole {
                        "_cfnProperties": {
                          "assumeRolePolicyDocument": {
                            "Statement": [
                              {
                                "Action": "sts:AssumeRole",
                                "Effect": "Allow",
                                "Principal": {
                                  "Service": "\${Token[lambda.amazonaws.com.11]}",
                                },
                              },
                            ],
                            "Version": "2012-10-17",
                          },
                          "description": "AWS Accelerator assets access role in workload accounts to bootstrap gitops credentials",
                          "managedPolicyArns": [
                            "#{Token[TOKEN.13]}",
                          ],
                          "maxSessionDuration": undefined,
                          "path": undefined,
                          "permissionsBoundary": undefined,
                          "policies": undefined,
                          "roleName": "AWSLambdaBasicExecutionRole-codeCommitSecret",
                        },
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "\${Token[lambda.amazonaws.com.11]}",
                              },
                            },
                          ],
                          "Version": "2012-10-17",
                        },
                        "attrArn": "\${Token[TOKEN.15]}",
                        "attrRoleId": "\${Token[TOKEN.16]}",
                        "cfnOptions": {},
                        "cfnResourceType": "AWS::IAM::Role",
                        "dependsOn": Set {},
                        "description": "AWS Accelerator assets access role in workload accounts to bootstrap gitops credentials",
                        "logicalId": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.Resource.LogicalID.14]}",
                        "managedPolicyArns": [
                          "#{Token[TOKEN.13]}",
                        ],
                        "maxSessionDuration": undefined,
                        "node": Node {
                          "_children": {},
                          "_context": {},
                          "_dependencies": Set {},
                          "_locked": false,
                          "_metadata": [
                            {
                              "data": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.Resource.LogicalID.14]}",
                              "trace": undefined,
                              "type": "aws:cdk:logicalId",
                            },
                          ],
                          "_validations": [],
                          "host": [Circular],
                          "id": "Resource",
                          "scope": [Circular],
                        },
                        "path": undefined,
                        "permissionsBoundary": undefined,
                        "policies": undefined,
                        "rawOverrides": {},
                        "roleName": "AWSLambdaBasicExecutionRole-codeCommitSecret",
                        "stack": [Circular],
                        "tags": TagManager {
                          "initialTagPriority": 50,
                          "priorities": Map {},
                          "renderedTags": "<unresolved-lazy>",
                          "resourceTypeName": "AWS::IAM::Role",
                          "tagFormatter": StandardFormatter {},
                          "tagPropertyName": "tags",
                          "tags": Map {},
                        },
                        Symbol(@aws-cdk/core.DependableTrait): {
                          "dependencyRoots": [
                            [Circular],
                          ],
                        },
                      },
                    },
                    "_context": {},
                    "_dependencies": Set {},
                    "_locked": false,
                    "_metadata": [],
                    "_validations": [
                      {
                        "validate": [Function],
                      },
                    ],
                    "host": [Circular],
                    "id": "CreateGitopsSecretLambda",
                    "scope": [Circular],
                  },
                  "permissionsBoundary": undefined,
                  "physicalName": "AWSLambdaBasicExecutionRole-codeCommitSecret",
                  "policyFragment": PrincipalPolicyFragment {
                    "conditions": {},
                    "principalJson": {
                      "AWS": [
                        "\${Token[TOKEN.17]}",
                      ],
                    },
                  },
                  "principalAccount": "\${Token[AWS.AccountId.2]}",
                  "roleArn": "\${Token[TOKEN.17]}",
                  "roleName": "\${Token[TOKEN.19]}",
                  "stack": [Circular],
                  Symbol(@aws-cdk/core.DependableTrait): {
                    "dependencyRoots": [
                      [Circular],
                    ],
                  },
                },
                "hashMixins": [],
                "node": Node {
                  "_children": {
                    "Code": Asset {
                      "assetHash": "437761578112cb81b0b580e5b870f6bb63cb2ab57ec7b59e9c0cf3dd5ce02013",
                      "assetPath": "asset.437761578112cb81b0b580e5b870f6bb63cb2ab57ec7b59e9c0cf3dd5ce02013",
                      "bucket": Import {
                        "_allowCrossEnvironment": false,
                        "_physicalName": undefined,
                        "autoCreatePolicy": false,
                        "bucketArn": "arn:\${Token[AWS.Partition.5]}:s3:::\${Token[TOKEN.647]}",
                        "bucketDomainName": "\${Token[TOKEN.647]}.s3.\${Token[AWS.URLSuffix.3]}",
                        "bucketDualStackDomainName": "\${Token[TOKEN.647]}.s3.dualstack.\${Token[AWS.Region.6]}.\${Token[AWS.URLSuffix.3]}",
                        "bucketName": "\${Token[TOKEN.647]}",
                        "bucketRegionalDomainName": "\${Token[TOKEN.647]}.s3.\${Token[AWS.Region.6]}.\${Token[AWS.URLSuffix.3]}",
                        "bucketWebsiteDomainName": "\${Token[TOKEN.647]}.\${Token[TOKEN.649]}",
                        "bucketWebsiteNewUrlFormat": false,
                        "bucketWebsiteUrl": "http://\${Token[TOKEN.647]}.\${Token[TOKEN.649]}",
                        "disallowPublicAccess": false,
                        "encryptionKey": undefined,
                        "env": {
                          "account": "\${Token[AWS.AccountId.2]}",
                          "region": "\${Token[AWS.Region.6]}",
                        },
                        "isWebsite": false,
                        "node": Node {
                          "_children": {},
                          "_context": {},
                          "_dependencies": Set {},
                          "_locked": false,
                          "_metadata": [],
                          "_validations": [
                            {
                              "validate": [Function],
                            },
                          ],
                          "host": [Circular],
                          "id": "AssetBucket",
                          "scope": [Circular],
                        },
                        "notificationsHandlerRole": undefined,
                        "physicalName": "\${Token[TOKEN.650]}",
                        "policy": undefined,
                        "stack": [Circular],
                        Symbol(@aws-cdk/core.DependableTrait): {
                          "dependencyRoots": [
                            [Circular],
                          ],
                        },
                      },
                      "httpUrl": "\${Token[TOKEN.646]}",
                      "isBundled": false,
                      "isFile": false,
                      "isZipArchive": true,
                      "node": Node {
                        "_children": {
                          "AssetBucket": Import {
                            "_allowCrossEnvironment": false,
                            "_physicalName": undefined,
                            "autoCreatePolicy": false,
                            "bucketArn": "arn:\${Token[AWS.Partition.5]}:s3:::\${Token[TOKEN.647]}",
                            "bucketDomainName": "\${Token[TOKEN.647]}.s3.\${Token[AWS.URLSuffix.3]}",
                            "bucketDualStackDomainName": "\${Token[TOKEN.647]}.s3.dualstack.\${Token[AWS.Region.6]}.\${Token[AWS.URLSuffix.3]}",
                            "bucketName": "\${Token[TOKEN.647]}",
                            "bucketRegionalDomainName": "\${Token[TOKEN.647]}.s3.\${Token[AWS.Region.6]}.\${Token[AWS.URLSuffix.3]}",
                            "bucketWebsiteDomainName": "\${Token[TOKEN.647]}.\${Token[TOKEN.649]}",
                            "bucketWebsiteNewUrlFormat": false,
                            "bucketWebsiteUrl": "http://\${Token[TOKEN.647]}.\${Token[TOKEN.649]}",
                            "disallowPublicAccess": false,
                            "encryptionKey": undefined,
                            "env": {
                              "account": "\${Token[AWS.AccountId.2]}",
                              "region": "\${Token[AWS.Region.6]}",
                            },
                            "isWebsite": false,
                            "node": Node {
                              "_children": {},
                              "_context": {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": [],
                              "_validations": [
                                {
                                  "validate": [Function],
                                },
                              ],
                              "host": [Circular],
                              "id": "AssetBucket",
                              "scope": [Circular],
                            },
                            "notificationsHandlerRole": undefined,
                            "physicalName": "\${Token[TOKEN.650]}",
                            "policy": undefined,
                            "stack": [Circular],
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                          "Stage": AssetStaging {
                            "absoluteStagedPath": "/private/var/folders/tn/799yyvm92g74fj_thj2z7w140000gr/T/cdk-test-app-WFT8EN/asset.437761578112cb81b0b580e5b870f6bb63cb2ab57ec7b59e9c0cf3dd5ce02013",
                            "assetHash": "437761578112cb81b0b580e5b870f6bb63cb2ab57ec7b59e9c0cf3dd5ce02013",
                            "assetOutdir": "/private/var/folders/tn/799yyvm92g74fj_thj2z7w140000gr/T/cdk-test-app-WFT8EN",
                            "cacheKey": "944e1635f7fdfeb3073e35dcc76cabb302cf6e89afa2c77982bff6c3fdf3cdab",
                            "customSourceFingerprint": undefined,
                            "fingerprintOptions": {
                              "assetHash": undefined,
                              "extraHash": undefined,
                              "follow": undefined,
                              "path": "/Users/rverma/dev/aws/nsl-saas-accelerator/packages/constructs/lib/aws-codecommit/lambda-codecommit-secret/dist",
                              "sourcePath": "/Users/rverma/dev/aws/nsl-saas-accelerator/packages/constructs/lib/aws-codecommit/lambda-codecommit-secret/dist",
                            },
                            "hashType": "source",
                            "isArchive": true,
                            "node": Node {
                              "_children": {},
                              "_context": {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": [],
                              "_validations": [],
                              "host": [Circular],
                              "id": "Stage",
                              "scope": [Circular],
                            },
                            "packaging": "zip",
                            "sourcePath": "/Users/rverma/dev/aws/nsl-saas-accelerator/packages/constructs/lib/aws-codecommit/lambda-codecommit-secret/dist",
                            "sourceStats": Stats {
                              "atime": 2023-04-19T09:28:15.189Z,
                              "atimeMs": 1681896495189.284,
                              "birthtime": 2023-04-18T10:17:45.917Z,
                              "birthtimeMs": 1681813065916.9114,
                              "blksize": 4096,
                              "blocks": 0,
                              "ctime": 2023-04-19T09:28:15.155Z,
                              "ctimeMs": 1681896495155.161,
                              "dev": 16777233,
                              "gid": 20,
                              "ino": 64257818,
                              "mode": 16877,
                              "mtime": 2023-04-19T09:28:15.155Z,
                              "mtimeMs": 1681896495155.161,
                              "nlink": 4,
                              "rdev": 0,
                              "size": 128,
                              "uid": 504,
                            },
                            "stagedPath": "/private/var/folders/tn/799yyvm92g74fj_thj2z7w140000gr/T/cdk-test-app-WFT8EN/asset.437761578112cb81b0b580e5b870f6bb63cb2ab57ec7b59e9c0cf3dd5ce02013",
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                        },
                        "_context": {},
                        "_dependencies": Set {},
                        "_locked": false,
                        "_metadata": [],
                        "_validations": [],
                        "host": [Circular],
                        "id": "Code",
                        "scope": [Circular],
                      },
                      "s3BucketName": "\${Token[TOKEN.647]}",
                      "s3ObjectKey": "REPLACED-GENERATED-NAME.zip",
                      "s3ObjectUrl": "\${Token[TOKEN.648]}",
                      "s3Url": "\${Token[TOKEN.646]}",
                      "sourceHash": "437761578112cb81b0b580e5b870f6bb63cb2ab57ec7b59e9c0cf3dd5ce02013",
                      Symbol(@aws-cdk/core.DependableTrait): {
                        "dependencyRoots": [
                          [Circular],
                        ],
                      },
                    },
                    "Resource": CfnFunction {
                      "_cfnProperties": {
                        "architectures": undefined,
                        "code": {
                          "imageUri": undefined,
                          "s3Bucket": "\${Token[TOKEN.647]}",
                          "s3Key": "REPLACED-GENERATED-NAME.zip",
                          "s3ObjectVersion": undefined,
                          "zipFile": undefined,
                        },
                        "codeSigningConfigArn": undefined,
                        "deadLetterConfig": undefined,
                        "description": "Create Gitops Secret",
                        "environment": "<unresolved-lazy>",
                        "ephemeralStorage": undefined,
                        "fileSystemConfigs": undefined,
                        "functionName": "\${Token[TOKEN.645]}",
                        "handler": "index.handler",
                        "imageConfig": undefined,
                        "kmsKeyArn": undefined,
                        "layers": [
                          "#{Token[TOKEN.651]}",
                        ],
                        "memorySize": undefined,
                        "packageType": undefined,
                        "reservedConcurrentExecutions": undefined,
                        "role": "\${Token[TOKEN.17]}",
                        "runtime": "nodejs18.x",
                        "runtimeManagementConfig": undefined,
                        "timeout": 900,
                        "vpcConfig": undefined,
                      },
                      "architectures": undefined,
                      "attrArn": "\${Token[TOKEN.653]}",
                      "attrSnapStartResponseApplyOn": "\${Token[TOKEN.654]}",
                      "attrSnapStartResponseOptimizationStatus": "\${Token[TOKEN.655]}",
                      "cfnOptions": {},
                      "cfnResourceType": "AWS::Lambda::Function",
                      "code": {
                        "imageUri": undefined,
                        "s3Bucket": "\${Token[TOKEN.647]}",
                        "s3Key": "REPLACED-GENERATED-NAME.zip",
                        "s3ObjectVersion": undefined,
                        "zipFile": undefined,
                      },
                      "codeSigningConfigArn": undefined,
                      "deadLetterConfig": undefined,
                      "dependsOn": Set {},
                      "description": "Create Gitops Secret",
                      "environment": "<unresolved-lazy>",
                      "ephemeralStorage": undefined,
                      "fileSystemConfigs": undefined,
                      "functionName": "\${Token[TOKEN.645]}",
                      "handler": "index.handler",
                      "imageConfig": undefined,
                      "kmsKeyArn": undefined,
                      "layers": [
                        "#{Token[TOKEN.651]}",
                      ],
                      "logicalId": "\${Token[Default.codeCommitSecret.Function.Resource.LogicalID.652]}",
                      "memorySize": undefined,
                      "node": Node {
                        "_children": {},
                        "_context": {},
                        "_dependencies": Set {
                          Role {
                            "_allowCrossEnvironment": true,
                            "_didSplit": false,
                            "_physicalName": "AWSLambdaBasicExecutionRole-codeCommitSecret",
                            "_roleId": "\${Token[TOKEN.16]}",
                            "assumeRoleAction": "sts:AssumeRole",
                            "assumeRolePolicy": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "\${Token[lambda.amazonaws.com.11]}",
                                  },
                                },
                              ],
                              "Version": "2012-10-17",
                            },
                            "attachedPolicies": AttachedPolicies {
                              "policies": [
                                Policy {
                                  "_allowCrossEnvironment": false,
                                  "_physicalName": "\${Token[TOKEN.20]}",
                                  "_policyName": "\${Token[TOKEN.20]}",
                                  "document": {
                                    "Statement": [
                                      {
                                        "Action": "logs:CreateLogGroup",
                                        "Effect": "Allow",
                                        "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                      },
                                      {
                                        "Action": "secretsmanager:*",
                                        "Effect": "Allow",
                                        "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                      },
                                      {
                                        "Action": [
                                          "kms:Decrypt",
                                          "kms:DescribeKey",
                                        ],
                                        "Effect": "Allow",
                                        "Resource": "*",
                                      },
                                      {
                                        "Action": [
                                          "iam:CreateServiceSpecificCredential",
                                          "iam:DeleteServiceSpecificCredential",
                                          "iam:ListServiceSpecificCredentials",
                                        ],
                                        "Effect": "Allow",
                                        "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "env": {
                                    "account": "\${Token[AWS.AccountId.2]}",
                                    "region": "\${Token[AWS.Region.6]}",
                                  },
                                  "force": false,
                                  "grantPrincipal": PolicyGrantPrincipal {
                                    "_policy": [Circular],
                                    "assumeRoleAction": "sts:AssumeRole",
                                    "grantPrincipal": [Circular],
                                    "principalAccount": "\${Token[AWS.AccountId.2]}",
                                  },
                                  "groups": [],
                                  "node": Node {
                                    "_children": {
                                      "Resource": CfnPolicyConditional {
                                        "_cfnProperties": {
                                          "groups": [
                                            "#{Token[TOKEN.23]}",
                                          ],
                                          "policyDocument": {
                                            "Statement": [
                                              {
                                                "Action": "logs:CreateLogGroup",
                                                "Effect": "Allow",
                                                "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                              },
                                              {
                                                "Action": "secretsmanager:*",
                                                "Effect": "Allow",
                                                "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                              },
                                              {
                                                "Action": [
                                                  "kms:Decrypt",
                                                  "kms:DescribeKey",
                                                ],
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                              {
                                                "Action": [
                                                  "iam:CreateServiceSpecificCredential",
                                                  "iam:DeleteServiceSpecificCredential",
                                                  "iam:ListServiceSpecificCredentials",
                                                ],
                                                "Effect": "Allow",
                                                "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "policyName": "\${Token[TOKEN.20]}",
                                          "roles": [
                                            "#{Token[TOKEN.21]}",
                                          ],
                                          "users": [
                                            "#{Token[TOKEN.22]}",
                                          ],
                                        },
                                        "cfnOptions": {},
                                        "cfnResourceType": "AWS::IAM::Policy",
                                        "dependsOn": Set {},
                                        "groups": [
                                          "#{Token[TOKEN.23]}",
                                        ],
                                        "logicalId": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                                        "node": Node {
                                          "_children": {},
                                          "_context": {},
                                          "_dependencies": Set {},
                                          "_locked": false,
                                          "_metadata": [
                                            {
                                              "data": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                                              "trace": undefined,
                                              "type": "aws:cdk:logicalId",
                                            },
                                          ],
                                          "_validations": [],
                                          "host": [Circular],
                                          "id": "Resource",
                                          "scope": [Circular],
                                        },
                                        "policyDocument": {
                                          "Statement": [
                                            {
                                              "Action": "logs:CreateLogGroup",
                                              "Effect": "Allow",
                                              "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                            },
                                            {
                                              "Action": "secretsmanager:*",
                                              "Effect": "Allow",
                                              "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                            },
                                            {
                                              "Action": [
                                                "kms:Decrypt",
                                                "kms:DescribeKey",
                                              ],
                                              "Effect": "Allow",
                                              "Resource": "*",
                                            },
                                            {
                                              "Action": [
                                                "iam:CreateServiceSpecificCredential",
                                                "iam:DeleteServiceSpecificCredential",
                                                "iam:ListServiceSpecificCredentials",
                                              ],
                                              "Effect": "Allow",
                                              "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "policyName": "\${Token[TOKEN.20]}",
                                        "rawOverrides": {},
                                        "roles": [
                                          "#{Token[TOKEN.21]}",
                                        ],
                                        "stack": [Circular],
                                        "users": [
                                          "#{Token[TOKEN.22]}",
                                        ],
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [
                                            [Circular],
                                          ],
                                        },
                                      },
                                    },
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [],
                                    "_validations": [
                                      {
                                        "validate": [Function],
                                      },
                                    ],
                                    "host": [Circular],
                                    "id": "DefaultPolicy",
                                    "scope": [Circular],
                                  },
                                  "physicalName": "\${Token[TOKEN.20]}",
                                  "referenceTaken": false,
                                  "roles": [
                                    [Circular],
                                  ],
                                  "stack": [Circular],
                                  "users": [],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                              ],
                            },
                            "defaultPolicy": Policy {
                              "_allowCrossEnvironment": false,
                              "_physicalName": "\${Token[TOKEN.20]}",
                              "_policyName": "\${Token[TOKEN.20]}",
                              "document": {
                                "Statement": [
                                  {
                                    "Action": "logs:CreateLogGroup",
                                    "Effect": "Allow",
                                    "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                  },
                                  {
                                    "Action": "secretsmanager:*",
                                    "Effect": "Allow",
                                    "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                  },
                                  {
                                    "Action": [
                                      "kms:Decrypt",
                                      "kms:DescribeKey",
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "*",
                                  },
                                  {
                                    "Action": [
                                      "iam:CreateServiceSpecificCredential",
                                      "iam:DeleteServiceSpecificCredential",
                                      "iam:ListServiceSpecificCredentials",
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                  },
                                ],
                                "Version": "2012-10-17",
                              },
                              "env": {
                                "account": "\${Token[AWS.AccountId.2]}",
                                "region": "\${Token[AWS.Region.6]}",
                              },
                              "force": false,
                              "grantPrincipal": PolicyGrantPrincipal {
                                "_policy": [Circular],
                                "assumeRoleAction": "sts:AssumeRole",
                                "grantPrincipal": [Circular],
                                "principalAccount": "\${Token[AWS.AccountId.2]}",
                              },
                              "groups": [],
                              "node": Node {
                                "_children": {
                                  "Resource": CfnPolicyConditional {
                                    "_cfnProperties": {
                                      "groups": [
                                        "#{Token[TOKEN.23]}",
                                      ],
                                      "policyDocument": {
                                        "Statement": [
                                          {
                                            "Action": "logs:CreateLogGroup",
                                            "Effect": "Allow",
                                            "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                          },
                                          {
                                            "Action": "secretsmanager:*",
                                            "Effect": "Allow",
                                            "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                          },
                                          {
                                            "Action": [
                                              "kms:Decrypt",
                                              "kms:DescribeKey",
                                            ],
                                            "Effect": "Allow",
                                            "Resource": "*",
                                          },
                                          {
                                            "Action": [
                                              "iam:CreateServiceSpecificCredential",
                                              "iam:DeleteServiceSpecificCredential",
                                              "iam:ListServiceSpecificCredentials",
                                            ],
                                            "Effect": "Allow",
                                            "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "policyName": "\${Token[TOKEN.20]}",
                                      "roles": [
                                        "#{Token[TOKEN.21]}",
                                      ],
                                      "users": [
                                        "#{Token[TOKEN.22]}",
                                      ],
                                    },
                                    "cfnOptions": {},
                                    "cfnResourceType": "AWS::IAM::Policy",
                                    "dependsOn": Set {},
                                    "groups": [
                                      "#{Token[TOKEN.23]}",
                                    ],
                                    "logicalId": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                                    "node": Node {
                                      "_children": {},
                                      "_context": {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": [
                                        {
                                          "data": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                                          "trace": undefined,
                                          "type": "aws:cdk:logicalId",
                                        },
                                      ],
                                      "_validations": [],
                                      "host": [Circular],
                                      "id": "Resource",
                                      "scope": [Circular],
                                    },
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "logs:CreateLogGroup",
                                          "Effect": "Allow",
                                          "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                        },
                                        {
                                          "Action": "secretsmanager:*",
                                          "Effect": "Allow",
                                          "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                        },
                                        {
                                          "Action": [
                                            "kms:Decrypt",
                                            "kms:DescribeKey",
                                          ],
                                          "Effect": "Allow",
                                          "Resource": "*",
                                        },
                                        {
                                          "Action": [
                                            "iam:CreateServiceSpecificCredential",
                                            "iam:DeleteServiceSpecificCredential",
                                            "iam:ListServiceSpecificCredentials",
                                          ],
                                          "Effect": "Allow",
                                          "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "policyName": "\${Token[TOKEN.20]}",
                                    "rawOverrides": {},
                                    "roles": [
                                      "#{Token[TOKEN.21]}",
                                    ],
                                    "stack": [Circular],
                                    "users": [
                                      "#{Token[TOKEN.22]}",
                                    ],
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [
                                        [Circular],
                                      ],
                                    },
                                  },
                                },
                                "_context": {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": [],
                                "_validations": [
                                  {
                                    "validate": [Function],
                                  },
                                ],
                                "host": [Circular],
                                "id": "DefaultPolicy",
                                "scope": [Circular],
                              },
                              "physicalName": "\${Token[TOKEN.20]}",
                              "referenceTaken": false,
                              "roles": [
                                [Circular],
                              ],
                              "stack": [Circular],
                              "users": [],
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [
                                  [Circular],
                                ],
                              },
                            },
                            "dependables": Map {
                              {
                                "Action": "logs:CreateLogGroup",
                                "Effect": "Allow",
                                "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                              } => DependencyGroup {
                                "_deps": [],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [],
                                },
                              },
                              {
                                "Action": "secretsmanager:*",
                                "Effect": "Allow",
                                "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                              } => DependencyGroup {
                                "_deps": [],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [],
                                },
                              },
                              {
                                "Action": [
                                  "kms:Decrypt",
                                  "kms:DescribeKey",
                                ],
                                "Effect": "Allow",
                                "Resource": "*",
                              } => DependencyGroup {
                                "_deps": [],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [],
                                },
                              },
                              {
                                "Action": [
                                  "iam:CreateServiceSpecificCredential",
                                  "iam:DeleteServiceSpecificCredential",
                                  "iam:ListServiceSpecificCredentials",
                                ],
                                "Effect": "Allow",
                                "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                              } => DependencyGroup {
                                "_deps": [],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [],
                                },
                              },
                            },
                            "env": {
                              "account": "\${Token[AWS.AccountId.2]}",
                              "region": "\${Token[AWS.Region.6]}",
                            },
                            "grantPrincipal": [Circular],
                            "inlinePolicies": {},
                            "managedPolicies": [
                              AwsManagedPolicy {
                                "managedPolicyArn": "arn:\${Token[AWS.Partition.5]}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                              },
                            ],
                            "node": Node {
                              "_children": {
                                "DefaultPolicy": Policy {
                                  "_allowCrossEnvironment": false,
                                  "_physicalName": "\${Token[TOKEN.20]}",
                                  "_policyName": "\${Token[TOKEN.20]}",
                                  "document": {
                                    "Statement": [
                                      {
                                        "Action": "logs:CreateLogGroup",
                                        "Effect": "Allow",
                                        "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                      },
                                      {
                                        "Action": "secretsmanager:*",
                                        "Effect": "Allow",
                                        "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                      },
                                      {
                                        "Action": [
                                          "kms:Decrypt",
                                          "kms:DescribeKey",
                                        ],
                                        "Effect": "Allow",
                                        "Resource": "*",
                                      },
                                      {
                                        "Action": [
                                          "iam:CreateServiceSpecificCredential",
                                          "iam:DeleteServiceSpecificCredential",
                                          "iam:ListServiceSpecificCredentials",
                                        ],
                                        "Effect": "Allow",
                                        "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "env": {
                                    "account": "\${Token[AWS.AccountId.2]}",
                                    "region": "\${Token[AWS.Region.6]}",
                                  },
                                  "force": false,
                                  "grantPrincipal": PolicyGrantPrincipal {
                                    "_policy": [Circular],
                                    "assumeRoleAction": "sts:AssumeRole",
                                    "grantPrincipal": [Circular],
                                    "principalAccount": "\${Token[AWS.AccountId.2]}",
                                  },
                                  "groups": [],
                                  "node": Node {
                                    "_children": {
                                      "Resource": CfnPolicyConditional {
                                        "_cfnProperties": {
                                          "groups": [
                                            "#{Token[TOKEN.23]}",
                                          ],
                                          "policyDocument": {
                                            "Statement": [
                                              {
                                                "Action": "logs:CreateLogGroup",
                                                "Effect": "Allow",
                                                "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                              },
                                              {
                                                "Action": "secretsmanager:*",
                                                "Effect": "Allow",
                                                "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                              },
                                              {
                                                "Action": [
                                                  "kms:Decrypt",
                                                  "kms:DescribeKey",
                                                ],
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                              {
                                                "Action": [
                                                  "iam:CreateServiceSpecificCredential",
                                                  "iam:DeleteServiceSpecificCredential",
                                                  "iam:ListServiceSpecificCredentials",
                                                ],
                                                "Effect": "Allow",
                                                "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "policyName": "\${Token[TOKEN.20]}",
                                          "roles": [
                                            "#{Token[TOKEN.21]}",
                                          ],
                                          "users": [
                                            "#{Token[TOKEN.22]}",
                                          ],
                                        },
                                        "cfnOptions": {},
                                        "cfnResourceType": "AWS::IAM::Policy",
                                        "dependsOn": Set {},
                                        "groups": [
                                          "#{Token[TOKEN.23]}",
                                        ],
                                        "logicalId": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                                        "node": Node {
                                          "_children": {},
                                          "_context": {},
                                          "_dependencies": Set {},
                                          "_locked": false,
                                          "_metadata": [
                                            {
                                              "data": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                                              "trace": undefined,
                                              "type": "aws:cdk:logicalId",
                                            },
                                          ],
                                          "_validations": [],
                                          "host": [Circular],
                                          "id": "Resource",
                                          "scope": [Circular],
                                        },
                                        "policyDocument": {
                                          "Statement": [
                                            {
                                              "Action": "logs:CreateLogGroup",
                                              "Effect": "Allow",
                                              "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                            },
                                            {
                                              "Action": "secretsmanager:*",
                                              "Effect": "Allow",
                                              "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                            },
                                            {
                                              "Action": [
                                                "kms:Decrypt",
                                                "kms:DescribeKey",
                                              ],
                                              "Effect": "Allow",
                                              "Resource": "*",
                                            },
                                            {
                                              "Action": [
                                                "iam:CreateServiceSpecificCredential",
                                                "iam:DeleteServiceSpecificCredential",
                                                "iam:ListServiceSpecificCredentials",
                                              ],
                                              "Effect": "Allow",
                                              "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "policyName": "\${Token[TOKEN.20]}",
                                        "rawOverrides": {},
                                        "roles": [
                                          "#{Token[TOKEN.21]}",
                                        ],
                                        "stack": [Circular],
                                        "users": [
                                          "#{Token[TOKEN.22]}",
                                        ],
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [
                                            [Circular],
                                          ],
                                        },
                                      },
                                    },
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [],
                                    "_validations": [
                                      {
                                        "validate": [Function],
                                      },
                                    ],
                                    "host": [Circular],
                                    "id": "DefaultPolicy",
                                    "scope": [Circular],
                                  },
                                  "physicalName": "\${Token[TOKEN.20]}",
                                  "referenceTaken": false,
                                  "roles": [
                                    [Circular],
                                  ],
                                  "stack": [Circular],
                                  "users": [],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                                "ImportCreateGitopsSecretLambda": ImportedRole {
                                  "_allowCrossEnvironment": false,
                                  "_physicalName": undefined,
                                  "assumeRoleAction": "sts:AssumeRole",
                                  "attachedPolicies": AttachedPolicies {
                                    "policies": [],
                                  },
                                  "defaultPolicyName": undefined,
                                  "env": {
                                    "account": "\${Token[AWS.AccountId.2]}",
                                    "region": "\${Token[AWS.Region.6]}",
                                  },
                                  "grantPrincipal": [Circular],
                                  "node": Node {
                                    "_children": {},
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [],
                                    "_validations": [],
                                    "host": [Circular],
                                    "id": "ImportCreateGitopsSecretLambda",
                                    "scope": [Circular],
                                  },
                                  "physicalName": "\${Token[TOKEN.12]}",
                                  "policyFragment": PrincipalPolicyFragment {
                                    "conditions": {},
                                    "principalJson": {
                                      "AWS": [
                                        "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                                      ],
                                    },
                                  },
                                  "principalAccount": "\${Token[AWS.AccountId.2]}",
                                  "roleArn": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                                  "roleName": "CreateGitopsSecretLambda",
                                  "stack": [Circular],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                                "Resource": CfnRole {
                                  "_cfnProperties": {
                                    "assumeRolePolicyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "sts:AssumeRole",
                                          "Effect": "Allow",
                                          "Principal": {
                                            "Service": "\${Token[lambda.amazonaws.com.11]}",
                                          },
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "description": "AWS Accelerator assets access role in workload accounts to bootstrap gitops credentials",
                                    "managedPolicyArns": [
                                      "#{Token[TOKEN.13]}",
                                    ],
                                    "maxSessionDuration": undefined,
                                    "path": undefined,
                                    "permissionsBoundary": undefined,
                                    "policies": undefined,
                                    "roleName": "AWSLambdaBasicExecutionRole-codeCommitSecret",
                                  },
                                  "assumeRolePolicyDocument": {
                                    "Statement": [
                                      {
                                        "Action": "sts:AssumeRole",
                                        "Effect": "Allow",
                                        "Principal": {
                                          "Service": "\${Token[lambda.amazonaws.com.11]}",
                                        },
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "attrArn": "\${Token[TOKEN.15]}",
                                  "attrRoleId": "\${Token[TOKEN.16]}",
                                  "cfnOptions": {},
                                  "cfnResourceType": "AWS::IAM::Role",
                                  "dependsOn": Set {},
                                  "description": "AWS Accelerator assets access role in workload accounts to bootstrap gitops credentials",
                                  "logicalId": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.Resource.LogicalID.14]}",
                                  "managedPolicyArns": [
                                    "#{Token[TOKEN.13]}",
                                  ],
                                  "maxSessionDuration": undefined,
                                  "node": Node {
                                    "_children": {},
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [
                                      {
                                        "data": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.Resource.LogicalID.14]}",
                                        "trace": undefined,
                                        "type": "aws:cdk:logicalId",
                                      },
                                    ],
                                    "_validations": [],
                                    "host": [Circular],
                                    "id": "Resource",
                                    "scope": [Circular],
                                  },
                                  "path": undefined,
                                  "permissionsBoundary": undefined,
                                  "policies": undefined,
                                  "rawOverrides": {},
                                  "roleName": "AWSLambdaBasicExecutionRole-codeCommitSecret",
                                  "stack": [Circular],
                                  "tags": TagManager {
                                    "initialTagPriority": 50,
                                    "priorities": Map {},
                                    "renderedTags": "<unresolved-lazy>",
                                    "resourceTypeName": "AWS::IAM::Role",
                                    "tagFormatter": StandardFormatter {},
                                    "tagPropertyName": "tags",
                                    "tags": Map {},
                                  },
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                              },
                              "_context": {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": [],
                              "_validations": [
                                {
                                  "validate": [Function],
                                },
                              ],
                              "host": [Circular],
                              "id": "CreateGitopsSecretLambda",
                              "scope": [Circular],
                            },
                            "permissionsBoundary": undefined,
                            "physicalName": "AWSLambdaBasicExecutionRole-codeCommitSecret",
                            "policyFragment": PrincipalPolicyFragment {
                              "conditions": {},
                              "principalJson": {
                                "AWS": [
                                  "\${Token[TOKEN.17]}",
                                ],
                              },
                            },
                            "principalAccount": "\${Token[AWS.AccountId.2]}",
                            "roleArn": "\${Token[TOKEN.17]}",
                            "roleName": "\${Token[TOKEN.19]}",
                            "stack": [Circular],
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                        },
                        "_locked": false,
                        "_metadata": [
                          {
                            "data": "\${Token[Default.codeCommitSecret.Function.Resource.LogicalID.652]}",
                            "trace": undefined,
                            "type": "aws:cdk:logicalId",
                          },
                        ],
                        "_validations": [],
                        "host": [Circular],
                        "id": "Resource",
                        "scope": [Circular],
                      },
                      "packageType": undefined,
                      "rawOverrides": {},
                      "reservedConcurrentExecutions": undefined,
                      "role": "\${Token[TOKEN.17]}",
                      "runtime": "nodejs18.x",
                      "runtimeManagementConfig": undefined,
                      "snapStart": undefined,
                      "stack": [Circular],
                      "tags": TagManager {
                        "initialTagPriority": 50,
                        "priorities": Map {},
                        "renderedTags": "<unresolved-lazy>",
                        "resourceTypeName": "AWS::Lambda::Function",
                        "tagFormatter": StandardFormatter {},
                        "tagPropertyName": "tags",
                        "tags": Map {},
                      },
                      "timeout": 900,
                      "tracingConfig": undefined,
                      "vpcConfig": undefined,
                      Symbol(@aws-cdk/core.DependableTrait): {
                        "dependencyRoots": [
                          [Circular],
                        ],
                      },
                    },
                  },
                  "_context": {},
                  "_dependencies": Set {},
                  "_locked": false,
                  "_metadata": [],
                  "_validations": [],
                  "host": [Circular],
                  "id": "Function",
                  "scope": [Circular],
                },
                "permissionsNode": Node {
                  "_children": {
                    "Code": Asset {
                      "assetHash": "437761578112cb81b0b580e5b870f6bb63cb2ab57ec7b59e9c0cf3dd5ce02013",
                      "assetPath": "asset.437761578112cb81b0b580e5b870f6bb63cb2ab57ec7b59e9c0cf3dd5ce02013",
                      "bucket": Import {
                        "_allowCrossEnvironment": false,
                        "_physicalName": undefined,
                        "autoCreatePolicy": false,
                        "bucketArn": "arn:\${Token[AWS.Partition.5]}:s3:::\${Token[TOKEN.647]}",
                        "bucketDomainName": "\${Token[TOKEN.647]}.s3.\${Token[AWS.URLSuffix.3]}",
                        "bucketDualStackDomainName": "\${Token[TOKEN.647]}.s3.dualstack.\${Token[AWS.Region.6]}.\${Token[AWS.URLSuffix.3]}",
                        "bucketName": "\${Token[TOKEN.647]}",
                        "bucketRegionalDomainName": "\${Token[TOKEN.647]}.s3.\${Token[AWS.Region.6]}.\${Token[AWS.URLSuffix.3]}",
                        "bucketWebsiteDomainName": "\${Token[TOKEN.647]}.\${Token[TOKEN.649]}",
                        "bucketWebsiteNewUrlFormat": false,
                        "bucketWebsiteUrl": "http://\${Token[TOKEN.647]}.\${Token[TOKEN.649]}",
                        "disallowPublicAccess": false,
                        "encryptionKey": undefined,
                        "env": {
                          "account": "\${Token[AWS.AccountId.2]}",
                          "region": "\${Token[AWS.Region.6]}",
                        },
                        "isWebsite": false,
                        "node": Node {
                          "_children": {},
                          "_context": {},
                          "_dependencies": Set {},
                          "_locked": false,
                          "_metadata": [],
                          "_validations": [
                            {
                              "validate": [Function],
                            },
                          ],
                          "host": [Circular],
                          "id": "AssetBucket",
                          "scope": [Circular],
                        },
                        "notificationsHandlerRole": undefined,
                        "physicalName": "\${Token[TOKEN.650]}",
                        "policy": undefined,
                        "stack": [Circular],
                        Symbol(@aws-cdk/core.DependableTrait): {
                          "dependencyRoots": [
                            [Circular],
                          ],
                        },
                      },
                      "httpUrl": "\${Token[TOKEN.646]}",
                      "isBundled": false,
                      "isFile": false,
                      "isZipArchive": true,
                      "node": Node {
                        "_children": {
                          "AssetBucket": Import {
                            "_allowCrossEnvironment": false,
                            "_physicalName": undefined,
                            "autoCreatePolicy": false,
                            "bucketArn": "arn:\${Token[AWS.Partition.5]}:s3:::\${Token[TOKEN.647]}",
                            "bucketDomainName": "\${Token[TOKEN.647]}.s3.\${Token[AWS.URLSuffix.3]}",
                            "bucketDualStackDomainName": "\${Token[TOKEN.647]}.s3.dualstack.\${Token[AWS.Region.6]}.\${Token[AWS.URLSuffix.3]}",
                            "bucketName": "\${Token[TOKEN.647]}",
                            "bucketRegionalDomainName": "\${Token[TOKEN.647]}.s3.\${Token[AWS.Region.6]}.\${Token[AWS.URLSuffix.3]}",
                            "bucketWebsiteDomainName": "\${Token[TOKEN.647]}.\${Token[TOKEN.649]}",
                            "bucketWebsiteNewUrlFormat": false,
                            "bucketWebsiteUrl": "http://\${Token[TOKEN.647]}.\${Token[TOKEN.649]}",
                            "disallowPublicAccess": false,
                            "encryptionKey": undefined,
                            "env": {
                              "account": "\${Token[AWS.AccountId.2]}",
                              "region": "\${Token[AWS.Region.6]}",
                            },
                            "isWebsite": false,
                            "node": Node {
                              "_children": {},
                              "_context": {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": [],
                              "_validations": [
                                {
                                  "validate": [Function],
                                },
                              ],
                              "host": [Circular],
                              "id": "AssetBucket",
                              "scope": [Circular],
                            },
                            "notificationsHandlerRole": undefined,
                            "physicalName": "\${Token[TOKEN.650]}",
                            "policy": undefined,
                            "stack": [Circular],
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                          "Stage": AssetStaging {
                            "absoluteStagedPath": "/private/var/folders/tn/799yyvm92g74fj_thj2z7w140000gr/T/cdk-test-app-WFT8EN/asset.437761578112cb81b0b580e5b870f6bb63cb2ab57ec7b59e9c0cf3dd5ce02013",
                            "assetHash": "437761578112cb81b0b580e5b870f6bb63cb2ab57ec7b59e9c0cf3dd5ce02013",
                            "assetOutdir": "/private/var/folders/tn/799yyvm92g74fj_thj2z7w140000gr/T/cdk-test-app-WFT8EN",
                            "cacheKey": "944e1635f7fdfeb3073e35dcc76cabb302cf6e89afa2c77982bff6c3fdf3cdab",
                            "customSourceFingerprint": undefined,
                            "fingerprintOptions": {
                              "assetHash": undefined,
                              "extraHash": undefined,
                              "follow": undefined,
                              "path": "/Users/rverma/dev/aws/nsl-saas-accelerator/packages/constructs/lib/aws-codecommit/lambda-codecommit-secret/dist",
                              "sourcePath": "/Users/rverma/dev/aws/nsl-saas-accelerator/packages/constructs/lib/aws-codecommit/lambda-codecommit-secret/dist",
                            },
                            "hashType": "source",
                            "isArchive": true,
                            "node": Node {
                              "_children": {},
                              "_context": {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": [],
                              "_validations": [],
                              "host": [Circular],
                              "id": "Stage",
                              "scope": [Circular],
                            },
                            "packaging": "zip",
                            "sourcePath": "/Users/rverma/dev/aws/nsl-saas-accelerator/packages/constructs/lib/aws-codecommit/lambda-codecommit-secret/dist",
                            "sourceStats": Stats {
                              "atime": 2023-04-19T09:28:15.189Z,
                              "atimeMs": 1681896495189.284,
                              "birthtime": 2023-04-18T10:17:45.917Z,
                              "birthtimeMs": 1681813065916.9114,
                              "blksize": 4096,
                              "blocks": 0,
                              "ctime": 2023-04-19T09:28:15.155Z,
                              "ctimeMs": 1681896495155.161,
                              "dev": 16777233,
                              "gid": 20,
                              "ino": 64257818,
                              "mode": 16877,
                              "mtime": 2023-04-19T09:28:15.155Z,
                              "mtimeMs": 1681896495155.161,
                              "nlink": 4,
                              "rdev": 0,
                              "size": 128,
                              "uid": 504,
                            },
                            "stagedPath": "/private/var/folders/tn/799yyvm92g74fj_thj2z7w140000gr/T/cdk-test-app-WFT8EN/asset.437761578112cb81b0b580e5b870f6bb63cb2ab57ec7b59e9c0cf3dd5ce02013",
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                        },
                        "_context": {},
                        "_dependencies": Set {},
                        "_locked": false,
                        "_metadata": [],
                        "_validations": [],
                        "host": [Circular],
                        "id": "Code",
                        "scope": [Circular],
                      },
                      "s3BucketName": "\${Token[TOKEN.647]}",
                      "s3ObjectKey": "REPLACED-GENERATED-NAME.zip",
                      "s3ObjectUrl": "\${Token[TOKEN.648]}",
                      "s3Url": "\${Token[TOKEN.646]}",
                      "sourceHash": "437761578112cb81b0b580e5b870f6bb63cb2ab57ec7b59e9c0cf3dd5ce02013",
                      Symbol(@aws-cdk/core.DependableTrait): {
                        "dependencyRoots": [
                          [Circular],
                        ],
                      },
                    },
                    "Resource": CfnFunction {
                      "_cfnProperties": {
                        "architectures": undefined,
                        "code": {
                          "imageUri": undefined,
                          "s3Bucket": "\${Token[TOKEN.647]}",
                          "s3Key": "REPLACED-GENERATED-NAME.zip",
                          "s3ObjectVersion": undefined,
                          "zipFile": undefined,
                        },
                        "codeSigningConfigArn": undefined,
                        "deadLetterConfig": undefined,
                        "description": "Create Gitops Secret",
                        "environment": "<unresolved-lazy>",
                        "ephemeralStorage": undefined,
                        "fileSystemConfigs": undefined,
                        "functionName": "\${Token[TOKEN.645]}",
                        "handler": "index.handler",
                        "imageConfig": undefined,
                        "kmsKeyArn": undefined,
                        "layers": [
                          "#{Token[TOKEN.651]}",
                        ],
                        "memorySize": undefined,
                        "packageType": undefined,
                        "reservedConcurrentExecutions": undefined,
                        "role": "\${Token[TOKEN.17]}",
                        "runtime": "nodejs18.x",
                        "runtimeManagementConfig": undefined,
                        "timeout": 900,
                        "vpcConfig": undefined,
                      },
                      "architectures": undefined,
                      "attrArn": "\${Token[TOKEN.653]}",
                      "attrSnapStartResponseApplyOn": "\${Token[TOKEN.654]}",
                      "attrSnapStartResponseOptimizationStatus": "\${Token[TOKEN.655]}",
                      "cfnOptions": {},
                      "cfnResourceType": "AWS::Lambda::Function",
                      "code": {
                        "imageUri": undefined,
                        "s3Bucket": "\${Token[TOKEN.647]}",
                        "s3Key": "REPLACED-GENERATED-NAME.zip",
                        "s3ObjectVersion": undefined,
                        "zipFile": undefined,
                      },
                      "codeSigningConfigArn": undefined,
                      "deadLetterConfig": undefined,
                      "dependsOn": Set {},
                      "description": "Create Gitops Secret",
                      "environment": "<unresolved-lazy>",
                      "ephemeralStorage": undefined,
                      "fileSystemConfigs": undefined,
                      "functionName": "\${Token[TOKEN.645]}",
                      "handler": "index.handler",
                      "imageConfig": undefined,
                      "kmsKeyArn": undefined,
                      "layers": [
                        "#{Token[TOKEN.651]}",
                      ],
                      "logicalId": "\${Token[Default.codeCommitSecret.Function.Resource.LogicalID.652]}",
                      "memorySize": undefined,
                      "node": Node {
                        "_children": {},
                        "_context": {},
                        "_dependencies": Set {
                          Role {
                            "_allowCrossEnvironment": true,
                            "_didSplit": false,
                            "_physicalName": "AWSLambdaBasicExecutionRole-codeCommitSecret",
                            "_roleId": "\${Token[TOKEN.16]}",
                            "assumeRoleAction": "sts:AssumeRole",
                            "assumeRolePolicy": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "\${Token[lambda.amazonaws.com.11]}",
                                  },
                                },
                              ],
                              "Version": "2012-10-17",
                            },
                            "attachedPolicies": AttachedPolicies {
                              "policies": [
                                Policy {
                                  "_allowCrossEnvironment": false,
                                  "_physicalName": "\${Token[TOKEN.20]}",
                                  "_policyName": "\${Token[TOKEN.20]}",
                                  "document": {
                                    "Statement": [
                                      {
                                        "Action": "logs:CreateLogGroup",
                                        "Effect": "Allow",
                                        "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                      },
                                      {
                                        "Action": "secretsmanager:*",
                                        "Effect": "Allow",
                                        "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                      },
                                      {
                                        "Action": [
                                          "kms:Decrypt",
                                          "kms:DescribeKey",
                                        ],
                                        "Effect": "Allow",
                                        "Resource": "*",
                                      },
                                      {
                                        "Action": [
                                          "iam:CreateServiceSpecificCredential",
                                          "iam:DeleteServiceSpecificCredential",
                                          "iam:ListServiceSpecificCredentials",
                                        ],
                                        "Effect": "Allow",
                                        "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "env": {
                                    "account": "\${Token[AWS.AccountId.2]}",
                                    "region": "\${Token[AWS.Region.6]}",
                                  },
                                  "force": false,
                                  "grantPrincipal": PolicyGrantPrincipal {
                                    "_policy": [Circular],
                                    "assumeRoleAction": "sts:AssumeRole",
                                    "grantPrincipal": [Circular],
                                    "principalAccount": "\${Token[AWS.AccountId.2]}",
                                  },
                                  "groups": [],
                                  "node": Node {
                                    "_children": {
                                      "Resource": CfnPolicyConditional {
                                        "_cfnProperties": {
                                          "groups": [
                                            "#{Token[TOKEN.23]}",
                                          ],
                                          "policyDocument": {
                                            "Statement": [
                                              {
                                                "Action": "logs:CreateLogGroup",
                                                "Effect": "Allow",
                                                "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                              },
                                              {
                                                "Action": "secretsmanager:*",
                                                "Effect": "Allow",
                                                "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                              },
                                              {
                                                "Action": [
                                                  "kms:Decrypt",
                                                  "kms:DescribeKey",
                                                ],
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                              {
                                                "Action": [
                                                  "iam:CreateServiceSpecificCredential",
                                                  "iam:DeleteServiceSpecificCredential",
                                                  "iam:ListServiceSpecificCredentials",
                                                ],
                                                "Effect": "Allow",
                                                "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "policyName": "\${Token[TOKEN.20]}",
                                          "roles": [
                                            "#{Token[TOKEN.21]}",
                                          ],
                                          "users": [
                                            "#{Token[TOKEN.22]}",
                                          ],
                                        },
                                        "cfnOptions": {},
                                        "cfnResourceType": "AWS::IAM::Policy",
                                        "dependsOn": Set {},
                                        "groups": [
                                          "#{Token[TOKEN.23]}",
                                        ],
                                        "logicalId": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                                        "node": Node {
                                          "_children": {},
                                          "_context": {},
                                          "_dependencies": Set {},
                                          "_locked": false,
                                          "_metadata": [
                                            {
                                              "data": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                                              "trace": undefined,
                                              "type": "aws:cdk:logicalId",
                                            },
                                          ],
                                          "_validations": [],
                                          "host": [Circular],
                                          "id": "Resource",
                                          "scope": [Circular],
                                        },
                                        "policyDocument": {
                                          "Statement": [
                                            {
                                              "Action": "logs:CreateLogGroup",
                                              "Effect": "Allow",
                                              "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                            },
                                            {
                                              "Action": "secretsmanager:*",
                                              "Effect": "Allow",
                                              "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                            },
                                            {
                                              "Action": [
                                                "kms:Decrypt",
                                                "kms:DescribeKey",
                                              ],
                                              "Effect": "Allow",
                                              "Resource": "*",
                                            },
                                            {
                                              "Action": [
                                                "iam:CreateServiceSpecificCredential",
                                                "iam:DeleteServiceSpecificCredential",
                                                "iam:ListServiceSpecificCredentials",
                                              ],
                                              "Effect": "Allow",
                                              "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "policyName": "\${Token[TOKEN.20]}",
                                        "rawOverrides": {},
                                        "roles": [
                                          "#{Token[TOKEN.21]}",
                                        ],
                                        "stack": [Circular],
                                        "users": [
                                          "#{Token[TOKEN.22]}",
                                        ],
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [
                                            [Circular],
                                          ],
                                        },
                                      },
                                    },
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [],
                                    "_validations": [
                                      {
                                        "validate": [Function],
                                      },
                                    ],
                                    "host": [Circular],
                                    "id": "DefaultPolicy",
                                    "scope": [Circular],
                                  },
                                  "physicalName": "\${Token[TOKEN.20]}",
                                  "referenceTaken": false,
                                  "roles": [
                                    [Circular],
                                  ],
                                  "stack": [Circular],
                                  "users": [],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                              ],
                            },
                            "defaultPolicy": Policy {
                              "_allowCrossEnvironment": false,
                              "_physicalName": "\${Token[TOKEN.20]}",
                              "_policyName": "\${Token[TOKEN.20]}",
                              "document": {
                                "Statement": [
                                  {
                                    "Action": "logs:CreateLogGroup",
                                    "Effect": "Allow",
                                    "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                  },
                                  {
                                    "Action": "secretsmanager:*",
                                    "Effect": "Allow",
                                    "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                  },
                                  {
                                    "Action": [
                                      "kms:Decrypt",
                                      "kms:DescribeKey",
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "*",
                                  },
                                  {
                                    "Action": [
                                      "iam:CreateServiceSpecificCredential",
                                      "iam:DeleteServiceSpecificCredential",
                                      "iam:ListServiceSpecificCredentials",
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                  },
                                ],
                                "Version": "2012-10-17",
                              },
                              "env": {
                                "account": "\${Token[AWS.AccountId.2]}",
                                "region": "\${Token[AWS.Region.6]}",
                              },
                              "force": false,
                              "grantPrincipal": PolicyGrantPrincipal {
                                "_policy": [Circular],
                                "assumeRoleAction": "sts:AssumeRole",
                                "grantPrincipal": [Circular],
                                "principalAccount": "\${Token[AWS.AccountId.2]}",
                              },
                              "groups": [],
                              "node": Node {
                                "_children": {
                                  "Resource": CfnPolicyConditional {
                                    "_cfnProperties": {
                                      "groups": [
                                        "#{Token[TOKEN.23]}",
                                      ],
                                      "policyDocument": {
                                        "Statement": [
                                          {
                                            "Action": "logs:CreateLogGroup",
                                            "Effect": "Allow",
                                            "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                          },
                                          {
                                            "Action": "secretsmanager:*",
                                            "Effect": "Allow",
                                            "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                          },
                                          {
                                            "Action": [
                                              "kms:Decrypt",
                                              "kms:DescribeKey",
                                            ],
                                            "Effect": "Allow",
                                            "Resource": "*",
                                          },
                                          {
                                            "Action": [
                                              "iam:CreateServiceSpecificCredential",
                                              "iam:DeleteServiceSpecificCredential",
                                              "iam:ListServiceSpecificCredentials",
                                            ],
                                            "Effect": "Allow",
                                            "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "policyName": "\${Token[TOKEN.20]}",
                                      "roles": [
                                        "#{Token[TOKEN.21]}",
                                      ],
                                      "users": [
                                        "#{Token[TOKEN.22]}",
                                      ],
                                    },
                                    "cfnOptions": {},
                                    "cfnResourceType": "AWS::IAM::Policy",
                                    "dependsOn": Set {},
                                    "groups": [
                                      "#{Token[TOKEN.23]}",
                                    ],
                                    "logicalId": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                                    "node": Node {
                                      "_children": {},
                                      "_context": {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": [
                                        {
                                          "data": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                                          "trace": undefined,
                                          "type": "aws:cdk:logicalId",
                                        },
                                      ],
                                      "_validations": [],
                                      "host": [Circular],
                                      "id": "Resource",
                                      "scope": [Circular],
                                    },
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "logs:CreateLogGroup",
                                          "Effect": "Allow",
                                          "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                        },
                                        {
                                          "Action": "secretsmanager:*",
                                          "Effect": "Allow",
                                          "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                        },
                                        {
                                          "Action": [
                                            "kms:Decrypt",
                                            "kms:DescribeKey",
                                          ],
                                          "Effect": "Allow",
                                          "Resource": "*",
                                        },
                                        {
                                          "Action": [
                                            "iam:CreateServiceSpecificCredential",
                                            "iam:DeleteServiceSpecificCredential",
                                            "iam:ListServiceSpecificCredentials",
                                          ],
                                          "Effect": "Allow",
                                          "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "policyName": "\${Token[TOKEN.20]}",
                                    "rawOverrides": {},
                                    "roles": [
                                      "#{Token[TOKEN.21]}",
                                    ],
                                    "stack": [Circular],
                                    "users": [
                                      "#{Token[TOKEN.22]}",
                                    ],
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [
                                        [Circular],
                                      ],
                                    },
                                  },
                                },
                                "_context": {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": [],
                                "_validations": [
                                  {
                                    "validate": [Function],
                                  },
                                ],
                                "host": [Circular],
                                "id": "DefaultPolicy",
                                "scope": [Circular],
                              },
                              "physicalName": "\${Token[TOKEN.20]}",
                              "referenceTaken": false,
                              "roles": [
                                [Circular],
                              ],
                              "stack": [Circular],
                              "users": [],
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [
                                  [Circular],
                                ],
                              },
                            },
                            "dependables": Map {
                              {
                                "Action": "logs:CreateLogGroup",
                                "Effect": "Allow",
                                "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                              } => DependencyGroup {
                                "_deps": [],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [],
                                },
                              },
                              {
                                "Action": "secretsmanager:*",
                                "Effect": "Allow",
                                "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                              } => DependencyGroup {
                                "_deps": [],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [],
                                },
                              },
                              {
                                "Action": [
                                  "kms:Decrypt",
                                  "kms:DescribeKey",
                                ],
                                "Effect": "Allow",
                                "Resource": "*",
                              } => DependencyGroup {
                                "_deps": [],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [],
                                },
                              },
                              {
                                "Action": [
                                  "iam:CreateServiceSpecificCredential",
                                  "iam:DeleteServiceSpecificCredential",
                                  "iam:ListServiceSpecificCredentials",
                                ],
                                "Effect": "Allow",
                                "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                              } => DependencyGroup {
                                "_deps": [],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [],
                                },
                              },
                            },
                            "env": {
                              "account": "\${Token[AWS.AccountId.2]}",
                              "region": "\${Token[AWS.Region.6]}",
                            },
                            "grantPrincipal": [Circular],
                            "inlinePolicies": {},
                            "managedPolicies": [
                              AwsManagedPolicy {
                                "managedPolicyArn": "arn:\${Token[AWS.Partition.5]}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                              },
                            ],
                            "node": Node {
                              "_children": {
                                "DefaultPolicy": Policy {
                                  "_allowCrossEnvironment": false,
                                  "_physicalName": "\${Token[TOKEN.20]}",
                                  "_policyName": "\${Token[TOKEN.20]}",
                                  "document": {
                                    "Statement": [
                                      {
                                        "Action": "logs:CreateLogGroup",
                                        "Effect": "Allow",
                                        "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                      },
                                      {
                                        "Action": "secretsmanager:*",
                                        "Effect": "Allow",
                                        "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                      },
                                      {
                                        "Action": [
                                          "kms:Decrypt",
                                          "kms:DescribeKey",
                                        ],
                                        "Effect": "Allow",
                                        "Resource": "*",
                                      },
                                      {
                                        "Action": [
                                          "iam:CreateServiceSpecificCredential",
                                          "iam:DeleteServiceSpecificCredential",
                                          "iam:ListServiceSpecificCredentials",
                                        ],
                                        "Effect": "Allow",
                                        "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "env": {
                                    "account": "\${Token[AWS.AccountId.2]}",
                                    "region": "\${Token[AWS.Region.6]}",
                                  },
                                  "force": false,
                                  "grantPrincipal": PolicyGrantPrincipal {
                                    "_policy": [Circular],
                                    "assumeRoleAction": "sts:AssumeRole",
                                    "grantPrincipal": [Circular],
                                    "principalAccount": "\${Token[AWS.AccountId.2]}",
                                  },
                                  "groups": [],
                                  "node": Node {
                                    "_children": {
                                      "Resource": CfnPolicyConditional {
                                        "_cfnProperties": {
                                          "groups": [
                                            "#{Token[TOKEN.23]}",
                                          ],
                                          "policyDocument": {
                                            "Statement": [
                                              {
                                                "Action": "logs:CreateLogGroup",
                                                "Effect": "Allow",
                                                "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                              },
                                              {
                                                "Action": "secretsmanager:*",
                                                "Effect": "Allow",
                                                "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                              },
                                              {
                                                "Action": [
                                                  "kms:Decrypt",
                                                  "kms:DescribeKey",
                                                ],
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                              {
                                                "Action": [
                                                  "iam:CreateServiceSpecificCredential",
                                                  "iam:DeleteServiceSpecificCredential",
                                                  "iam:ListServiceSpecificCredentials",
                                                ],
                                                "Effect": "Allow",
                                                "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "policyName": "\${Token[TOKEN.20]}",
                                          "roles": [
                                            "#{Token[TOKEN.21]}",
                                          ],
                                          "users": [
                                            "#{Token[TOKEN.22]}",
                                          ],
                                        },
                                        "cfnOptions": {},
                                        "cfnResourceType": "AWS::IAM::Policy",
                                        "dependsOn": Set {},
                                        "groups": [
                                          "#{Token[TOKEN.23]}",
                                        ],
                                        "logicalId": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                                        "node": Node {
                                          "_children": {},
                                          "_context": {},
                                          "_dependencies": Set {},
                                          "_locked": false,
                                          "_metadata": [
                                            {
                                              "data": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                                              "trace": undefined,
                                              "type": "aws:cdk:logicalId",
                                            },
                                          ],
                                          "_validations": [],
                                          "host": [Circular],
                                          "id": "Resource",
                                          "scope": [Circular],
                                        },
                                        "policyDocument": {
                                          "Statement": [
                                            {
                                              "Action": "logs:CreateLogGroup",
                                              "Effect": "Allow",
                                              "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                            },
                                            {
                                              "Action": "secretsmanager:*",
                                              "Effect": "Allow",
                                              "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                            },
                                            {
                                              "Action": [
                                                "kms:Decrypt",
                                                "kms:DescribeKey",
                                              ],
                                              "Effect": "Allow",
                                              "Resource": "*",
                                            },
                                            {
                                              "Action": [
                                                "iam:CreateServiceSpecificCredential",
                                                "iam:DeleteServiceSpecificCredential",
                                                "iam:ListServiceSpecificCredentials",
                                              ],
                                              "Effect": "Allow",
                                              "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "policyName": "\${Token[TOKEN.20]}",
                                        "rawOverrides": {},
                                        "roles": [
                                          "#{Token[TOKEN.21]}",
                                        ],
                                        "stack": [Circular],
                                        "users": [
                                          "#{Token[TOKEN.22]}",
                                        ],
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [
                                            [Circular],
                                          ],
                                        },
                                      },
                                    },
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [],
                                    "_validations": [
                                      {
                                        "validate": [Function],
                                      },
                                    ],
                                    "host": [Circular],
                                    "id": "DefaultPolicy",
                                    "scope": [Circular],
                                  },
                                  "physicalName": "\${Token[TOKEN.20]}",
                                  "referenceTaken": false,
                                  "roles": [
                                    [Circular],
                                  ],
                                  "stack": [Circular],
                                  "users": [],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                                "ImportCreateGitopsSecretLambda": ImportedRole {
                                  "_allowCrossEnvironment": false,
                                  "_physicalName": undefined,
                                  "assumeRoleAction": "sts:AssumeRole",
                                  "attachedPolicies": AttachedPolicies {
                                    "policies": [],
                                  },
                                  "defaultPolicyName": undefined,
                                  "env": {
                                    "account": "\${Token[AWS.AccountId.2]}",
                                    "region": "\${Token[AWS.Region.6]}",
                                  },
                                  "grantPrincipal": [Circular],
                                  "node": Node {
                                    "_children": {},
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [],
                                    "_validations": [],
                                    "host": [Circular],
                                    "id": "ImportCreateGitopsSecretLambda",
                                    "scope": [Circular],
                                  },
                                  "physicalName": "\${Token[TOKEN.12]}",
                                  "policyFragment": PrincipalPolicyFragment {
                                    "conditions": {},
                                    "principalJson": {
                                      "AWS": [
                                        "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                                      ],
                                    },
                                  },
                                  "principalAccount": "\${Token[AWS.AccountId.2]}",
                                  "roleArn": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                                  "roleName": "CreateGitopsSecretLambda",
                                  "stack": [Circular],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                                "Resource": CfnRole {
                                  "_cfnProperties": {
                                    "assumeRolePolicyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "sts:AssumeRole",
                                          "Effect": "Allow",
                                          "Principal": {
                                            "Service": "\${Token[lambda.amazonaws.com.11]}",
                                          },
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "description": "AWS Accelerator assets access role in workload accounts to bootstrap gitops credentials",
                                    "managedPolicyArns": [
                                      "#{Token[TOKEN.13]}",
                                    ],
                                    "maxSessionDuration": undefined,
                                    "path": undefined,
                                    "permissionsBoundary": undefined,
                                    "policies": undefined,
                                    "roleName": "AWSLambdaBasicExecutionRole-codeCommitSecret",
                                  },
                                  "assumeRolePolicyDocument": {
                                    "Statement": [
                                      {
                                        "Action": "sts:AssumeRole",
                                        "Effect": "Allow",
                                        "Principal": {
                                          "Service": "\${Token[lambda.amazonaws.com.11]}",
                                        },
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "attrArn": "\${Token[TOKEN.15]}",
                                  "attrRoleId": "\${Token[TOKEN.16]}",
                                  "cfnOptions": {},
                                  "cfnResourceType": "AWS::IAM::Role",
                                  "dependsOn": Set {},
                                  "description": "AWS Accelerator assets access role in workload accounts to bootstrap gitops credentials",
                                  "logicalId": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.Resource.LogicalID.14]}",
                                  "managedPolicyArns": [
                                    "#{Token[TOKEN.13]}",
                                  ],
                                  "maxSessionDuration": undefined,
                                  "node": Node {
                                    "_children": {},
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [
                                      {
                                        "data": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.Resource.LogicalID.14]}",
                                        "trace": undefined,
                                        "type": "aws:cdk:logicalId",
                                      },
                                    ],
                                    "_validations": [],
                                    "host": [Circular],
                                    "id": "Resource",
                                    "scope": [Circular],
                                  },
                                  "path": undefined,
                                  "permissionsBoundary": undefined,
                                  "policies": undefined,
                                  "rawOverrides": {},
                                  "roleName": "AWSLambdaBasicExecutionRole-codeCommitSecret",
                                  "stack": [Circular],
                                  "tags": TagManager {
                                    "initialTagPriority": 50,
                                    "priorities": Map {},
                                    "renderedTags": "<unresolved-lazy>",
                                    "resourceTypeName": "AWS::IAM::Role",
                                    "tagFormatter": StandardFormatter {},
                                    "tagPropertyName": "tags",
                                    "tags": Map {},
                                  },
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                              },
                              "_context": {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": [],
                              "_validations": [
                                {
                                  "validate": [Function],
                                },
                              ],
                              "host": [Circular],
                              "id": "CreateGitopsSecretLambda",
                              "scope": [Circular],
                            },
                            "permissionsBoundary": undefined,
                            "physicalName": "AWSLambdaBasicExecutionRole-codeCommitSecret",
                            "policyFragment": PrincipalPolicyFragment {
                              "conditions": {},
                              "principalJson": {
                                "AWS": [
                                  "\${Token[TOKEN.17]}",
                                ],
                              },
                            },
                            "principalAccount": "\${Token[AWS.AccountId.2]}",
                            "roleArn": "\${Token[TOKEN.17]}",
                            "roleName": "\${Token[TOKEN.19]}",
                            "stack": [Circular],
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                        },
                        "_locked": false,
                        "_metadata": [
                          {
                            "data": "\${Token[Default.codeCommitSecret.Function.Resource.LogicalID.652]}",
                            "trace": undefined,
                            "type": "aws:cdk:logicalId",
                          },
                        ],
                        "_validations": [],
                        "host": [Circular],
                        "id": "Resource",
                        "scope": [Circular],
                      },
                      "packageType": undefined,
                      "rawOverrides": {},
                      "reservedConcurrentExecutions": undefined,
                      "role": "\${Token[TOKEN.17]}",
                      "runtime": "nodejs18.x",
                      "runtimeManagementConfig": undefined,
                      "snapStart": undefined,
                      "stack": [Circular],
                      "tags": TagManager {
                        "initialTagPriority": 50,
                        "priorities": Map {},
                        "renderedTags": "<unresolved-lazy>",
                        "resourceTypeName": "AWS::Lambda::Function",
                        "tagFormatter": StandardFormatter {},
                        "tagPropertyName": "tags",
                        "tags": Map {},
                      },
                      "timeout": 900,
                      "tracingConfig": undefined,
                      "vpcConfig": undefined,
                      Symbol(@aws-cdk/core.DependableTrait): {
                        "dependencyRoots": [
                          [Circular],
                        ],
                      },
                    },
                  },
                  "_context": {},
                  "_dependencies": Set {},
                  "_locked": false,
                  "_metadata": [],
                  "_validations": [],
                  "host": [Circular],
                  "id": "Function",
                  "scope": [Circular],
                },
                "physicalName": "\${Token[TOKEN.645]}",
                "role": Role {
                  "_allowCrossEnvironment": true,
                  "_didSplit": false,
                  "_physicalName": "AWSLambdaBasicExecutionRole-codeCommitSecret",
                  "_roleId": "\${Token[TOKEN.16]}",
                  "assumeRoleAction": "sts:AssumeRole",
                  "assumeRolePolicy": {
                    "Statement": [
                      {
                        "Action": "sts:AssumeRole",
                        "Effect": "Allow",
                        "Principal": {
                          "Service": "\${Token[lambda.amazonaws.com.11]}",
                        },
                      },
                    ],
                    "Version": "2012-10-17",
                  },
                  "attachedPolicies": AttachedPolicies {
                    "policies": [
                      Policy {
                        "_allowCrossEnvironment": false,
                        "_physicalName": "\${Token[TOKEN.20]}",
                        "_policyName": "\${Token[TOKEN.20]}",
                        "document": {
                          "Statement": [
                            {
                              "Action": "logs:CreateLogGroup",
                              "Effect": "Allow",
                              "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                            },
                            {
                              "Action": "secretsmanager:*",
                              "Effect": "Allow",
                              "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                            },
                            {
                              "Action": [
                                "kms:Decrypt",
                                "kms:DescribeKey",
                              ],
                              "Effect": "Allow",
                              "Resource": "*",
                            },
                            {
                              "Action": [
                                "iam:CreateServiceSpecificCredential",
                                "iam:DeleteServiceSpecificCredential",
                                "iam:ListServiceSpecificCredentials",
                              ],
                              "Effect": "Allow",
                              "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                            },
                          ],
                          "Version": "2012-10-17",
                        },
                        "env": {
                          "account": "\${Token[AWS.AccountId.2]}",
                          "region": "\${Token[AWS.Region.6]}",
                        },
                        "force": false,
                        "grantPrincipal": PolicyGrantPrincipal {
                          "_policy": [Circular],
                          "assumeRoleAction": "sts:AssumeRole",
                          "grantPrincipal": [Circular],
                          "principalAccount": "\${Token[AWS.AccountId.2]}",
                        },
                        "groups": [],
                        "node": Node {
                          "_children": {
                            "Resource": CfnPolicyConditional {
                              "_cfnProperties": {
                                "groups": [
                                  "#{Token[TOKEN.23]}",
                                ],
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "logs:CreateLogGroup",
                                      "Effect": "Allow",
                                      "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                    },
                                    {
                                      "Action": "secretsmanager:*",
                                      "Effect": "Allow",
                                      "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                    },
                                    {
                                      "Action": [
                                        "kms:Decrypt",
                                        "kms:DescribeKey",
                                      ],
                                      "Effect": "Allow",
                                      "Resource": "*",
                                    },
                                    {
                                      "Action": [
                                        "iam:CreateServiceSpecificCredential",
                                        "iam:DeleteServiceSpecificCredential",
                                        "iam:ListServiceSpecificCredentials",
                                      ],
                                      "Effect": "Allow",
                                      "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "policyName": "\${Token[TOKEN.20]}",
                                "roles": [
                                  "#{Token[TOKEN.21]}",
                                ],
                                "users": [
                                  "#{Token[TOKEN.22]}",
                                ],
                              },
                              "cfnOptions": {},
                              "cfnResourceType": "AWS::IAM::Policy",
                              "dependsOn": Set {},
                              "groups": [
                                "#{Token[TOKEN.23]}",
                              ],
                              "logicalId": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                              "node": Node {
                                "_children": {},
                                "_context": {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": [
                                  {
                                    "data": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                                    "trace": undefined,
                                    "type": "aws:cdk:logicalId",
                                  },
                                ],
                                "_validations": [],
                                "host": [Circular],
                                "id": "Resource",
                                "scope": [Circular],
                              },
                              "policyDocument": {
                                "Statement": [
                                  {
                                    "Action": "logs:CreateLogGroup",
                                    "Effect": "Allow",
                                    "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                  },
                                  {
                                    "Action": "secretsmanager:*",
                                    "Effect": "Allow",
                                    "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                  },
                                  {
                                    "Action": [
                                      "kms:Decrypt",
                                      "kms:DescribeKey",
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "*",
                                  },
                                  {
                                    "Action": [
                                      "iam:CreateServiceSpecificCredential",
                                      "iam:DeleteServiceSpecificCredential",
                                      "iam:ListServiceSpecificCredentials",
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                  },
                                ],
                                "Version": "2012-10-17",
                              },
                              "policyName": "\${Token[TOKEN.20]}",
                              "rawOverrides": {},
                              "roles": [
                                "#{Token[TOKEN.21]}",
                              ],
                              "stack": [Circular],
                              "users": [
                                "#{Token[TOKEN.22]}",
                              ],
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [
                                  [Circular],
                                ],
                              },
                            },
                          },
                          "_context": {},
                          "_dependencies": Set {},
                          "_locked": false,
                          "_metadata": [],
                          "_validations": [
                            {
                              "validate": [Function],
                            },
                          ],
                          "host": [Circular],
                          "id": "DefaultPolicy",
                          "scope": [Circular],
                        },
                        "physicalName": "\${Token[TOKEN.20]}",
                        "referenceTaken": false,
                        "roles": [
                          [Circular],
                        ],
                        "stack": [Circular],
                        "users": [],
                        Symbol(@aws-cdk/core.DependableTrait): {
                          "dependencyRoots": [
                            [Circular],
                          ],
                        },
                      },
                    ],
                  },
                  "defaultPolicy": Policy {
                    "_allowCrossEnvironment": false,
                    "_physicalName": "\${Token[TOKEN.20]}",
                    "_policyName": "\${Token[TOKEN.20]}",
                    "document": {
                      "Statement": [
                        {
                          "Action": "logs:CreateLogGroup",
                          "Effect": "Allow",
                          "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                        },
                        {
                          "Action": "secretsmanager:*",
                          "Effect": "Allow",
                          "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                        },
                        {
                          "Action": [
                            "kms:Decrypt",
                            "kms:DescribeKey",
                          ],
                          "Effect": "Allow",
                          "Resource": "*",
                        },
                        {
                          "Action": [
                            "iam:CreateServiceSpecificCredential",
                            "iam:DeleteServiceSpecificCredential",
                            "iam:ListServiceSpecificCredentials",
                          ],
                          "Effect": "Allow",
                          "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                        },
                      ],
                      "Version": "2012-10-17",
                    },
                    "env": {
                      "account": "\${Token[AWS.AccountId.2]}",
                      "region": "\${Token[AWS.Region.6]}",
                    },
                    "force": false,
                    "grantPrincipal": PolicyGrantPrincipal {
                      "_policy": [Circular],
                      "assumeRoleAction": "sts:AssumeRole",
                      "grantPrincipal": [Circular],
                      "principalAccount": "\${Token[AWS.AccountId.2]}",
                    },
                    "groups": [],
                    "node": Node {
                      "_children": {
                        "Resource": CfnPolicyConditional {
                          "_cfnProperties": {
                            "groups": [
                              "#{Token[TOKEN.23]}",
                            ],
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "logs:CreateLogGroup",
                                  "Effect": "Allow",
                                  "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                },
                                {
                                  "Action": "secretsmanager:*",
                                  "Effect": "Allow",
                                  "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                },
                                {
                                  "Action": [
                                    "kms:Decrypt",
                                    "kms:DescribeKey",
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*",
                                },
                                {
                                  "Action": [
                                    "iam:CreateServiceSpecificCredential",
                                    "iam:DeleteServiceSpecificCredential",
                                    "iam:ListServiceSpecificCredentials",
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                },
                              ],
                              "Version": "2012-10-17",
                            },
                            "policyName": "\${Token[TOKEN.20]}",
                            "roles": [
                              "#{Token[TOKEN.21]}",
                            ],
                            "users": [
                              "#{Token[TOKEN.22]}",
                            ],
                          },
                          "cfnOptions": {},
                          "cfnResourceType": "AWS::IAM::Policy",
                          "dependsOn": Set {},
                          "groups": [
                            "#{Token[TOKEN.23]}",
                          ],
                          "logicalId": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                          "node": Node {
                            "_children": {},
                            "_context": {},
                            "_dependencies": Set {},
                            "_locked": false,
                            "_metadata": [
                              {
                                "data": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                                "trace": undefined,
                                "type": "aws:cdk:logicalId",
                              },
                            ],
                            "_validations": [],
                            "host": [Circular],
                            "id": "Resource",
                            "scope": [Circular],
                          },
                          "policyDocument": {
                            "Statement": [
                              {
                                "Action": "logs:CreateLogGroup",
                                "Effect": "Allow",
                                "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                              },
                              {
                                "Action": "secretsmanager:*",
                                "Effect": "Allow",
                                "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                              },
                              {
                                "Action": [
                                  "kms:Decrypt",
                                  "kms:DescribeKey",
                                ],
                                "Effect": "Allow",
                                "Resource": "*",
                              },
                              {
                                "Action": [
                                  "iam:CreateServiceSpecificCredential",
                                  "iam:DeleteServiceSpecificCredential",
                                  "iam:ListServiceSpecificCredentials",
                                ],
                                "Effect": "Allow",
                                "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                              },
                            ],
                            "Version": "2012-10-17",
                          },
                          "policyName": "\${Token[TOKEN.20]}",
                          "rawOverrides": {},
                          "roles": [
                            "#{Token[TOKEN.21]}",
                          ],
                          "stack": [Circular],
                          "users": [
                            "#{Token[TOKEN.22]}",
                          ],
                          Symbol(@aws-cdk/core.DependableTrait): {
                            "dependencyRoots": [
                              [Circular],
                            ],
                          },
                        },
                      },
                      "_context": {},
                      "_dependencies": Set {},
                      "_locked": false,
                      "_metadata": [],
                      "_validations": [
                        {
                          "validate": [Function],
                        },
                      ],
                      "host": [Circular],
                      "id": "DefaultPolicy",
                      "scope": [Circular],
                    },
                    "physicalName": "\${Token[TOKEN.20]}",
                    "referenceTaken": false,
                    "roles": [
                      [Circular],
                    ],
                    "stack": [Circular],
                    "users": [],
                    Symbol(@aws-cdk/core.DependableTrait): {
                      "dependencyRoots": [
                        [Circular],
                      ],
                    },
                  },
                  "dependables": Map {
                    {
                      "Action": "logs:CreateLogGroup",
                      "Effect": "Allow",
                      "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                    } => DependencyGroup {
                      "_deps": [],
                      Symbol(@aws-cdk/core.DependableTrait): {
                        "dependencyRoots": [],
                      },
                    },
                    {
                      "Action": "secretsmanager:*",
                      "Effect": "Allow",
                      "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                    } => DependencyGroup {
                      "_deps": [],
                      Symbol(@aws-cdk/core.DependableTrait): {
                        "dependencyRoots": [],
                      },
                    },
                    {
                      "Action": [
                        "kms:Decrypt",
                        "kms:DescribeKey",
                      ],
                      "Effect": "Allow",
                      "Resource": "*",
                    } => DependencyGroup {
                      "_deps": [],
                      Symbol(@aws-cdk/core.DependableTrait): {
                        "dependencyRoots": [],
                      },
                    },
                    {
                      "Action": [
                        "iam:CreateServiceSpecificCredential",
                        "iam:DeleteServiceSpecificCredential",
                        "iam:ListServiceSpecificCredentials",
                      ],
                      "Effect": "Allow",
                      "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                    } => DependencyGroup {
                      "_deps": [],
                      Symbol(@aws-cdk/core.DependableTrait): {
                        "dependencyRoots": [],
                      },
                    },
                  },
                  "env": {
                    "account": "\${Token[AWS.AccountId.2]}",
                    "region": "\${Token[AWS.Region.6]}",
                  },
                  "grantPrincipal": [Circular],
                  "inlinePolicies": {},
                  "managedPolicies": [
                    AwsManagedPolicy {
                      "managedPolicyArn": "arn:\${Token[AWS.Partition.5]}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                    },
                  ],
                  "node": Node {
                    "_children": {
                      "DefaultPolicy": Policy {
                        "_allowCrossEnvironment": false,
                        "_physicalName": "\${Token[TOKEN.20]}",
                        "_policyName": "\${Token[TOKEN.20]}",
                        "document": {
                          "Statement": [
                            {
                              "Action": "logs:CreateLogGroup",
                              "Effect": "Allow",
                              "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                            },
                            {
                              "Action": "secretsmanager:*",
                              "Effect": "Allow",
                              "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                            },
                            {
                              "Action": [
                                "kms:Decrypt",
                                "kms:DescribeKey",
                              ],
                              "Effect": "Allow",
                              "Resource": "*",
                            },
                            {
                              "Action": [
                                "iam:CreateServiceSpecificCredential",
                                "iam:DeleteServiceSpecificCredential",
                                "iam:ListServiceSpecificCredentials",
                              ],
                              "Effect": "Allow",
                              "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                            },
                          ],
                          "Version": "2012-10-17",
                        },
                        "env": {
                          "account": "\${Token[AWS.AccountId.2]}",
                          "region": "\${Token[AWS.Region.6]}",
                        },
                        "force": false,
                        "grantPrincipal": PolicyGrantPrincipal {
                          "_policy": [Circular],
                          "assumeRoleAction": "sts:AssumeRole",
                          "grantPrincipal": [Circular],
                          "principalAccount": "\${Token[AWS.AccountId.2]}",
                        },
                        "groups": [],
                        "node": Node {
                          "_children": {
                            "Resource": CfnPolicyConditional {
                              "_cfnProperties": {
                                "groups": [
                                  "#{Token[TOKEN.23]}",
                                ],
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "logs:CreateLogGroup",
                                      "Effect": "Allow",
                                      "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                    },
                                    {
                                      "Action": "secretsmanager:*",
                                      "Effect": "Allow",
                                      "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                    },
                                    {
                                      "Action": [
                                        "kms:Decrypt",
                                        "kms:DescribeKey",
                                      ],
                                      "Effect": "Allow",
                                      "Resource": "*",
                                    },
                                    {
                                      "Action": [
                                        "iam:CreateServiceSpecificCredential",
                                        "iam:DeleteServiceSpecificCredential",
                                        "iam:ListServiceSpecificCredentials",
                                      ],
                                      "Effect": "Allow",
                                      "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "policyName": "\${Token[TOKEN.20]}",
                                "roles": [
                                  "#{Token[TOKEN.21]}",
                                ],
                                "users": [
                                  "#{Token[TOKEN.22]}",
                                ],
                              },
                              "cfnOptions": {},
                              "cfnResourceType": "AWS::IAM::Policy",
                              "dependsOn": Set {},
                              "groups": [
                                "#{Token[TOKEN.23]}",
                              ],
                              "logicalId": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                              "node": Node {
                                "_children": {},
                                "_context": {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": [
                                  {
                                    "data": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                                    "trace": undefined,
                                    "type": "aws:cdk:logicalId",
                                  },
                                ],
                                "_validations": [],
                                "host": [Circular],
                                "id": "Resource",
                                "scope": [Circular],
                              },
                              "policyDocument": {
                                "Statement": [
                                  {
                                    "Action": "logs:CreateLogGroup",
                                    "Effect": "Allow",
                                    "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                  },
                                  {
                                    "Action": "secretsmanager:*",
                                    "Effect": "Allow",
                                    "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                  },
                                  {
                                    "Action": [
                                      "kms:Decrypt",
                                      "kms:DescribeKey",
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "*",
                                  },
                                  {
                                    "Action": [
                                      "iam:CreateServiceSpecificCredential",
                                      "iam:DeleteServiceSpecificCredential",
                                      "iam:ListServiceSpecificCredentials",
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                  },
                                ],
                                "Version": "2012-10-17",
                              },
                              "policyName": "\${Token[TOKEN.20]}",
                              "rawOverrides": {},
                              "roles": [
                                "#{Token[TOKEN.21]}",
                              ],
                              "stack": [Circular],
                              "users": [
                                "#{Token[TOKEN.22]}",
                              ],
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [
                                  [Circular],
                                ],
                              },
                            },
                          },
                          "_context": {},
                          "_dependencies": Set {},
                          "_locked": false,
                          "_metadata": [],
                          "_validations": [
                            {
                              "validate": [Function],
                            },
                          ],
                          "host": [Circular],
                          "id": "DefaultPolicy",
                          "scope": [Circular],
                        },
                        "physicalName": "\${Token[TOKEN.20]}",
                        "referenceTaken": false,
                        "roles": [
                          [Circular],
                        ],
                        "stack": [Circular],
                        "users": [],
                        Symbol(@aws-cdk/core.DependableTrait): {
                          "dependencyRoots": [
                            [Circular],
                          ],
                        },
                      },
                      "ImportCreateGitopsSecretLambda": ImportedRole {
                        "_allowCrossEnvironment": false,
                        "_physicalName": undefined,
                        "assumeRoleAction": "sts:AssumeRole",
                        "attachedPolicies": AttachedPolicies {
                          "policies": [],
                        },
                        "defaultPolicyName": undefined,
                        "env": {
                          "account": "\${Token[AWS.AccountId.2]}",
                          "region": "\${Token[AWS.Region.6]}",
                        },
                        "grantPrincipal": [Circular],
                        "node": Node {
                          "_children": {},
                          "_context": {},
                          "_dependencies": Set {},
                          "_locked": false,
                          "_metadata": [],
                          "_validations": [],
                          "host": [Circular],
                          "id": "ImportCreateGitopsSecretLambda",
                          "scope": [Circular],
                        },
                        "physicalName": "\${Token[TOKEN.12]}",
                        "policyFragment": PrincipalPolicyFragment {
                          "conditions": {},
                          "principalJson": {
                            "AWS": [
                              "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                            ],
                          },
                        },
                        "principalAccount": "\${Token[AWS.AccountId.2]}",
                        "roleArn": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                        "roleName": "CreateGitopsSecretLambda",
                        "stack": [Circular],
                        Symbol(@aws-cdk/core.DependableTrait): {
                          "dependencyRoots": [
                            [Circular],
                          ],
                        },
                      },
                      "Resource": CfnRole {
                        "_cfnProperties": {
                          "assumeRolePolicyDocument": {
                            "Statement": [
                              {
                                "Action": "sts:AssumeRole",
                                "Effect": "Allow",
                                "Principal": {
                                  "Service": "\${Token[lambda.amazonaws.com.11]}",
                                },
                              },
                            ],
                            "Version": "2012-10-17",
                          },
                          "description": "AWS Accelerator assets access role in workload accounts to bootstrap gitops credentials",
                          "managedPolicyArns": [
                            "#{Token[TOKEN.13]}",
                          ],
                          "maxSessionDuration": undefined,
                          "path": undefined,
                          "permissionsBoundary": undefined,
                          "policies": undefined,
                          "roleName": "AWSLambdaBasicExecutionRole-codeCommitSecret",
                        },
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "\${Token[lambda.amazonaws.com.11]}",
                              },
                            },
                          ],
                          "Version": "2012-10-17",
                        },
                        "attrArn": "\${Token[TOKEN.15]}",
                        "attrRoleId": "\${Token[TOKEN.16]}",
                        "cfnOptions": {},
                        "cfnResourceType": "AWS::IAM::Role",
                        "dependsOn": Set {},
                        "description": "AWS Accelerator assets access role in workload accounts to bootstrap gitops credentials",
                        "logicalId": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.Resource.LogicalID.14]}",
                        "managedPolicyArns": [
                          "#{Token[TOKEN.13]}",
                        ],
                        "maxSessionDuration": undefined,
                        "node": Node {
                          "_children": {},
                          "_context": {},
                          "_dependencies": Set {},
                          "_locked": false,
                          "_metadata": [
                            {
                              "data": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.Resource.LogicalID.14]}",
                              "trace": undefined,
                              "type": "aws:cdk:logicalId",
                            },
                          ],
                          "_validations": [],
                          "host": [Circular],
                          "id": "Resource",
                          "scope": [Circular],
                        },
                        "path": undefined,
                        "permissionsBoundary": undefined,
                        "policies": undefined,
                        "rawOverrides": {},
                        "roleName": "AWSLambdaBasicExecutionRole-codeCommitSecret",
                        "stack": [Circular],
                        "tags": TagManager {
                          "initialTagPriority": 50,
                          "priorities": Map {},
                          "renderedTags": "<unresolved-lazy>",
                          "resourceTypeName": "AWS::IAM::Role",
                          "tagFormatter": StandardFormatter {},
                          "tagPropertyName": "tags",
                          "tags": Map {},
                        },
                        Symbol(@aws-cdk/core.DependableTrait): {
                          "dependencyRoots": [
                            [Circular],
                          ],
                        },
                      },
                    },
                    "_context": {},
                    "_dependencies": Set {},
                    "_locked": false,
                    "_metadata": [],
                    "_validations": [
                      {
                        "validate": [Function],
                      },
                    ],
                    "host": [Circular],
                    "id": "CreateGitopsSecretLambda",
                    "scope": [Circular],
                  },
                  "permissionsBoundary": undefined,
                  "physicalName": "AWSLambdaBasicExecutionRole-codeCommitSecret",
                  "policyFragment": PrincipalPolicyFragment {
                    "conditions": {},
                    "principalJson": {
                      "AWS": [
                        "\${Token[TOKEN.17]}",
                      ],
                    },
                  },
                  "principalAccount": "\${Token[AWS.AccountId.2]}",
                  "roleArn": "\${Token[TOKEN.17]}",
                  "roleName": "\${Token[TOKEN.19]}",
                  "stack": [Circular],
                  Symbol(@aws-cdk/core.DependableTrait): {
                    "dependencyRoots": [
                      [Circular],
                    ],
                  },
                },
                "runtime": Runtime {
                  "bundlingDockerImage": "public.ecr.aws/sam/build-nodejs18.x",
                  "bundlingImage": "public.ecr.aws/sam/build-nodejs18.x",
                  "family": 0,
                  "name": "nodejs18.x",
                  "supportsCodeGuruProfiling": false,
                  "supportsInlineCode": true,
                },
                "stack": [Circular],
                "timeout": Duration {
                  "amount": 15,
                  "unit": TimeUnit {
                    "inMillis": 60000,
                    "isoLabel": "M",
                    "label": "minutes",
                  },
                },
                Symbol(@aws-cdk/core.DependableTrait): {
                  "dependencyRoots": [
                    [Circular],
                  ],
                },
              },
              "role": undefined,
              "securityGroups": undefined,
              "serviceToken": "\${Token[TOKEN.687]}",
              "vpc": undefined,
              "vpcSubnets": undefined,
              Symbol(@aws-cdk/core.DependableTrait): {
                "dependencyRoots": [
                  [Circular],
                ],
              },
            },
            "Function": Function {
              "_allowCrossEnvironment": false,
              "_architecture": undefined,
              "_functionUrlInvocationGrants": {},
              "_invocationGrants": {
                "InvokeiHipRdnVp/AhoScXXAlR/hxrZozY2b7f8v/iV08+i8Q=": Grant {
                  "dependables": [
                    DependencyGroup {
                      "_deps": [],
                      Symbol(@aws-cdk/core.DependableTrait): {
                        "dependencyRoots": [],
                      },
                    },
                  ],
                  "options": {
                    "actions": [
                      "lambda:InvokeFunction",
                    ],
                    "grantee": Function {
                      "_allowCrossEnvironment": false,
                      "_architecture": undefined,
                      "_functionUrlInvocationGrants": {},
                      "_invocationGrants": {},
                      "_layers": [],
                      "_physicalName": undefined,
                      "_warnIfCurrentVersionCalled": false,
                      "architecture": Architecture {
                        "dockerPlatform": "linux/amd64",
                        "name": "x86_64",
                      },
                      "canCreatePermissions": true,
                      "currentVersionOptions": undefined,
                      "env": {
                        "account": "\${Token[AWS.AccountId.2]}",
                        "region": "\${Token[AWS.Region.6]}",
                      },
                      "environment": {
                        "USER_ON_EVENT_FUNCTION_ARN": {
                          "value": "\${Token[TOKEN.658]}",
                        },
                      },
                      "functionArn": "\${Token[TOKEN.687]}",
                      "functionName": "\${Token[TOKEN.686]}",
                      "grantPrincipal": Role {
                        "_allowCrossEnvironment": false,
                        "_didSplit": false,
                        "_physicalName": undefined,
                        "_roleId": "\${Token[TOKEN.671]}",
                        "assumeRoleAction": "sts:AssumeRole",
                        "assumeRolePolicy": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "\${Token[lambda.amazonaws.com.666]}",
                              },
                            },
                          ],
                          "Version": "2012-10-17",
                        },
                        "attachedPolicies": AttachedPolicies {
                          "policies": [
                            Policy {
                              "_allowCrossEnvironment": false,
                              "_physicalName": "\${Token[TOKEN.688]}",
                              "_policyName": "\${Token[TOKEN.688]}",
                              "document": {
                                "Statement": [
                                  {
                                    "Action": "lambda:InvokeFunction",
                                    "Effect": "Allow",
                                    "Resource": [
                                      "\${Token[TOKEN.658]}",
                                      "\${Token[TOKEN.658]}:*",
                                    ],
                                  },
                                ],
                                "Version": "2012-10-17",
                              },
                              "env": {
                                "account": "\${Token[AWS.AccountId.2]}",
                                "region": "\${Token[AWS.Region.6]}",
                              },
                              "force": false,
                              "grantPrincipal": PolicyGrantPrincipal {
                                "_policy": [Circular],
                                "assumeRoleAction": "sts:AssumeRole",
                                "grantPrincipal": [Circular],
                                "principalAccount": "\${Token[AWS.AccountId.2]}",
                              },
                              "groups": [],
                              "node": Node {
                                "_children": {
                                  "Resource": CfnPolicyConditional {
                                    "_cfnProperties": {
                                      "groups": [
                                        "#{Token[TOKEN.691]}",
                                      ],
                                      "policyDocument": {
                                        "Statement": [
                                          {
                                            "Action": "lambda:InvokeFunction",
                                            "Effect": "Allow",
                                            "Resource": [
                                              "\${Token[TOKEN.658]}",
                                              "\${Token[TOKEN.658]}:*",
                                            ],
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "policyName": "\${Token[TOKEN.688]}",
                                      "roles": [
                                        "#{Token[TOKEN.689]}",
                                      ],
                                      "users": [
                                        "#{Token[TOKEN.690]}",
                                      ],
                                    },
                                    "cfnOptions": {},
                                    "cfnResourceType": "AWS::IAM::Policy",
                                    "dependsOn": Set {},
                                    "groups": [
                                      "#{Token[TOKEN.691]}",
                                    ],
                                    "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                    "node": Node {
                                      "_children": {},
                                      "_context": {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": [
                                        {
                                          "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                          "trace": undefined,
                                          "type": "aws:cdk:logicalId",
                                        },
                                      ],
                                      "_validations": [],
                                      "host": [Circular],
                                      "id": "Resource",
                                      "scope": [Circular],
                                    },
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "lambda:InvokeFunction",
                                          "Effect": "Allow",
                                          "Resource": [
                                            "\${Token[TOKEN.658]}",
                                            "\${Token[TOKEN.658]}:*",
                                          ],
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "policyName": "\${Token[TOKEN.688]}",
                                    "rawOverrides": {},
                                    "roles": [
                                      "#{Token[TOKEN.689]}",
                                    ],
                                    "stack": [Circular],
                                    "users": [
                                      "#{Token[TOKEN.690]}",
                                    ],
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [
                                        [Circular],
                                      ],
                                    },
                                  },
                                },
                                "_context": {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": [],
                                "_validations": [
                                  {
                                    "validate": [Function],
                                  },
                                ],
                                "host": [Circular],
                                "id": "DefaultPolicy",
                                "scope": [Circular],
                              },
                              "physicalName": "\${Token[TOKEN.688]}",
                              "referenceTaken": false,
                              "roles": [
                                [Circular],
                              ],
                              "stack": [Circular],
                              "users": [],
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [
                                  [Circular],
                                ],
                              },
                            },
                          ],
                        },
                        "defaultPolicy": Policy {
                          "_allowCrossEnvironment": false,
                          "_physicalName": "\${Token[TOKEN.688]}",
                          "_policyName": "\${Token[TOKEN.688]}",
                          "document": {
                            "Statement": [
                              {
                                "Action": "lambda:InvokeFunction",
                                "Effect": "Allow",
                                "Resource": [
                                  "\${Token[TOKEN.658]}",
                                  "\${Token[TOKEN.658]}:*",
                                ],
                              },
                            ],
                            "Version": "2012-10-17",
                          },
                          "env": {
                            "account": "\${Token[AWS.AccountId.2]}",
                            "region": "\${Token[AWS.Region.6]}",
                          },
                          "force": false,
                          "grantPrincipal": PolicyGrantPrincipal {
                            "_policy": [Circular],
                            "assumeRoleAction": "sts:AssumeRole",
                            "grantPrincipal": [Circular],
                            "principalAccount": "\${Token[AWS.AccountId.2]}",
                          },
                          "groups": [],
                          "node": Node {
                            "_children": {
                              "Resource": CfnPolicyConditional {
                                "_cfnProperties": {
                                  "groups": [
                                    "#{Token[TOKEN.691]}",
                                  ],
                                  "policyDocument": {
                                    "Statement": [
                                      {
                                        "Action": "lambda:InvokeFunction",
                                        "Effect": "Allow",
                                        "Resource": [
                                          "\${Token[TOKEN.658]}",
                                          "\${Token[TOKEN.658]}:*",
                                        ],
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "policyName": "\${Token[TOKEN.688]}",
                                  "roles": [
                                    "#{Token[TOKEN.689]}",
                                  ],
                                  "users": [
                                    "#{Token[TOKEN.690]}",
                                  ],
                                },
                                "cfnOptions": {},
                                "cfnResourceType": "AWS::IAM::Policy",
                                "dependsOn": Set {},
                                "groups": [
                                  "#{Token[TOKEN.691]}",
                                ],
                                "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                "node": Node {
                                  "_children": {},
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [
                                    {
                                      "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                      "trace": undefined,
                                      "type": "aws:cdk:logicalId",
                                    },
                                  ],
                                  "_validations": [],
                                  "host": [Circular],
                                  "id": "Resource",
                                  "scope": [Circular],
                                },
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "lambda:InvokeFunction",
                                      "Effect": "Allow",
                                      "Resource": [
                                        "\${Token[TOKEN.658]}",
                                        "\${Token[TOKEN.658]}:*",
                                      ],
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "policyName": "\${Token[TOKEN.688]}",
                                "rawOverrides": {},
                                "roles": [
                                  "#{Token[TOKEN.689]}",
                                ],
                                "stack": [Circular],
                                "users": [
                                  "#{Token[TOKEN.690]}",
                                ],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                            },
                            "_context": {},
                            "_dependencies": Set {},
                            "_locked": false,
                            "_metadata": [],
                            "_validations": [
                              {
                                "validate": [Function],
                              },
                            ],
                            "host": [Circular],
                            "id": "DefaultPolicy",
                            "scope": [Circular],
                          },
                          "physicalName": "\${Token[TOKEN.688]}",
                          "referenceTaken": false,
                          "roles": [
                            [Circular],
                          ],
                          "stack": [Circular],
                          "users": [],
                          Symbol(@aws-cdk/core.DependableTrait): {
                            "dependencyRoots": [
                              [Circular],
                            ],
                          },
                        },
                        "dependables": Map {
                          {
                            "Action": "lambda:InvokeFunction",
                            "Effect": "Allow",
                            "Resource": [
                              "\${Token[TOKEN.658]}",
                              "\${Token[TOKEN.658]}:*",
                            ],
                          } => DependencyGroup {
                            "_deps": [],
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [],
                            },
                          },
                        },
                        "env": {
                          "account": "\${Token[AWS.AccountId.2]}",
                          "region": "\${Token[AWS.Region.6]}",
                        },
                        "grantPrincipal": [Circular],
                        "inlinePolicies": {},
                        "managedPolicies": [
                          AwsManagedPolicy {
                            "managedPolicyArn": "arn:\${Token[AWS.Partition.5]}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                          },
                        ],
                        "node": Node {
                          "_children": {
                            "DefaultPolicy": Policy {
                              "_allowCrossEnvironment": false,
                              "_physicalName": "\${Token[TOKEN.688]}",
                              "_policyName": "\${Token[TOKEN.688]}",
                              "document": {
                                "Statement": [
                                  {
                                    "Action": "lambda:InvokeFunction",
                                    "Effect": "Allow",
                                    "Resource": [
                                      "\${Token[TOKEN.658]}",
                                      "\${Token[TOKEN.658]}:*",
                                    ],
                                  },
                                ],
                                "Version": "2012-10-17",
                              },
                              "env": {
                                "account": "\${Token[AWS.AccountId.2]}",
                                "region": "\${Token[AWS.Region.6]}",
                              },
                              "force": false,
                              "grantPrincipal": PolicyGrantPrincipal {
                                "_policy": [Circular],
                                "assumeRoleAction": "sts:AssumeRole",
                                "grantPrincipal": [Circular],
                                "principalAccount": "\${Token[AWS.AccountId.2]}",
                              },
                              "groups": [],
                              "node": Node {
                                "_children": {
                                  "Resource": CfnPolicyConditional {
                                    "_cfnProperties": {
                                      "groups": [
                                        "#{Token[TOKEN.691]}",
                                      ],
                                      "policyDocument": {
                                        "Statement": [
                                          {
                                            "Action": "lambda:InvokeFunction",
                                            "Effect": "Allow",
                                            "Resource": [
                                              "\${Token[TOKEN.658]}",
                                              "\${Token[TOKEN.658]}:*",
                                            ],
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "policyName": "\${Token[TOKEN.688]}",
                                      "roles": [
                                        "#{Token[TOKEN.689]}",
                                      ],
                                      "users": [
                                        "#{Token[TOKEN.690]}",
                                      ],
                                    },
                                    "cfnOptions": {},
                                    "cfnResourceType": "AWS::IAM::Policy",
                                    "dependsOn": Set {},
                                    "groups": [
                                      "#{Token[TOKEN.691]}",
                                    ],
                                    "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                    "node": Node {
                                      "_children": {},
                                      "_context": {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": [
                                        {
                                          "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                          "trace": undefined,
                                          "type": "aws:cdk:logicalId",
                                        },
                                      ],
                                      "_validations": [],
                                      "host": [Circular],
                                      "id": "Resource",
                                      "scope": [Circular],
                                    },
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "lambda:InvokeFunction",
                                          "Effect": "Allow",
                                          "Resource": [
                                            "\${Token[TOKEN.658]}",
                                            "\${Token[TOKEN.658]}:*",
                                          ],
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "policyName": "\${Token[TOKEN.688]}",
                                    "rawOverrides": {},
                                    "roles": [
                                      "#{Token[TOKEN.689]}",
                                    ],
                                    "stack": [Circular],
                                    "users": [
                                      "#{Token[TOKEN.690]}",
                                    ],
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [
                                        [Circular],
                                      ],
                                    },
                                  },
                                },
                                "_context": {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": [],
                                "_validations": [
                                  {
                                    "validate": [Function],
                                  },
                                ],
                                "host": [Circular],
                                "id": "DefaultPolicy",
                                "scope": [Circular],
                              },
                              "physicalName": "\${Token[TOKEN.688]}",
                              "referenceTaken": false,
                              "roles": [
                                [Circular],
                              ],
                              "stack": [Circular],
                              "users": [],
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [
                                  [Circular],
                                ],
                              },
                            },
                            "ImportServiceRole": ImportedRole {
                              "_allowCrossEnvironment": false,
                              "_physicalName": undefined,
                              "assumeRoleAction": "sts:AssumeRole",
                              "attachedPolicies": AttachedPolicies {
                                "policies": [],
                              },
                              "defaultPolicyName": undefined,
                              "env": {
                                "account": "\${Token[AWS.AccountId.2]}",
                                "region": "\${Token[AWS.Region.6]}",
                              },
                              "grantPrincipal": [Circular],
                              "node": Node {
                                "_children": {},
                                "_context": {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": [],
                                "_validations": [],
                                "host": [Circular],
                                "id": "ImportServiceRole",
                                "scope": [Circular],
                              },
                              "physicalName": "\${Token[TOKEN.667]}",
                              "policyFragment": PrincipalPolicyFragment {
                                "conditions": {},
                                "principalJson": {
                                  "AWS": [
                                    "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                                  ],
                                },
                              },
                              "principalAccount": "\${Token[AWS.AccountId.2]}",
                              "roleArn": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                              "roleName": "ServiceRole",
                              "stack": [Circular],
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [
                                  [Circular],
                                ],
                              },
                            },
                            "Resource": CfnRole {
                              "_cfnProperties": {
                                "assumeRolePolicyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Principal": {
                                        "Service": "\${Token[lambda.amazonaws.com.666]}",
                                      },
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "description": undefined,
                                "managedPolicyArns": [
                                  "#{Token[TOKEN.668]}",
                                ],
                                "maxSessionDuration": undefined,
                                "path": undefined,
                                "permissionsBoundary": undefined,
                                "policies": undefined,
                                "roleName": "\${Token[TOKEN.665]}",
                              },
                              "assumeRolePolicyDocument": {
                                "Statement": [
                                  {
                                    "Action": "sts:AssumeRole",
                                    "Effect": "Allow",
                                    "Principal": {
                                      "Service": "\${Token[lambda.amazonaws.com.666]}",
                                    },
                                  },
                                ],
                                "Version": "2012-10-17",
                              },
                              "attrArn": "\${Token[TOKEN.670]}",
                              "attrRoleId": "\${Token[TOKEN.671]}",
                              "cfnOptions": {},
                              "cfnResourceType": "AWS::IAM::Role",
                              "dependsOn": Set {},
                              "description": undefined,
                              "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.Resource.LogicalID.669]}",
                              "managedPolicyArns": [
                                "#{Token[TOKEN.668]}",
                              ],
                              "maxSessionDuration": undefined,
                              "node": Node {
                                "_children": {},
                                "_context": {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": [
                                  {
                                    "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.Resource.LogicalID.669]}",
                                    "trace": undefined,
                                    "type": "aws:cdk:logicalId",
                                  },
                                ],
                                "_validations": [],
                                "host": [Circular],
                                "id": "Resource",
                                "scope": [Circular],
                              },
                              "path": undefined,
                              "permissionsBoundary": undefined,
                              "policies": undefined,
                              "rawOverrides": {},
                              "roleName": "\${Token[TOKEN.665]}",
                              "stack": [Circular],
                              "tags": TagManager {
                                "initialTagPriority": 50,
                                "priorities": Map {},
                                "renderedTags": "<unresolved-lazy>",
                                "resourceTypeName": "AWS::IAM::Role",
                                "tagFormatter": StandardFormatter {},
                                "tagPropertyName": "tags",
                                "tags": Map {},
                              },
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [
                                  [Circular],
                                ],
                              },
                            },
                          },
                          "_context": {},
                          "_dependencies": Set {},
                          "_locked": false,
                          "_metadata": [],
                          "_validations": [
                            {
                              "validate": [Function],
                            },
                          ],
                          "host": [Circular],
                          "id": "ServiceRole",
                          "scope": [Circular],
                        },
                        "permissionsBoundary": undefined,
                        "physicalName": "\${Token[TOKEN.665]}",
                        "policyFragment": PrincipalPolicyFragment {
                          "conditions": {},
                          "principalJson": {
                            "AWS": [
                              "\${Token[TOKEN.672]}",
                            ],
                          },
                        },
                        "principalAccount": "\${Token[AWS.AccountId.2]}",
                        "roleArn": "\${Token[TOKEN.672]}",
                        "roleName": "\${Token[TOKEN.674]}",
                        "stack": [Circular],
                        Symbol(@aws-cdk/core.DependableTrait): {
                          "dependencyRoots": [
                            [Circular],
                          ],
                        },
                      },
                      "hashMixins": [],
                      "node": Node {
                        "_children": {
                          "Code": Asset {
                            "assetHash": "903be65b9594a9f17d7120273620367e7830b6d087fc9591f31dc5a080049e46",
                            "assetPath": "asset.903be65b9594a9f17d7120273620367e7830b6d087fc9591f31dc5a080049e46",
                            "bucket": Import {
                              "_allowCrossEnvironment": false,
                              "_physicalName": undefined,
                              "autoCreatePolicy": false,
                              "bucketArn": "arn:\${Token[AWS.Partition.5]}:s3:::\${Token[TOKEN.676]}",
                              "bucketDomainName": "\${Token[TOKEN.676]}.s3.\${Token[AWS.URLSuffix.3]}",
                              "bucketDualStackDomainName": "\${Token[TOKEN.676]}.s3.dualstack.\${Token[AWS.Region.6]}.\${Token[AWS.URLSuffix.3]}",
                              "bucketName": "\${Token[TOKEN.676]}",
                              "bucketRegionalDomainName": "\${Token[TOKEN.676]}.s3.\${Token[AWS.Region.6]}.\${Token[AWS.URLSuffix.3]}",
                              "bucketWebsiteDomainName": "\${Token[TOKEN.676]}.\${Token[TOKEN.678]}",
                              "bucketWebsiteNewUrlFormat": false,
                              "bucketWebsiteUrl": "http://\${Token[TOKEN.676]}.\${Token[TOKEN.678]}",
                              "disallowPublicAccess": false,
                              "encryptionKey": undefined,
                              "env": {
                                "account": "\${Token[AWS.AccountId.2]}",
                                "region": "\${Token[AWS.Region.6]}",
                              },
                              "isWebsite": false,
                              "node": Node {
                                "_children": {},
                                "_context": {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": [],
                                "_validations": [
                                  {
                                    "validate": [Function],
                                  },
                                ],
                                "host": [Circular],
                                "id": "AssetBucket",
                                "scope": [Circular],
                              },
                              "notificationsHandlerRole": undefined,
                              "physicalName": "\${Token[TOKEN.679]}",
                              "policy": undefined,
                              "stack": [Circular],
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [
                                  [Circular],
                                ],
                              },
                            },
                            "httpUrl": "\${Token[TOKEN.675]}",
                            "isBundled": false,
                            "isFile": false,
                            "isZipArchive": true,
                            "node": Node {
                              "_children": {
                                "AssetBucket": Import {
                                  "_allowCrossEnvironment": false,
                                  "_physicalName": undefined,
                                  "autoCreatePolicy": false,
                                  "bucketArn": "arn:\${Token[AWS.Partition.5]}:s3:::\${Token[TOKEN.676]}",
                                  "bucketDomainName": "\${Token[TOKEN.676]}.s3.\${Token[AWS.URLSuffix.3]}",
                                  "bucketDualStackDomainName": "\${Token[TOKEN.676]}.s3.dualstack.\${Token[AWS.Region.6]}.\${Token[AWS.URLSuffix.3]}",
                                  "bucketName": "\${Token[TOKEN.676]}",
                                  "bucketRegionalDomainName": "\${Token[TOKEN.676]}.s3.\${Token[AWS.Region.6]}.\${Token[AWS.URLSuffix.3]}",
                                  "bucketWebsiteDomainName": "\${Token[TOKEN.676]}.\${Token[TOKEN.678]}",
                                  "bucketWebsiteNewUrlFormat": false,
                                  "bucketWebsiteUrl": "http://\${Token[TOKEN.676]}.\${Token[TOKEN.678]}",
                                  "disallowPublicAccess": false,
                                  "encryptionKey": undefined,
                                  "env": {
                                    "account": "\${Token[AWS.AccountId.2]}",
                                    "region": "\${Token[AWS.Region.6]}",
                                  },
                                  "isWebsite": false,
                                  "node": Node {
                                    "_children": {},
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [],
                                    "_validations": [
                                      {
                                        "validate": [Function],
                                      },
                                    ],
                                    "host": [Circular],
                                    "id": "AssetBucket",
                                    "scope": [Circular],
                                  },
                                  "notificationsHandlerRole": undefined,
                                  "physicalName": "\${Token[TOKEN.679]}",
                                  "policy": undefined,
                                  "stack": [Circular],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                                "Stage": AssetStaging {
                                  "absoluteStagedPath": "/private/var/folders/tn/799yyvm92g74fj_thj2z7w140000gr/T/cdk-test-app-WFT8EN/asset.903be65b9594a9f17d7120273620367e7830b6d087fc9591f31dc5a080049e46",
                                  "assetHash": "903be65b9594a9f17d7120273620367e7830b6d087fc9591f31dc5a080049e46",
                                  "assetOutdir": "/private/var/folders/tn/799yyvm92g74fj_thj2z7w140000gr/T/cdk-test-app-WFT8EN",
                                  "cacheKey": "d22374b7156fb41ff718678ed8dd7c65d1393bc2a81b4585d0905e2a290f281a",
                                  "customSourceFingerprint": undefined,
                                  "fingerprintOptions": {
                                    "assetHash": undefined,
                                    "exclude": [
                                      "*.ts",
                                    ],
                                    "extraHash": undefined,
                                    "follow": undefined,
                                    "path": "/Users/rverma/dev/aws/nsl-saas-accelerator/packages/constructs/node_modules/aws-cdk-lib/custom-resources/lib/provider-framework/runtime",
                                    "sourcePath": "/Users/rverma/dev/aws/nsl-saas-accelerator/packages/constructs/node_modules/aws-cdk-lib/custom-resources/lib/provider-framework/runtime",
                                  },
                                  "hashType": "source",
                                  "isArchive": true,
                                  "node": Node {
                                    "_children": {},
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [],
                                    "_validations": [],
                                    "host": [Circular],
                                    "id": "Stage",
                                    "scope": [Circular],
                                  },
                                  "packaging": "zip",
                                  "sourcePath": "/Users/rverma/dev/aws/nsl-saas-accelerator/packages/constructs/node_modules/aws-cdk-lib/custom-resources/lib/provider-framework/runtime",
                                  "sourceStats": Stats {
                                    "atime": 2023-04-19T02:38:43.261Z,
                                    "atimeMs": 1681871923261.3042,
                                    "birthtime": 2023-04-19T02:37:35.005Z,
                                    "birthtimeMs": 1681871855004.6274,
                                    "blksize": 4096,
                                    "blocks": 0,
                                    "ctime": 2023-04-19T02:37:35.007Z,
                                    "ctimeMs": 1681871855007.1067,
                                    "dev": 16777233,
                                    "gid": 20,
                                    "ino": 64198660,
                                    "mode": 16877,
                                    "mtime": 2023-04-19T02:37:35.007Z,
                                    "mtimeMs": 1681871855007.1067,
                                    "nlink": 12,
                                    "rdev": 0,
                                    "size": 384,
                                    "uid": 504,
                                  },
                                  "stagedPath": "/private/var/folders/tn/799yyvm92g74fj_thj2z7w140000gr/T/cdk-test-app-WFT8EN/asset.903be65b9594a9f17d7120273620367e7830b6d087fc9591f31dc5a080049e46",
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                              },
                              "_context": {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": [],
                              "_validations": [],
                              "host": [Circular],
                              "id": "Code",
                              "scope": [Circular],
                            },
                            "s3BucketName": "\${Token[TOKEN.676]}",
                            "s3ObjectKey": "REPLACED-GENERATED-NAME.zip",
                            "s3ObjectUrl": "\${Token[TOKEN.677]}",
                            "s3Url": "\${Token[TOKEN.675]}",
                            "sourceHash": "903be65b9594a9f17d7120273620367e7830b6d087fc9591f31dc5a080049e46",
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                          "Resource": CfnFunction {
                            "_cfnProperties": {
                              "architectures": undefined,
                              "code": {
                                "imageUri": undefined,
                                "s3Bucket": "\${Token[TOKEN.676]}",
                                "s3Key": "REPLACED-GENERATED-NAME.zip",
                                "s3ObjectVersion": undefined,
                                "zipFile": undefined,
                              },
                              "codeSigningConfigArn": undefined,
                              "deadLetterConfig": undefined,
                              "description": "AWS CDK resource provider framework - onEvent (Default/codeCommitSecret/Custom::GitopsSecrets)",
                              "environment": "<unresolved-lazy>",
                              "ephemeralStorage": undefined,
                              "fileSystemConfigs": undefined,
                              "functionName": "\${Token[TOKEN.664]}",
                              "handler": "framework.onEvent",
                              "imageConfig": undefined,
                              "kmsKeyArn": undefined,
                              "layers": [
                                "#{Token[TOKEN.680]}",
                              ],
                              "memorySize": undefined,
                              "packageType": undefined,
                              "reservedConcurrentExecutions": undefined,
                              "role": "\${Token[TOKEN.672]}",
                              "runtime": "nodejs14.x",
                              "runtimeManagementConfig": undefined,
                              "timeout": 900,
                              "vpcConfig": undefined,
                            },
                            "architectures": undefined,
                            "attrArn": "\${Token[TOKEN.682]}",
                            "attrSnapStartResponseApplyOn": "\${Token[TOKEN.683]}",
                            "attrSnapStartResponseOptimizationStatus": "\${Token[TOKEN.684]}",
                            "cfnOptions": {},
                            "cfnResourceType": "AWS::Lambda::Function",
                            "code": {
                              "imageUri": undefined,
                              "s3Bucket": "\${Token[TOKEN.676]}",
                              "s3Key": "REPLACED-GENERATED-NAME.zip",
                              "s3ObjectVersion": undefined,
                              "zipFile": undefined,
                            },
                            "codeSigningConfigArn": undefined,
                            "deadLetterConfig": undefined,
                            "dependsOn": Set {},
                            "description": "AWS CDK resource provider framework - onEvent (Default/codeCommitSecret/Custom::GitopsSecrets)",
                            "environment": "<unresolved-lazy>",
                            "ephemeralStorage": undefined,
                            "fileSystemConfigs": undefined,
                            "functionName": "\${Token[TOKEN.664]}",
                            "handler": "framework.onEvent",
                            "imageConfig": undefined,
                            "kmsKeyArn": undefined,
                            "layers": [
                              "#{Token[TOKEN.680]}",
                            ],
                            "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.Resource.LogicalID.681]}",
                            "memorySize": undefined,
                            "node": Node {
                              "_children": {},
                              "_context": {},
                              "_dependencies": Set {
                                Role {
                                  "_allowCrossEnvironment": false,
                                  "_didSplit": false,
                                  "_physicalName": undefined,
                                  "_roleId": "\${Token[TOKEN.671]}",
                                  "assumeRoleAction": "sts:AssumeRole",
                                  "assumeRolePolicy": {
                                    "Statement": [
                                      {
                                        "Action": "sts:AssumeRole",
                                        "Effect": "Allow",
                                        "Principal": {
                                          "Service": "\${Token[lambda.amazonaws.com.666]}",
                                        },
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "attachedPolicies": AttachedPolicies {
                                    "policies": [
                                      Policy {
                                        "_allowCrossEnvironment": false,
                                        "_physicalName": "\${Token[TOKEN.688]}",
                                        "_policyName": "\${Token[TOKEN.688]}",
                                        "document": {
                                          "Statement": [
                                            {
                                              "Action": "lambda:InvokeFunction",
                                              "Effect": "Allow",
                                              "Resource": [
                                                "\${Token[TOKEN.658]}",
                                                "\${Token[TOKEN.658]}:*",
                                              ],
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "env": {
                                          "account": "\${Token[AWS.AccountId.2]}",
                                          "region": "\${Token[AWS.Region.6]}",
                                        },
                                        "force": false,
                                        "grantPrincipal": PolicyGrantPrincipal {
                                          "_policy": [Circular],
                                          "assumeRoleAction": "sts:AssumeRole",
                                          "grantPrincipal": [Circular],
                                          "principalAccount": "\${Token[AWS.AccountId.2]}",
                                        },
                                        "groups": [],
                                        "node": Node {
                                          "_children": {
                                            "Resource": CfnPolicyConditional {
                                              "_cfnProperties": {
                                                "groups": [
                                                  "#{Token[TOKEN.691]}",
                                                ],
                                                "policyDocument": {
                                                  "Statement": [
                                                    {
                                                      "Action": "lambda:InvokeFunction",
                                                      "Effect": "Allow",
                                                      "Resource": [
                                                        "\${Token[TOKEN.658]}",
                                                        "\${Token[TOKEN.658]}:*",
                                                      ],
                                                    },
                                                  ],
                                                  "Version": "2012-10-17",
                                                },
                                                "policyName": "\${Token[TOKEN.688]}",
                                                "roles": [
                                                  "#{Token[TOKEN.689]}",
                                                ],
                                                "users": [
                                                  "#{Token[TOKEN.690]}",
                                                ],
                                              },
                                              "cfnOptions": {},
                                              "cfnResourceType": "AWS::IAM::Policy",
                                              "dependsOn": Set {},
                                              "groups": [
                                                "#{Token[TOKEN.691]}",
                                              ],
                                              "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                              "node": Node {
                                                "_children": {},
                                                "_context": {},
                                                "_dependencies": Set {},
                                                "_locked": false,
                                                "_metadata": [
                                                  {
                                                    "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                                    "trace": undefined,
                                                    "type": "aws:cdk:logicalId",
                                                  },
                                                ],
                                                "_validations": [],
                                                "host": [Circular],
                                                "id": "Resource",
                                                "scope": [Circular],
                                              },
                                              "policyDocument": {
                                                "Statement": [
                                                  {
                                                    "Action": "lambda:InvokeFunction",
                                                    "Effect": "Allow",
                                                    "Resource": [
                                                      "\${Token[TOKEN.658]}",
                                                      "\${Token[TOKEN.658]}:*",
                                                    ],
                                                  },
                                                ],
                                                "Version": "2012-10-17",
                                              },
                                              "policyName": "\${Token[TOKEN.688]}",
                                              "rawOverrides": {},
                                              "roles": [
                                                "#{Token[TOKEN.689]}",
                                              ],
                                              "stack": [Circular],
                                              "users": [
                                                "#{Token[TOKEN.690]}",
                                              ],
                                              Symbol(@aws-cdk/core.DependableTrait): {
                                                "dependencyRoots": [
                                                  [Circular],
                                                ],
                                              },
                                            },
                                          },
                                          "_context": {},
                                          "_dependencies": Set {},
                                          "_locked": false,
                                          "_metadata": [],
                                          "_validations": [
                                            {
                                              "validate": [Function],
                                            },
                                          ],
                                          "host": [Circular],
                                          "id": "DefaultPolicy",
                                          "scope": [Circular],
                                        },
                                        "physicalName": "\${Token[TOKEN.688]}",
                                        "referenceTaken": false,
                                        "roles": [
                                          [Circular],
                                        ],
                                        "stack": [Circular],
                                        "users": [],
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [
                                            [Circular],
                                          ],
                                        },
                                      },
                                    ],
                                  },
                                  "defaultPolicy": Policy {
                                    "_allowCrossEnvironment": false,
                                    "_physicalName": "\${Token[TOKEN.688]}",
                                    "_policyName": "\${Token[TOKEN.688]}",
                                    "document": {
                                      "Statement": [
                                        {
                                          "Action": "lambda:InvokeFunction",
                                          "Effect": "Allow",
                                          "Resource": [
                                            "\${Token[TOKEN.658]}",
                                            "\${Token[TOKEN.658]}:*",
                                          ],
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "env": {
                                      "account": "\${Token[AWS.AccountId.2]}",
                                      "region": "\${Token[AWS.Region.6]}",
                                    },
                                    "force": false,
                                    "grantPrincipal": PolicyGrantPrincipal {
                                      "_policy": [Circular],
                                      "assumeRoleAction": "sts:AssumeRole",
                                      "grantPrincipal": [Circular],
                                      "principalAccount": "\${Token[AWS.AccountId.2]}",
                                    },
                                    "groups": [],
                                    "node": Node {
                                      "_children": {
                                        "Resource": CfnPolicyConditional {
                                          "_cfnProperties": {
                                            "groups": [
                                              "#{Token[TOKEN.691]}",
                                            ],
                                            "policyDocument": {
                                              "Statement": [
                                                {
                                                  "Action": "lambda:InvokeFunction",
                                                  "Effect": "Allow",
                                                  "Resource": [
                                                    "\${Token[TOKEN.658]}",
                                                    "\${Token[TOKEN.658]}:*",
                                                  ],
                                                },
                                              ],
                                              "Version": "2012-10-17",
                                            },
                                            "policyName": "\${Token[TOKEN.688]}",
                                            "roles": [
                                              "#{Token[TOKEN.689]}",
                                            ],
                                            "users": [
                                              "#{Token[TOKEN.690]}",
                                            ],
                                          },
                                          "cfnOptions": {},
                                          "cfnResourceType": "AWS::IAM::Policy",
                                          "dependsOn": Set {},
                                          "groups": [
                                            "#{Token[TOKEN.691]}",
                                          ],
                                          "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                          "node": Node {
                                            "_children": {},
                                            "_context": {},
                                            "_dependencies": Set {},
                                            "_locked": false,
                                            "_metadata": [
                                              {
                                                "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                                "trace": undefined,
                                                "type": "aws:cdk:logicalId",
                                              },
                                            ],
                                            "_validations": [],
                                            "host": [Circular],
                                            "id": "Resource",
                                            "scope": [Circular],
                                          },
                                          "policyDocument": {
                                            "Statement": [
                                              {
                                                "Action": "lambda:InvokeFunction",
                                                "Effect": "Allow",
                                                "Resource": [
                                                  "\${Token[TOKEN.658]}",
                                                  "\${Token[TOKEN.658]}:*",
                                                ],
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "policyName": "\${Token[TOKEN.688]}",
                                          "rawOverrides": {},
                                          "roles": [
                                            "#{Token[TOKEN.689]}",
                                          ],
                                          "stack": [Circular],
                                          "users": [
                                            "#{Token[TOKEN.690]}",
                                          ],
                                          Symbol(@aws-cdk/core.DependableTrait): {
                                            "dependencyRoots": [
                                              [Circular],
                                            ],
                                          },
                                        },
                                      },
                                      "_context": {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": [],
                                      "_validations": [
                                        {
                                          "validate": [Function],
                                        },
                                      ],
                                      "host": [Circular],
                                      "id": "DefaultPolicy",
                                      "scope": [Circular],
                                    },
                                    "physicalName": "\${Token[TOKEN.688]}",
                                    "referenceTaken": false,
                                    "roles": [
                                      [Circular],
                                    ],
                                    "stack": [Circular],
                                    "users": [],
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [
                                        [Circular],
                                      ],
                                    },
                                  },
                                  "dependables": Map {
                                    {
                                      "Action": "lambda:InvokeFunction",
                                      "Effect": "Allow",
                                      "Resource": [
                                        "\${Token[TOKEN.658]}",
                                        "\${Token[TOKEN.658]}:*",
                                      ],
                                    } => DependencyGroup {
                                      "_deps": [],
                                      Symbol(@aws-cdk/core.DependableTrait): {
                                        "dependencyRoots": [],
                                      },
                                    },
                                  },
                                  "env": {
                                    "account": "\${Token[AWS.AccountId.2]}",
                                    "region": "\${Token[AWS.Region.6]}",
                                  },
                                  "grantPrincipal": [Circular],
                                  "inlinePolicies": {},
                                  "managedPolicies": [
                                    AwsManagedPolicy {
                                      "managedPolicyArn": "arn:\${Token[AWS.Partition.5]}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                                    },
                                  ],
                                  "node": Node {
                                    "_children": {
                                      "DefaultPolicy": Policy {
                                        "_allowCrossEnvironment": false,
                                        "_physicalName": "\${Token[TOKEN.688]}",
                                        "_policyName": "\${Token[TOKEN.688]}",
                                        "document": {
                                          "Statement": [
                                            {
                                              "Action": "lambda:InvokeFunction",
                                              "Effect": "Allow",
                                              "Resource": [
                                                "\${Token[TOKEN.658]}",
                                                "\${Token[TOKEN.658]}:*",
                                              ],
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "env": {
                                          "account": "\${Token[AWS.AccountId.2]}",
                                          "region": "\${Token[AWS.Region.6]}",
                                        },
                                        "force": false,
                                        "grantPrincipal": PolicyGrantPrincipal {
                                          "_policy": [Circular],
                                          "assumeRoleAction": "sts:AssumeRole",
                                          "grantPrincipal": [Circular],
                                          "principalAccount": "\${Token[AWS.AccountId.2]}",
                                        },
                                        "groups": [],
                                        "node": Node {
                                          "_children": {
                                            "Resource": CfnPolicyConditional {
                                              "_cfnProperties": {
                                                "groups": [
                                                  "#{Token[TOKEN.691]}",
                                                ],
                                                "policyDocument": {
                                                  "Statement": [
                                                    {
                                                      "Action": "lambda:InvokeFunction",
                                                      "Effect": "Allow",
                                                      "Resource": [
                                                        "\${Token[TOKEN.658]}",
                                                        "\${Token[TOKEN.658]}:*",
                                                      ],
                                                    },
                                                  ],
                                                  "Version": "2012-10-17",
                                                },
                                                "policyName": "\${Token[TOKEN.688]}",
                                                "roles": [
                                                  "#{Token[TOKEN.689]}",
                                                ],
                                                "users": [
                                                  "#{Token[TOKEN.690]}",
                                                ],
                                              },
                                              "cfnOptions": {},
                                              "cfnResourceType": "AWS::IAM::Policy",
                                              "dependsOn": Set {},
                                              "groups": [
                                                "#{Token[TOKEN.691]}",
                                              ],
                                              "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                              "node": Node {
                                                "_children": {},
                                                "_context": {},
                                                "_dependencies": Set {},
                                                "_locked": false,
                                                "_metadata": [
                                                  {
                                                    "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                                    "trace": undefined,
                                                    "type": "aws:cdk:logicalId",
                                                  },
                                                ],
                                                "_validations": [],
                                                "host": [Circular],
                                                "id": "Resource",
                                                "scope": [Circular],
                                              },
                                              "policyDocument": {
                                                "Statement": [
                                                  {
                                                    "Action": "lambda:InvokeFunction",
                                                    "Effect": "Allow",
                                                    "Resource": [
                                                      "\${Token[TOKEN.658]}",
                                                      "\${Token[TOKEN.658]}:*",
                                                    ],
                                                  },
                                                ],
                                                "Version": "2012-10-17",
                                              },
                                              "policyName": "\${Token[TOKEN.688]}",
                                              "rawOverrides": {},
                                              "roles": [
                                                "#{Token[TOKEN.689]}",
                                              ],
                                              "stack": [Circular],
                                              "users": [
                                                "#{Token[TOKEN.690]}",
                                              ],
                                              Symbol(@aws-cdk/core.DependableTrait): {
                                                "dependencyRoots": [
                                                  [Circular],
                                                ],
                                              },
                                            },
                                          },
                                          "_context": {},
                                          "_dependencies": Set {},
                                          "_locked": false,
                                          "_metadata": [],
                                          "_validations": [
                                            {
                                              "validate": [Function],
                                            },
                                          ],
                                          "host": [Circular],
                                          "id": "DefaultPolicy",
                                          "scope": [Circular],
                                        },
                                        "physicalName": "\${Token[TOKEN.688]}",
                                        "referenceTaken": false,
                                        "roles": [
                                          [Circular],
                                        ],
                                        "stack": [Circular],
                                        "users": [],
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [
                                            [Circular],
                                          ],
                                        },
                                      },
                                      "ImportServiceRole": ImportedRole {
                                        "_allowCrossEnvironment": false,
                                        "_physicalName": undefined,
                                        "assumeRoleAction": "sts:AssumeRole",
                                        "attachedPolicies": AttachedPolicies {
                                          "policies": [],
                                        },
                                        "defaultPolicyName": undefined,
                                        "env": {
                                          "account": "\${Token[AWS.AccountId.2]}",
                                          "region": "\${Token[AWS.Region.6]}",
                                        },
                                        "grantPrincipal": [Circular],
                                        "node": Node {
                                          "_children": {},
                                          "_context": {},
                                          "_dependencies": Set {},
                                          "_locked": false,
                                          "_metadata": [],
                                          "_validations": [],
                                          "host": [Circular],
                                          "id": "ImportServiceRole",
                                          "scope": [Circular],
                                        },
                                        "physicalName": "\${Token[TOKEN.667]}",
                                        "policyFragment": PrincipalPolicyFragment {
                                          "conditions": {},
                                          "principalJson": {
                                            "AWS": [
                                              "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                                            ],
                                          },
                                        },
                                        "principalAccount": "\${Token[AWS.AccountId.2]}",
                                        "roleArn": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                                        "roleName": "ServiceRole",
                                        "stack": [Circular],
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [
                                            [Circular],
                                          ],
                                        },
                                      },
                                      "Resource": CfnRole {
                                        "_cfnProperties": {
                                          "assumeRolePolicyDocument": {
                                            "Statement": [
                                              {
                                                "Action": "sts:AssumeRole",
                                                "Effect": "Allow",
                                                "Principal": {
                                                  "Service": "\${Token[lambda.amazonaws.com.666]}",
                                                },
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "description": undefined,
                                          "managedPolicyArns": [
                                            "#{Token[TOKEN.668]}",
                                          ],
                                          "maxSessionDuration": undefined,
                                          "path": undefined,
                                          "permissionsBoundary": undefined,
                                          "policies": undefined,
                                          "roleName": "\${Token[TOKEN.665]}",
                                        },
                                        "assumeRolePolicyDocument": {
                                          "Statement": [
                                            {
                                              "Action": "sts:AssumeRole",
                                              "Effect": "Allow",
                                              "Principal": {
                                                "Service": "\${Token[lambda.amazonaws.com.666]}",
                                              },
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "attrArn": "\${Token[TOKEN.670]}",
                                        "attrRoleId": "\${Token[TOKEN.671]}",
                                        "cfnOptions": {},
                                        "cfnResourceType": "AWS::IAM::Role",
                                        "dependsOn": Set {},
                                        "description": undefined,
                                        "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.Resource.LogicalID.669]}",
                                        "managedPolicyArns": [
                                          "#{Token[TOKEN.668]}",
                                        ],
                                        "maxSessionDuration": undefined,
                                        "node": Node {
                                          "_children": {},
                                          "_context": {},
                                          "_dependencies": Set {},
                                          "_locked": false,
                                          "_metadata": [
                                            {
                                              "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.Resource.LogicalID.669]}",
                                              "trace": undefined,
                                              "type": "aws:cdk:logicalId",
                                            },
                                          ],
                                          "_validations": [],
                                          "host": [Circular],
                                          "id": "Resource",
                                          "scope": [Circular],
                                        },
                                        "path": undefined,
                                        "permissionsBoundary": undefined,
                                        "policies": undefined,
                                        "rawOverrides": {},
                                        "roleName": "\${Token[TOKEN.665]}",
                                        "stack": [Circular],
                                        "tags": TagManager {
                                          "initialTagPriority": 50,
                                          "priorities": Map {},
                                          "renderedTags": "<unresolved-lazy>",
                                          "resourceTypeName": "AWS::IAM::Role",
                                          "tagFormatter": StandardFormatter {},
                                          "tagPropertyName": "tags",
                                          "tags": Map {},
                                        },
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [
                                            [Circular],
                                          ],
                                        },
                                      },
                                    },
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [],
                                    "_validations": [
                                      {
                                        "validate": [Function],
                                      },
                                    ],
                                    "host": [Circular],
                                    "id": "ServiceRole",
                                    "scope": [Circular],
                                  },
                                  "permissionsBoundary": undefined,
                                  "physicalName": "\${Token[TOKEN.665]}",
                                  "policyFragment": PrincipalPolicyFragment {
                                    "conditions": {},
                                    "principalJson": {
                                      "AWS": [
                                        "\${Token[TOKEN.672]}",
                                      ],
                                    },
                                  },
                                  "principalAccount": "\${Token[AWS.AccountId.2]}",
                                  "roleArn": "\${Token[TOKEN.672]}",
                                  "roleName": "\${Token[TOKEN.674]}",
                                  "stack": [Circular],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                              },
                              "_locked": false,
                              "_metadata": [
                                {
                                  "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.Resource.LogicalID.681]}",
                                  "trace": undefined,
                                  "type": "aws:cdk:logicalId",
                                },
                              ],
                              "_validations": [],
                              "host": [Circular],
                              "id": "Resource",
                              "scope": [Circular],
                            },
                            "packageType": undefined,
                            "rawOverrides": {},
                            "reservedConcurrentExecutions": undefined,
                            "role": "\${Token[TOKEN.672]}",
                            "runtime": "nodejs14.x",
                            "runtimeManagementConfig": undefined,
                            "snapStart": undefined,
                            "stack": [Circular],
                            "tags": TagManager {
                              "initialTagPriority": 50,
                              "priorities": Map {},
                              "renderedTags": "<unresolved-lazy>",
                              "resourceTypeName": "AWS::Lambda::Function",
                              "tagFormatter": StandardFormatter {},
                              "tagPropertyName": "tags",
                              "tags": Map {},
                            },
                            "timeout": 900,
                            "tracingConfig": undefined,
                            "vpcConfig": undefined,
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                          "ServiceRole": Role {
                            "_allowCrossEnvironment": false,
                            "_didSplit": false,
                            "_physicalName": undefined,
                            "_roleId": "\${Token[TOKEN.671]}",
                            "assumeRoleAction": "sts:AssumeRole",
                            "assumeRolePolicy": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "\${Token[lambda.amazonaws.com.666]}",
                                  },
                                },
                              ],
                              "Version": "2012-10-17",
                            },
                            "attachedPolicies": AttachedPolicies {
                              "policies": [
                                Policy {
                                  "_allowCrossEnvironment": false,
                                  "_physicalName": "\${Token[TOKEN.688]}",
                                  "_policyName": "\${Token[TOKEN.688]}",
                                  "document": {
                                    "Statement": [
                                      {
                                        "Action": "lambda:InvokeFunction",
                                        "Effect": "Allow",
                                        "Resource": [
                                          "\${Token[TOKEN.658]}",
                                          "\${Token[TOKEN.658]}:*",
                                        ],
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "env": {
                                    "account": "\${Token[AWS.AccountId.2]}",
                                    "region": "\${Token[AWS.Region.6]}",
                                  },
                                  "force": false,
                                  "grantPrincipal": PolicyGrantPrincipal {
                                    "_policy": [Circular],
                                    "assumeRoleAction": "sts:AssumeRole",
                                    "grantPrincipal": [Circular],
                                    "principalAccount": "\${Token[AWS.AccountId.2]}",
                                  },
                                  "groups": [],
                                  "node": Node {
                                    "_children": {
                                      "Resource": CfnPolicyConditional {
                                        "_cfnProperties": {
                                          "groups": [
                                            "#{Token[TOKEN.691]}",
                                          ],
                                          "policyDocument": {
                                            "Statement": [
                                              {
                                                "Action": "lambda:InvokeFunction",
                                                "Effect": "Allow",
                                                "Resource": [
                                                  "\${Token[TOKEN.658]}",
                                                  "\${Token[TOKEN.658]}:*",
                                                ],
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "policyName": "\${Token[TOKEN.688]}",
                                          "roles": [
                                            "#{Token[TOKEN.689]}",
                                          ],
                                          "users": [
                                            "#{Token[TOKEN.690]}",
                                          ],
                                        },
                                        "cfnOptions": {},
                                        "cfnResourceType": "AWS::IAM::Policy",
                                        "dependsOn": Set {},
                                        "groups": [
                                          "#{Token[TOKEN.691]}",
                                        ],
                                        "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                        "node": Node {
                                          "_children": {},
                                          "_context": {},
                                          "_dependencies": Set {},
                                          "_locked": false,
                                          "_metadata": [
                                            {
                                              "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                              "trace": undefined,
                                              "type": "aws:cdk:logicalId",
                                            },
                                          ],
                                          "_validations": [],
                                          "host": [Circular],
                                          "id": "Resource",
                                          "scope": [Circular],
                                        },
                                        "policyDocument": {
                                          "Statement": [
                                            {
                                              "Action": "lambda:InvokeFunction",
                                              "Effect": "Allow",
                                              "Resource": [
                                                "\${Token[TOKEN.658]}",
                                                "\${Token[TOKEN.658]}:*",
                                              ],
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "policyName": "\${Token[TOKEN.688]}",
                                        "rawOverrides": {},
                                        "roles": [
                                          "#{Token[TOKEN.689]}",
                                        ],
                                        "stack": [Circular],
                                        "users": [
                                          "#{Token[TOKEN.690]}",
                                        ],
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [
                                            [Circular],
                                          ],
                                        },
                                      },
                                    },
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [],
                                    "_validations": [
                                      {
                                        "validate": [Function],
                                      },
                                    ],
                                    "host": [Circular],
                                    "id": "DefaultPolicy",
                                    "scope": [Circular],
                                  },
                                  "physicalName": "\${Token[TOKEN.688]}",
                                  "referenceTaken": false,
                                  "roles": [
                                    [Circular],
                                  ],
                                  "stack": [Circular],
                                  "users": [],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                              ],
                            },
                            "defaultPolicy": Policy {
                              "_allowCrossEnvironment": false,
                              "_physicalName": "\${Token[TOKEN.688]}",
                              "_policyName": "\${Token[TOKEN.688]}",
                              "document": {
                                "Statement": [
                                  {
                                    "Action": "lambda:InvokeFunction",
                                    "Effect": "Allow",
                                    "Resource": [
                                      "\${Token[TOKEN.658]}",
                                      "\${Token[TOKEN.658]}:*",
                                    ],
                                  },
                                ],
                                "Version": "2012-10-17",
                              },
                              "env": {
                                "account": "\${Token[AWS.AccountId.2]}",
                                "region": "\${Token[AWS.Region.6]}",
                              },
                              "force": false,
                              "grantPrincipal": PolicyGrantPrincipal {
                                "_policy": [Circular],
                                "assumeRoleAction": "sts:AssumeRole",
                                "grantPrincipal": [Circular],
                                "principalAccount": "\${Token[AWS.AccountId.2]}",
                              },
                              "groups": [],
                              "node": Node {
                                "_children": {
                                  "Resource": CfnPolicyConditional {
                                    "_cfnProperties": {
                                      "groups": [
                                        "#{Token[TOKEN.691]}",
                                      ],
                                      "policyDocument": {
                                        "Statement": [
                                          {
                                            "Action": "lambda:InvokeFunction",
                                            "Effect": "Allow",
                                            "Resource": [
                                              "\${Token[TOKEN.658]}",
                                              "\${Token[TOKEN.658]}:*",
                                            ],
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "policyName": "\${Token[TOKEN.688]}",
                                      "roles": [
                                        "#{Token[TOKEN.689]}",
                                      ],
                                      "users": [
                                        "#{Token[TOKEN.690]}",
                                      ],
                                    },
                                    "cfnOptions": {},
                                    "cfnResourceType": "AWS::IAM::Policy",
                                    "dependsOn": Set {},
                                    "groups": [
                                      "#{Token[TOKEN.691]}",
                                    ],
                                    "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                    "node": Node {
                                      "_children": {},
                                      "_context": {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": [
                                        {
                                          "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                          "trace": undefined,
                                          "type": "aws:cdk:logicalId",
                                        },
                                      ],
                                      "_validations": [],
                                      "host": [Circular],
                                      "id": "Resource",
                                      "scope": [Circular],
                                    },
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "lambda:InvokeFunction",
                                          "Effect": "Allow",
                                          "Resource": [
                                            "\${Token[TOKEN.658]}",
                                            "\${Token[TOKEN.658]}:*",
                                          ],
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "policyName": "\${Token[TOKEN.688]}",
                                    "rawOverrides": {},
                                    "roles": [
                                      "#{Token[TOKEN.689]}",
                                    ],
                                    "stack": [Circular],
                                    "users": [
                                      "#{Token[TOKEN.690]}",
                                    ],
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [
                                        [Circular],
                                      ],
                                    },
                                  },
                                },
                                "_context": {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": [],
                                "_validations": [
                                  {
                                    "validate": [Function],
                                  },
                                ],
                                "host": [Circular],
                                "id": "DefaultPolicy",
                                "scope": [Circular],
                              },
                              "physicalName": "\${Token[TOKEN.688]}",
                              "referenceTaken": false,
                              "roles": [
                                [Circular],
                              ],
                              "stack": [Circular],
                              "users": [],
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [
                                  [Circular],
                                ],
                              },
                            },
                            "dependables": Map {
                              {
                                "Action": "lambda:InvokeFunction",
                                "Effect": "Allow",
                                "Resource": [
                                  "\${Token[TOKEN.658]}",
                                  "\${Token[TOKEN.658]}:*",
                                ],
                              } => DependencyGroup {
                                "_deps": [],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [],
                                },
                              },
                            },
                            "env": {
                              "account": "\${Token[AWS.AccountId.2]}",
                              "region": "\${Token[AWS.Region.6]}",
                            },
                            "grantPrincipal": [Circular],
                            "inlinePolicies": {},
                            "managedPolicies": [
                              AwsManagedPolicy {
                                "managedPolicyArn": "arn:\${Token[AWS.Partition.5]}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                              },
                            ],
                            "node": Node {
                              "_children": {
                                "DefaultPolicy": Policy {
                                  "_allowCrossEnvironment": false,
                                  "_physicalName": "\${Token[TOKEN.688]}",
                                  "_policyName": "\${Token[TOKEN.688]}",
                                  "document": {
                                    "Statement": [
                                      {
                                        "Action": "lambda:InvokeFunction",
                                        "Effect": "Allow",
                                        "Resource": [
                                          "\${Token[TOKEN.658]}",
                                          "\${Token[TOKEN.658]}:*",
                                        ],
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "env": {
                                    "account": "\${Token[AWS.AccountId.2]}",
                                    "region": "\${Token[AWS.Region.6]}",
                                  },
                                  "force": false,
                                  "grantPrincipal": PolicyGrantPrincipal {
                                    "_policy": [Circular],
                                    "assumeRoleAction": "sts:AssumeRole",
                                    "grantPrincipal": [Circular],
                                    "principalAccount": "\${Token[AWS.AccountId.2]}",
                                  },
                                  "groups": [],
                                  "node": Node {
                                    "_children": {
                                      "Resource": CfnPolicyConditional {
                                        "_cfnProperties": {
                                          "groups": [
                                            "#{Token[TOKEN.691]}",
                                          ],
                                          "policyDocument": {
                                            "Statement": [
                                              {
                                                "Action": "lambda:InvokeFunction",
                                                "Effect": "Allow",
                                                "Resource": [
                                                  "\${Token[TOKEN.658]}",
                                                  "\${Token[TOKEN.658]}:*",
                                                ],
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "policyName": "\${Token[TOKEN.688]}",
                                          "roles": [
                                            "#{Token[TOKEN.689]}",
                                          ],
                                          "users": [
                                            "#{Token[TOKEN.690]}",
                                          ],
                                        },
                                        "cfnOptions": {},
                                        "cfnResourceType": "AWS::IAM::Policy",
                                        "dependsOn": Set {},
                                        "groups": [
                                          "#{Token[TOKEN.691]}",
                                        ],
                                        "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                        "node": Node {
                                          "_children": {},
                                          "_context": {},
                                          "_dependencies": Set {},
                                          "_locked": false,
                                          "_metadata": [
                                            {
                                              "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                              "trace": undefined,
                                              "type": "aws:cdk:logicalId",
                                            },
                                          ],
                                          "_validations": [],
                                          "host": [Circular],
                                          "id": "Resource",
                                          "scope": [Circular],
                                        },
                                        "policyDocument": {
                                          "Statement": [
                                            {
                                              "Action": "lambda:InvokeFunction",
                                              "Effect": "Allow",
                                              "Resource": [
                                                "\${Token[TOKEN.658]}",
                                                "\${Token[TOKEN.658]}:*",
                                              ],
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "policyName": "\${Token[TOKEN.688]}",
                                        "rawOverrides": {},
                                        "roles": [
                                          "#{Token[TOKEN.689]}",
                                        ],
                                        "stack": [Circular],
                                        "users": [
                                          "#{Token[TOKEN.690]}",
                                        ],
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [
                                            [Circular],
                                          ],
                                        },
                                      },
                                    },
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [],
                                    "_validations": [
                                      {
                                        "validate": [Function],
                                      },
                                    ],
                                    "host": [Circular],
                                    "id": "DefaultPolicy",
                                    "scope": [Circular],
                                  },
                                  "physicalName": "\${Token[TOKEN.688]}",
                                  "referenceTaken": false,
                                  "roles": [
                                    [Circular],
                                  ],
                                  "stack": [Circular],
                                  "users": [],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                                "ImportServiceRole": ImportedRole {
                                  "_allowCrossEnvironment": false,
                                  "_physicalName": undefined,
                                  "assumeRoleAction": "sts:AssumeRole",
                                  "attachedPolicies": AttachedPolicies {
                                    "policies": [],
                                  },
                                  "defaultPolicyName": undefined,
                                  "env": {
                                    "account": "\${Token[AWS.AccountId.2]}",
                                    "region": "\${Token[AWS.Region.6]}",
                                  },
                                  "grantPrincipal": [Circular],
                                  "node": Node {
                                    "_children": {},
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [],
                                    "_validations": [],
                                    "host": [Circular],
                                    "id": "ImportServiceRole",
                                    "scope": [Circular],
                                  },
                                  "physicalName": "\${Token[TOKEN.667]}",
                                  "policyFragment": PrincipalPolicyFragment {
                                    "conditions": {},
                                    "principalJson": {
                                      "AWS": [
                                        "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                                      ],
                                    },
                                  },
                                  "principalAccount": "\${Token[AWS.AccountId.2]}",
                                  "roleArn": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                                  "roleName": "ServiceRole",
                                  "stack": [Circular],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                                "Resource": CfnRole {
                                  "_cfnProperties": {
                                    "assumeRolePolicyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "sts:AssumeRole",
                                          "Effect": "Allow",
                                          "Principal": {
                                            "Service": "\${Token[lambda.amazonaws.com.666]}",
                                          },
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "description": undefined,
                                    "managedPolicyArns": [
                                      "#{Token[TOKEN.668]}",
                                    ],
                                    "maxSessionDuration": undefined,
                                    "path": undefined,
                                    "permissionsBoundary": undefined,
                                    "policies": undefined,
                                    "roleName": "\${Token[TOKEN.665]}",
                                  },
                                  "assumeRolePolicyDocument": {
                                    "Statement": [
                                      {
                                        "Action": "sts:AssumeRole",
                                        "Effect": "Allow",
                                        "Principal": {
                                          "Service": "\${Token[lambda.amazonaws.com.666]}",
                                        },
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "attrArn": "\${Token[TOKEN.670]}",
                                  "attrRoleId": "\${Token[TOKEN.671]}",
                                  "cfnOptions": {},
                                  "cfnResourceType": "AWS::IAM::Role",
                                  "dependsOn": Set {},
                                  "description": undefined,
                                  "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.Resource.LogicalID.669]}",
                                  "managedPolicyArns": [
                                    "#{Token[TOKEN.668]}",
                                  ],
                                  "maxSessionDuration": undefined,
                                  "node": Node {
                                    "_children": {},
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [
                                      {
                                        "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.Resource.LogicalID.669]}",
                                        "trace": undefined,
                                        "type": "aws:cdk:logicalId",
                                      },
                                    ],
                                    "_validations": [],
                                    "host": [Circular],
                                    "id": "Resource",
                                    "scope": [Circular],
                                  },
                                  "path": undefined,
                                  "permissionsBoundary": undefined,
                                  "policies": undefined,
                                  "rawOverrides": {},
                                  "roleName": "\${Token[TOKEN.665]}",
                                  "stack": [Circular],
                                  "tags": TagManager {
                                    "initialTagPriority": 50,
                                    "priorities": Map {},
                                    "renderedTags": "<unresolved-lazy>",
                                    "resourceTypeName": "AWS::IAM::Role",
                                    "tagFormatter": StandardFormatter {},
                                    "tagPropertyName": "tags",
                                    "tags": Map {},
                                  },
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                              },
                              "_context": {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": [],
                              "_validations": [
                                {
                                  "validate": [Function],
                                },
                              ],
                              "host": [Circular],
                              "id": "ServiceRole",
                              "scope": [Circular],
                            },
                            "permissionsBoundary": undefined,
                            "physicalName": "\${Token[TOKEN.665]}",
                            "policyFragment": PrincipalPolicyFragment {
                              "conditions": {},
                              "principalJson": {
                                "AWS": [
                                  "\${Token[TOKEN.672]}",
                                ],
                              },
                            },
                            "principalAccount": "\${Token[AWS.AccountId.2]}",
                            "roleArn": "\${Token[TOKEN.672]}",
                            "roleName": "\${Token[TOKEN.674]}",
                            "stack": [Circular],
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                        },
                        "_context": {},
                        "_dependencies": Set {},
                        "_locked": false,
                        "_metadata": [],
                        "_validations": [],
                        "host": [Circular],
                        "id": "framework-onEvent",
                        "scope": Provider {
                          "entrypoint": [Circular],
                          "isCompleteHandler": undefined,
                          "logRetention": undefined,
                          "node": Node {
                            "_children": {
                              "framework-onEvent": [Circular],
                            },
                            "_context": {},
                            "_dependencies": Set {},
                            "_locked": false,
                            "_metadata": [],
                            "_validations": [],
                            "host": [Circular],
                            "id": "Custom::GitopsSecrets",
                            "scope": [Circular],
                          },
                          "onEventHandler": [Circular],
                          "role": undefined,
                          "securityGroups": undefined,
                          "serviceToken": "\${Token[TOKEN.687]}",
                          "vpc": undefined,
                          "vpcSubnets": undefined,
                          Symbol(@aws-cdk/core.DependableTrait): {
                            "dependencyRoots": [
                              [Circular],
                            ],
                          },
                        },
                      },
                      "permissionsNode": Node {
                        "_children": {
                          "Code": Asset {
                            "assetHash": "903be65b9594a9f17d7120273620367e7830b6d087fc9591f31dc5a080049e46",
                            "assetPath": "asset.903be65b9594a9f17d7120273620367e7830b6d087fc9591f31dc5a080049e46",
                            "bucket": Import {
                              "_allowCrossEnvironment": false,
                              "_physicalName": undefined,
                              "autoCreatePolicy": false,
                              "bucketArn": "arn:\${Token[AWS.Partition.5]}:s3:::\${Token[TOKEN.676]}",
                              "bucketDomainName": "\${Token[TOKEN.676]}.s3.\${Token[AWS.URLSuffix.3]}",
                              "bucketDualStackDomainName": "\${Token[TOKEN.676]}.s3.dualstack.\${Token[AWS.Region.6]}.\${Token[AWS.URLSuffix.3]}",
                              "bucketName": "\${Token[TOKEN.676]}",
                              "bucketRegionalDomainName": "\${Token[TOKEN.676]}.s3.\${Token[AWS.Region.6]}.\${Token[AWS.URLSuffix.3]}",
                              "bucketWebsiteDomainName": "\${Token[TOKEN.676]}.\${Token[TOKEN.678]}",
                              "bucketWebsiteNewUrlFormat": false,
                              "bucketWebsiteUrl": "http://\${Token[TOKEN.676]}.\${Token[TOKEN.678]}",
                              "disallowPublicAccess": false,
                              "encryptionKey": undefined,
                              "env": {
                                "account": "\${Token[AWS.AccountId.2]}",
                                "region": "\${Token[AWS.Region.6]}",
                              },
                              "isWebsite": false,
                              "node": Node {
                                "_children": {},
                                "_context": {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": [],
                                "_validations": [
                                  {
                                    "validate": [Function],
                                  },
                                ],
                                "host": [Circular],
                                "id": "AssetBucket",
                                "scope": [Circular],
                              },
                              "notificationsHandlerRole": undefined,
                              "physicalName": "\${Token[TOKEN.679]}",
                              "policy": undefined,
                              "stack": [Circular],
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [
                                  [Circular],
                                ],
                              },
                            },
                            "httpUrl": "\${Token[TOKEN.675]}",
                            "isBundled": false,
                            "isFile": false,
                            "isZipArchive": true,
                            "node": Node {
                              "_children": {
                                "AssetBucket": Import {
                                  "_allowCrossEnvironment": false,
                                  "_physicalName": undefined,
                                  "autoCreatePolicy": false,
                                  "bucketArn": "arn:\${Token[AWS.Partition.5]}:s3:::\${Token[TOKEN.676]}",
                                  "bucketDomainName": "\${Token[TOKEN.676]}.s3.\${Token[AWS.URLSuffix.3]}",
                                  "bucketDualStackDomainName": "\${Token[TOKEN.676]}.s3.dualstack.\${Token[AWS.Region.6]}.\${Token[AWS.URLSuffix.3]}",
                                  "bucketName": "\${Token[TOKEN.676]}",
                                  "bucketRegionalDomainName": "\${Token[TOKEN.676]}.s3.\${Token[AWS.Region.6]}.\${Token[AWS.URLSuffix.3]}",
                                  "bucketWebsiteDomainName": "\${Token[TOKEN.676]}.\${Token[TOKEN.678]}",
                                  "bucketWebsiteNewUrlFormat": false,
                                  "bucketWebsiteUrl": "http://\${Token[TOKEN.676]}.\${Token[TOKEN.678]}",
                                  "disallowPublicAccess": false,
                                  "encryptionKey": undefined,
                                  "env": {
                                    "account": "\${Token[AWS.AccountId.2]}",
                                    "region": "\${Token[AWS.Region.6]}",
                                  },
                                  "isWebsite": false,
                                  "node": Node {
                                    "_children": {},
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [],
                                    "_validations": [
                                      {
                                        "validate": [Function],
                                      },
                                    ],
                                    "host": [Circular],
                                    "id": "AssetBucket",
                                    "scope": [Circular],
                                  },
                                  "notificationsHandlerRole": undefined,
                                  "physicalName": "\${Token[TOKEN.679]}",
                                  "policy": undefined,
                                  "stack": [Circular],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                                "Stage": AssetStaging {
                                  "absoluteStagedPath": "/private/var/folders/tn/799yyvm92g74fj_thj2z7w140000gr/T/cdk-test-app-WFT8EN/asset.903be65b9594a9f17d7120273620367e7830b6d087fc9591f31dc5a080049e46",
                                  "assetHash": "903be65b9594a9f17d7120273620367e7830b6d087fc9591f31dc5a080049e46",
                                  "assetOutdir": "/private/var/folders/tn/799yyvm92g74fj_thj2z7w140000gr/T/cdk-test-app-WFT8EN",
                                  "cacheKey": "d22374b7156fb41ff718678ed8dd7c65d1393bc2a81b4585d0905e2a290f281a",
                                  "customSourceFingerprint": undefined,
                                  "fingerprintOptions": {
                                    "assetHash": undefined,
                                    "exclude": [
                                      "*.ts",
                                    ],
                                    "extraHash": undefined,
                                    "follow": undefined,
                                    "path": "/Users/rverma/dev/aws/nsl-saas-accelerator/packages/constructs/node_modules/aws-cdk-lib/custom-resources/lib/provider-framework/runtime",
                                    "sourcePath": "/Users/rverma/dev/aws/nsl-saas-accelerator/packages/constructs/node_modules/aws-cdk-lib/custom-resources/lib/provider-framework/runtime",
                                  },
                                  "hashType": "source",
                                  "isArchive": true,
                                  "node": Node {
                                    "_children": {},
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [],
                                    "_validations": [],
                                    "host": [Circular],
                                    "id": "Stage",
                                    "scope": [Circular],
                                  },
                                  "packaging": "zip",
                                  "sourcePath": "/Users/rverma/dev/aws/nsl-saas-accelerator/packages/constructs/node_modules/aws-cdk-lib/custom-resources/lib/provider-framework/runtime",
                                  "sourceStats": Stats {
                                    "atime": 2023-04-19T02:38:43.261Z,
                                    "atimeMs": 1681871923261.3042,
                                    "birthtime": 2023-04-19T02:37:35.005Z,
                                    "birthtimeMs": 1681871855004.6274,
                                    "blksize": 4096,
                                    "blocks": 0,
                                    "ctime": 2023-04-19T02:37:35.007Z,
                                    "ctimeMs": 1681871855007.1067,
                                    "dev": 16777233,
                                    "gid": 20,
                                    "ino": 64198660,
                                    "mode": 16877,
                                    "mtime": 2023-04-19T02:37:35.007Z,
                                    "mtimeMs": 1681871855007.1067,
                                    "nlink": 12,
                                    "rdev": 0,
                                    "size": 384,
                                    "uid": 504,
                                  },
                                  "stagedPath": "/private/var/folders/tn/799yyvm92g74fj_thj2z7w140000gr/T/cdk-test-app-WFT8EN/asset.903be65b9594a9f17d7120273620367e7830b6d087fc9591f31dc5a080049e46",
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                              },
                              "_context": {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": [],
                              "_validations": [],
                              "host": [Circular],
                              "id": "Code",
                              "scope": [Circular],
                            },
                            "s3BucketName": "\${Token[TOKEN.676]}",
                            "s3ObjectKey": "REPLACED-GENERATED-NAME.zip",
                            "s3ObjectUrl": "\${Token[TOKEN.677]}",
                            "s3Url": "\${Token[TOKEN.675]}",
                            "sourceHash": "903be65b9594a9f17d7120273620367e7830b6d087fc9591f31dc5a080049e46",
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                          "Resource": CfnFunction {
                            "_cfnProperties": {
                              "architectures": undefined,
                              "code": {
                                "imageUri": undefined,
                                "s3Bucket": "\${Token[TOKEN.676]}",
                                "s3Key": "REPLACED-GENERATED-NAME.zip",
                                "s3ObjectVersion": undefined,
                                "zipFile": undefined,
                              },
                              "codeSigningConfigArn": undefined,
                              "deadLetterConfig": undefined,
                              "description": "AWS CDK resource provider framework - onEvent (Default/codeCommitSecret/Custom::GitopsSecrets)",
                              "environment": "<unresolved-lazy>",
                              "ephemeralStorage": undefined,
                              "fileSystemConfigs": undefined,
                              "functionName": "\${Token[TOKEN.664]}",
                              "handler": "framework.onEvent",
                              "imageConfig": undefined,
                              "kmsKeyArn": undefined,
                              "layers": [
                                "#{Token[TOKEN.680]}",
                              ],
                              "memorySize": undefined,
                              "packageType": undefined,
                              "reservedConcurrentExecutions": undefined,
                              "role": "\${Token[TOKEN.672]}",
                              "runtime": "nodejs14.x",
                              "runtimeManagementConfig": undefined,
                              "timeout": 900,
                              "vpcConfig": undefined,
                            },
                            "architectures": undefined,
                            "attrArn": "\${Token[TOKEN.682]}",
                            "attrSnapStartResponseApplyOn": "\${Token[TOKEN.683]}",
                            "attrSnapStartResponseOptimizationStatus": "\${Token[TOKEN.684]}",
                            "cfnOptions": {},
                            "cfnResourceType": "AWS::Lambda::Function",
                            "code": {
                              "imageUri": undefined,
                              "s3Bucket": "\${Token[TOKEN.676]}",
                              "s3Key": "REPLACED-GENERATED-NAME.zip",
                              "s3ObjectVersion": undefined,
                              "zipFile": undefined,
                            },
                            "codeSigningConfigArn": undefined,
                            "deadLetterConfig": undefined,
                            "dependsOn": Set {},
                            "description": "AWS CDK resource provider framework - onEvent (Default/codeCommitSecret/Custom::GitopsSecrets)",
                            "environment": "<unresolved-lazy>",
                            "ephemeralStorage": undefined,
                            "fileSystemConfigs": undefined,
                            "functionName": "\${Token[TOKEN.664]}",
                            "handler": "framework.onEvent",
                            "imageConfig": undefined,
                            "kmsKeyArn": undefined,
                            "layers": [
                              "#{Token[TOKEN.680]}",
                            ],
                            "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.Resource.LogicalID.681]}",
                            "memorySize": undefined,
                            "node": Node {
                              "_children": {},
                              "_context": {},
                              "_dependencies": Set {
                                Role {
                                  "_allowCrossEnvironment": false,
                                  "_didSplit": false,
                                  "_physicalName": undefined,
                                  "_roleId": "\${Token[TOKEN.671]}",
                                  "assumeRoleAction": "sts:AssumeRole",
                                  "assumeRolePolicy": {
                                    "Statement": [
                                      {
                                        "Action": "sts:AssumeRole",
                                        "Effect": "Allow",
                                        "Principal": {
                                          "Service": "\${Token[lambda.amazonaws.com.666]}",
                                        },
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "attachedPolicies": AttachedPolicies {
                                    "policies": [
                                      Policy {
                                        "_allowCrossEnvironment": false,
                                        "_physicalName": "\${Token[TOKEN.688]}",
                                        "_policyName": "\${Token[TOKEN.688]}",
                                        "document": {
                                          "Statement": [
                                            {
                                              "Action": "lambda:InvokeFunction",
                                              "Effect": "Allow",
                                              "Resource": [
                                                "\${Token[TOKEN.658]}",
                                                "\${Token[TOKEN.658]}:*",
                                              ],
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "env": {
                                          "account": "\${Token[AWS.AccountId.2]}",
                                          "region": "\${Token[AWS.Region.6]}",
                                        },
                                        "force": false,
                                        "grantPrincipal": PolicyGrantPrincipal {
                                          "_policy": [Circular],
                                          "assumeRoleAction": "sts:AssumeRole",
                                          "grantPrincipal": [Circular],
                                          "principalAccount": "\${Token[AWS.AccountId.2]}",
                                        },
                                        "groups": [],
                                        "node": Node {
                                          "_children": {
                                            "Resource": CfnPolicyConditional {
                                              "_cfnProperties": {
                                                "groups": [
                                                  "#{Token[TOKEN.691]}",
                                                ],
                                                "policyDocument": {
                                                  "Statement": [
                                                    {
                                                      "Action": "lambda:InvokeFunction",
                                                      "Effect": "Allow",
                                                      "Resource": [
                                                        "\${Token[TOKEN.658]}",
                                                        "\${Token[TOKEN.658]}:*",
                                                      ],
                                                    },
                                                  ],
                                                  "Version": "2012-10-17",
                                                },
                                                "policyName": "\${Token[TOKEN.688]}",
                                                "roles": [
                                                  "#{Token[TOKEN.689]}",
                                                ],
                                                "users": [
                                                  "#{Token[TOKEN.690]}",
                                                ],
                                              },
                                              "cfnOptions": {},
                                              "cfnResourceType": "AWS::IAM::Policy",
                                              "dependsOn": Set {},
                                              "groups": [
                                                "#{Token[TOKEN.691]}",
                                              ],
                                              "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                              "node": Node {
                                                "_children": {},
                                                "_context": {},
                                                "_dependencies": Set {},
                                                "_locked": false,
                                                "_metadata": [
                                                  {
                                                    "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                                    "trace": undefined,
                                                    "type": "aws:cdk:logicalId",
                                                  },
                                                ],
                                                "_validations": [],
                                                "host": [Circular],
                                                "id": "Resource",
                                                "scope": [Circular],
                                              },
                                              "policyDocument": {
                                                "Statement": [
                                                  {
                                                    "Action": "lambda:InvokeFunction",
                                                    "Effect": "Allow",
                                                    "Resource": [
                                                      "\${Token[TOKEN.658]}",
                                                      "\${Token[TOKEN.658]}:*",
                                                    ],
                                                  },
                                                ],
                                                "Version": "2012-10-17",
                                              },
                                              "policyName": "\${Token[TOKEN.688]}",
                                              "rawOverrides": {},
                                              "roles": [
                                                "#{Token[TOKEN.689]}",
                                              ],
                                              "stack": [Circular],
                                              "users": [
                                                "#{Token[TOKEN.690]}",
                                              ],
                                              Symbol(@aws-cdk/core.DependableTrait): {
                                                "dependencyRoots": [
                                                  [Circular],
                                                ],
                                              },
                                            },
                                          },
                                          "_context": {},
                                          "_dependencies": Set {},
                                          "_locked": false,
                                          "_metadata": [],
                                          "_validations": [
                                            {
                                              "validate": [Function],
                                            },
                                          ],
                                          "host": [Circular],
                                          "id": "DefaultPolicy",
                                          "scope": [Circular],
                                        },
                                        "physicalName": "\${Token[TOKEN.688]}",
                                        "referenceTaken": false,
                                        "roles": [
                                          [Circular],
                                        ],
                                        "stack": [Circular],
                                        "users": [],
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [
                                            [Circular],
                                          ],
                                        },
                                      },
                                    ],
                                  },
                                  "defaultPolicy": Policy {
                                    "_allowCrossEnvironment": false,
                                    "_physicalName": "\${Token[TOKEN.688]}",
                                    "_policyName": "\${Token[TOKEN.688]}",
                                    "document": {
                                      "Statement": [
                                        {
                                          "Action": "lambda:InvokeFunction",
                                          "Effect": "Allow",
                                          "Resource": [
                                            "\${Token[TOKEN.658]}",
                                            "\${Token[TOKEN.658]}:*",
                                          ],
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "env": {
                                      "account": "\${Token[AWS.AccountId.2]}",
                                      "region": "\${Token[AWS.Region.6]}",
                                    },
                                    "force": false,
                                    "grantPrincipal": PolicyGrantPrincipal {
                                      "_policy": [Circular],
                                      "assumeRoleAction": "sts:AssumeRole",
                                      "grantPrincipal": [Circular],
                                      "principalAccount": "\${Token[AWS.AccountId.2]}",
                                    },
                                    "groups": [],
                                    "node": Node {
                                      "_children": {
                                        "Resource": CfnPolicyConditional {
                                          "_cfnProperties": {
                                            "groups": [
                                              "#{Token[TOKEN.691]}",
                                            ],
                                            "policyDocument": {
                                              "Statement": [
                                                {
                                                  "Action": "lambda:InvokeFunction",
                                                  "Effect": "Allow",
                                                  "Resource": [
                                                    "\${Token[TOKEN.658]}",
                                                    "\${Token[TOKEN.658]}:*",
                                                  ],
                                                },
                                              ],
                                              "Version": "2012-10-17",
                                            },
                                            "policyName": "\${Token[TOKEN.688]}",
                                            "roles": [
                                              "#{Token[TOKEN.689]}",
                                            ],
                                            "users": [
                                              "#{Token[TOKEN.690]}",
                                            ],
                                          },
                                          "cfnOptions": {},
                                          "cfnResourceType": "AWS::IAM::Policy",
                                          "dependsOn": Set {},
                                          "groups": [
                                            "#{Token[TOKEN.691]}",
                                          ],
                                          "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                          "node": Node {
                                            "_children": {},
                                            "_context": {},
                                            "_dependencies": Set {},
                                            "_locked": false,
                                            "_metadata": [
                                              {
                                                "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                                "trace": undefined,
                                                "type": "aws:cdk:logicalId",
                                              },
                                            ],
                                            "_validations": [],
                                            "host": [Circular],
                                            "id": "Resource",
                                            "scope": [Circular],
                                          },
                                          "policyDocument": {
                                            "Statement": [
                                              {
                                                "Action": "lambda:InvokeFunction",
                                                "Effect": "Allow",
                                                "Resource": [
                                                  "\${Token[TOKEN.658]}",
                                                  "\${Token[TOKEN.658]}:*",
                                                ],
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "policyName": "\${Token[TOKEN.688]}",
                                          "rawOverrides": {},
                                          "roles": [
                                            "#{Token[TOKEN.689]}",
                                          ],
                                          "stack": [Circular],
                                          "users": [
                                            "#{Token[TOKEN.690]}",
                                          ],
                                          Symbol(@aws-cdk/core.DependableTrait): {
                                            "dependencyRoots": [
                                              [Circular],
                                            ],
                                          },
                                        },
                                      },
                                      "_context": {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": [],
                                      "_validations": [
                                        {
                                          "validate": [Function],
                                        },
                                      ],
                                      "host": [Circular],
                                      "id": "DefaultPolicy",
                                      "scope": [Circular],
                                    },
                                    "physicalName": "\${Token[TOKEN.688]}",
                                    "referenceTaken": false,
                                    "roles": [
                                      [Circular],
                                    ],
                                    "stack": [Circular],
                                    "users": [],
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [
                                        [Circular],
                                      ],
                                    },
                                  },
                                  "dependables": Map {
                                    {
                                      "Action": "lambda:InvokeFunction",
                                      "Effect": "Allow",
                                      "Resource": [
                                        "\${Token[TOKEN.658]}",
                                        "\${Token[TOKEN.658]}:*",
                                      ],
                                    } => DependencyGroup {
                                      "_deps": [],
                                      Symbol(@aws-cdk/core.DependableTrait): {
                                        "dependencyRoots": [],
                                      },
                                    },
                                  },
                                  "env": {
                                    "account": "\${Token[AWS.AccountId.2]}",
                                    "region": "\${Token[AWS.Region.6]}",
                                  },
                                  "grantPrincipal": [Circular],
                                  "inlinePolicies": {},
                                  "managedPolicies": [
                                    AwsManagedPolicy {
                                      "managedPolicyArn": "arn:\${Token[AWS.Partition.5]}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                                    },
                                  ],
                                  "node": Node {
                                    "_children": {
                                      "DefaultPolicy": Policy {
                                        "_allowCrossEnvironment": false,
                                        "_physicalName": "\${Token[TOKEN.688]}",
                                        "_policyName": "\${Token[TOKEN.688]}",
                                        "document": {
                                          "Statement": [
                                            {
                                              "Action": "lambda:InvokeFunction",
                                              "Effect": "Allow",
                                              "Resource": [
                                                "\${Token[TOKEN.658]}",
                                                "\${Token[TOKEN.658]}:*",
                                              ],
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "env": {
                                          "account": "\${Token[AWS.AccountId.2]}",
                                          "region": "\${Token[AWS.Region.6]}",
                                        },
                                        "force": false,
                                        "grantPrincipal": PolicyGrantPrincipal {
                                          "_policy": [Circular],
                                          "assumeRoleAction": "sts:AssumeRole",
                                          "grantPrincipal": [Circular],
                                          "principalAccount": "\${Token[AWS.AccountId.2]}",
                                        },
                                        "groups": [],
                                        "node": Node {
                                          "_children": {
                                            "Resource": CfnPolicyConditional {
                                              "_cfnProperties": {
                                                "groups": [
                                                  "#{Token[TOKEN.691]}",
                                                ],
                                                "policyDocument": {
                                                  "Statement": [
                                                    {
                                                      "Action": "lambda:InvokeFunction",
                                                      "Effect": "Allow",
                                                      "Resource": [
                                                        "\${Token[TOKEN.658]}",
                                                        "\${Token[TOKEN.658]}:*",
                                                      ],
                                                    },
                                                  ],
                                                  "Version": "2012-10-17",
                                                },
                                                "policyName": "\${Token[TOKEN.688]}",
                                                "roles": [
                                                  "#{Token[TOKEN.689]}",
                                                ],
                                                "users": [
                                                  "#{Token[TOKEN.690]}",
                                                ],
                                              },
                                              "cfnOptions": {},
                                              "cfnResourceType": "AWS::IAM::Policy",
                                              "dependsOn": Set {},
                                              "groups": [
                                                "#{Token[TOKEN.691]}",
                                              ],
                                              "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                              "node": Node {
                                                "_children": {},
                                                "_context": {},
                                                "_dependencies": Set {},
                                                "_locked": false,
                                                "_metadata": [
                                                  {
                                                    "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                                    "trace": undefined,
                                                    "type": "aws:cdk:logicalId",
                                                  },
                                                ],
                                                "_validations": [],
                                                "host": [Circular],
                                                "id": "Resource",
                                                "scope": [Circular],
                                              },
                                              "policyDocument": {
                                                "Statement": [
                                                  {
                                                    "Action": "lambda:InvokeFunction",
                                                    "Effect": "Allow",
                                                    "Resource": [
                                                      "\${Token[TOKEN.658]}",
                                                      "\${Token[TOKEN.658]}:*",
                                                    ],
                                                  },
                                                ],
                                                "Version": "2012-10-17",
                                              },
                                              "policyName": "\${Token[TOKEN.688]}",
                                              "rawOverrides": {},
                                              "roles": [
                                                "#{Token[TOKEN.689]}",
                                              ],
                                              "stack": [Circular],
                                              "users": [
                                                "#{Token[TOKEN.690]}",
                                              ],
                                              Symbol(@aws-cdk/core.DependableTrait): {
                                                "dependencyRoots": [
                                                  [Circular],
                                                ],
                                              },
                                            },
                                          },
                                          "_context": {},
                                          "_dependencies": Set {},
                                          "_locked": false,
                                          "_metadata": [],
                                          "_validations": [
                                            {
                                              "validate": [Function],
                                            },
                                          ],
                                          "host": [Circular],
                                          "id": "DefaultPolicy",
                                          "scope": [Circular],
                                        },
                                        "physicalName": "\${Token[TOKEN.688]}",
                                        "referenceTaken": false,
                                        "roles": [
                                          [Circular],
                                        ],
                                        "stack": [Circular],
                                        "users": [],
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [
                                            [Circular],
                                          ],
                                        },
                                      },
                                      "ImportServiceRole": ImportedRole {
                                        "_allowCrossEnvironment": false,
                                        "_physicalName": undefined,
                                        "assumeRoleAction": "sts:AssumeRole",
                                        "attachedPolicies": AttachedPolicies {
                                          "policies": [],
                                        },
                                        "defaultPolicyName": undefined,
                                        "env": {
                                          "account": "\${Token[AWS.AccountId.2]}",
                                          "region": "\${Token[AWS.Region.6]}",
                                        },
                                        "grantPrincipal": [Circular],
                                        "node": Node {
                                          "_children": {},
                                          "_context": {},
                                          "_dependencies": Set {},
                                          "_locked": false,
                                          "_metadata": [],
                                          "_validations": [],
                                          "host": [Circular],
                                          "id": "ImportServiceRole",
                                          "scope": [Circular],
                                        },
                                        "physicalName": "\${Token[TOKEN.667]}",
                                        "policyFragment": PrincipalPolicyFragment {
                                          "conditions": {},
                                          "principalJson": {
                                            "AWS": [
                                              "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                                            ],
                                          },
                                        },
                                        "principalAccount": "\${Token[AWS.AccountId.2]}",
                                        "roleArn": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                                        "roleName": "ServiceRole",
                                        "stack": [Circular],
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [
                                            [Circular],
                                          ],
                                        },
                                      },
                                      "Resource": CfnRole {
                                        "_cfnProperties": {
                                          "assumeRolePolicyDocument": {
                                            "Statement": [
                                              {
                                                "Action": "sts:AssumeRole",
                                                "Effect": "Allow",
                                                "Principal": {
                                                  "Service": "\${Token[lambda.amazonaws.com.666]}",
                                                },
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "description": undefined,
                                          "managedPolicyArns": [
                                            "#{Token[TOKEN.668]}",
                                          ],
                                          "maxSessionDuration": undefined,
                                          "path": undefined,
                                          "permissionsBoundary": undefined,
                                          "policies": undefined,
                                          "roleName": "\${Token[TOKEN.665]}",
                                        },
                                        "assumeRolePolicyDocument": {
                                          "Statement": [
                                            {
                                              "Action": "sts:AssumeRole",
                                              "Effect": "Allow",
                                              "Principal": {
                                                "Service": "\${Token[lambda.amazonaws.com.666]}",
                                              },
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "attrArn": "\${Token[TOKEN.670]}",
                                        "attrRoleId": "\${Token[TOKEN.671]}",
                                        "cfnOptions": {},
                                        "cfnResourceType": "AWS::IAM::Role",
                                        "dependsOn": Set {},
                                        "description": undefined,
                                        "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.Resource.LogicalID.669]}",
                                        "managedPolicyArns": [
                                          "#{Token[TOKEN.668]}",
                                        ],
                                        "maxSessionDuration": undefined,
                                        "node": Node {
                                          "_children": {},
                                          "_context": {},
                                          "_dependencies": Set {},
                                          "_locked": false,
                                          "_metadata": [
                                            {
                                              "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.Resource.LogicalID.669]}",
                                              "trace": undefined,
                                              "type": "aws:cdk:logicalId",
                                            },
                                          ],
                                          "_validations": [],
                                          "host": [Circular],
                                          "id": "Resource",
                                          "scope": [Circular],
                                        },
                                        "path": undefined,
                                        "permissionsBoundary": undefined,
                                        "policies": undefined,
                                        "rawOverrides": {},
                                        "roleName": "\${Token[TOKEN.665]}",
                                        "stack": [Circular],
                                        "tags": TagManager {
                                          "initialTagPriority": 50,
                                          "priorities": Map {},
                                          "renderedTags": "<unresolved-lazy>",
                                          "resourceTypeName": "AWS::IAM::Role",
                                          "tagFormatter": StandardFormatter {},
                                          "tagPropertyName": "tags",
                                          "tags": Map {},
                                        },
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [
                                            [Circular],
                                          ],
                                        },
                                      },
                                    },
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [],
                                    "_validations": [
                                      {
                                        "validate": [Function],
                                      },
                                    ],
                                    "host": [Circular],
                                    "id": "ServiceRole",
                                    "scope": [Circular],
                                  },
                                  "permissionsBoundary": undefined,
                                  "physicalName": "\${Token[TOKEN.665]}",
                                  "policyFragment": PrincipalPolicyFragment {
                                    "conditions": {},
                                    "principalJson": {
                                      "AWS": [
                                        "\${Token[TOKEN.672]}",
                                      ],
                                    },
                                  },
                                  "principalAccount": "\${Token[AWS.AccountId.2]}",
                                  "roleArn": "\${Token[TOKEN.672]}",
                                  "roleName": "\${Token[TOKEN.674]}",
                                  "stack": [Circular],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                              },
                              "_locked": false,
                              "_metadata": [
                                {
                                  "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.Resource.LogicalID.681]}",
                                  "trace": undefined,
                                  "type": "aws:cdk:logicalId",
                                },
                              ],
                              "_validations": [],
                              "host": [Circular],
                              "id": "Resource",
                              "scope": [Circular],
                            },
                            "packageType": undefined,
                            "rawOverrides": {},
                            "reservedConcurrentExecutions": undefined,
                            "role": "\${Token[TOKEN.672]}",
                            "runtime": "nodejs14.x",
                            "runtimeManagementConfig": undefined,
                            "snapStart": undefined,
                            "stack": [Circular],
                            "tags": TagManager {
                              "initialTagPriority": 50,
                              "priorities": Map {},
                              "renderedTags": "<unresolved-lazy>",
                              "resourceTypeName": "AWS::Lambda::Function",
                              "tagFormatter": StandardFormatter {},
                              "tagPropertyName": "tags",
                              "tags": Map {},
                            },
                            "timeout": 900,
                            "tracingConfig": undefined,
                            "vpcConfig": undefined,
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                          "ServiceRole": Role {
                            "_allowCrossEnvironment": false,
                            "_didSplit": false,
                            "_physicalName": undefined,
                            "_roleId": "\${Token[TOKEN.671]}",
                            "assumeRoleAction": "sts:AssumeRole",
                            "assumeRolePolicy": {
                              "Statement": [
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": {
                                    "Service": "\${Token[lambda.amazonaws.com.666]}",
                                  },
                                },
                              ],
                              "Version": "2012-10-17",
                            },
                            "attachedPolicies": AttachedPolicies {
                              "policies": [
                                Policy {
                                  "_allowCrossEnvironment": false,
                                  "_physicalName": "\${Token[TOKEN.688]}",
                                  "_policyName": "\${Token[TOKEN.688]}",
                                  "document": {
                                    "Statement": [
                                      {
                                        "Action": "lambda:InvokeFunction",
                                        "Effect": "Allow",
                                        "Resource": [
                                          "\${Token[TOKEN.658]}",
                                          "\${Token[TOKEN.658]}:*",
                                        ],
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "env": {
                                    "account": "\${Token[AWS.AccountId.2]}",
                                    "region": "\${Token[AWS.Region.6]}",
                                  },
                                  "force": false,
                                  "grantPrincipal": PolicyGrantPrincipal {
                                    "_policy": [Circular],
                                    "assumeRoleAction": "sts:AssumeRole",
                                    "grantPrincipal": [Circular],
                                    "principalAccount": "\${Token[AWS.AccountId.2]}",
                                  },
                                  "groups": [],
                                  "node": Node {
                                    "_children": {
                                      "Resource": CfnPolicyConditional {
                                        "_cfnProperties": {
                                          "groups": [
                                            "#{Token[TOKEN.691]}",
                                          ],
                                          "policyDocument": {
                                            "Statement": [
                                              {
                                                "Action": "lambda:InvokeFunction",
                                                "Effect": "Allow",
                                                "Resource": [
                                                  "\${Token[TOKEN.658]}",
                                                  "\${Token[TOKEN.658]}:*",
                                                ],
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "policyName": "\${Token[TOKEN.688]}",
                                          "roles": [
                                            "#{Token[TOKEN.689]}",
                                          ],
                                          "users": [
                                            "#{Token[TOKEN.690]}",
                                          ],
                                        },
                                        "cfnOptions": {},
                                        "cfnResourceType": "AWS::IAM::Policy",
                                        "dependsOn": Set {},
                                        "groups": [
                                          "#{Token[TOKEN.691]}",
                                        ],
                                        "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                        "node": Node {
                                          "_children": {},
                                          "_context": {},
                                          "_dependencies": Set {},
                                          "_locked": false,
                                          "_metadata": [
                                            {
                                              "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                              "trace": undefined,
                                              "type": "aws:cdk:logicalId",
                                            },
                                          ],
                                          "_validations": [],
                                          "host": [Circular],
                                          "id": "Resource",
                                          "scope": [Circular],
                                        },
                                        "policyDocument": {
                                          "Statement": [
                                            {
                                              "Action": "lambda:InvokeFunction",
                                              "Effect": "Allow",
                                              "Resource": [
                                                "\${Token[TOKEN.658]}",
                                                "\${Token[TOKEN.658]}:*",
                                              ],
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "policyName": "\${Token[TOKEN.688]}",
                                        "rawOverrides": {},
                                        "roles": [
                                          "#{Token[TOKEN.689]}",
                                        ],
                                        "stack": [Circular],
                                        "users": [
                                          "#{Token[TOKEN.690]}",
                                        ],
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [
                                            [Circular],
                                          ],
                                        },
                                      },
                                    },
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [],
                                    "_validations": [
                                      {
                                        "validate": [Function],
                                      },
                                    ],
                                    "host": [Circular],
                                    "id": "DefaultPolicy",
                                    "scope": [Circular],
                                  },
                                  "physicalName": "\${Token[TOKEN.688]}",
                                  "referenceTaken": false,
                                  "roles": [
                                    [Circular],
                                  ],
                                  "stack": [Circular],
                                  "users": [],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                              ],
                            },
                            "defaultPolicy": Policy {
                              "_allowCrossEnvironment": false,
                              "_physicalName": "\${Token[TOKEN.688]}",
                              "_policyName": "\${Token[TOKEN.688]}",
                              "document": {
                                "Statement": [
                                  {
                                    "Action": "lambda:InvokeFunction",
                                    "Effect": "Allow",
                                    "Resource": [
                                      "\${Token[TOKEN.658]}",
                                      "\${Token[TOKEN.658]}:*",
                                    ],
                                  },
                                ],
                                "Version": "2012-10-17",
                              },
                              "env": {
                                "account": "\${Token[AWS.AccountId.2]}",
                                "region": "\${Token[AWS.Region.6]}",
                              },
                              "force": false,
                              "grantPrincipal": PolicyGrantPrincipal {
                                "_policy": [Circular],
                                "assumeRoleAction": "sts:AssumeRole",
                                "grantPrincipal": [Circular],
                                "principalAccount": "\${Token[AWS.AccountId.2]}",
                              },
                              "groups": [],
                              "node": Node {
                                "_children": {
                                  "Resource": CfnPolicyConditional {
                                    "_cfnProperties": {
                                      "groups": [
                                        "#{Token[TOKEN.691]}",
                                      ],
                                      "policyDocument": {
                                        "Statement": [
                                          {
                                            "Action": "lambda:InvokeFunction",
                                            "Effect": "Allow",
                                            "Resource": [
                                              "\${Token[TOKEN.658]}",
                                              "\${Token[TOKEN.658]}:*",
                                            ],
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "policyName": "\${Token[TOKEN.688]}",
                                      "roles": [
                                        "#{Token[TOKEN.689]}",
                                      ],
                                      "users": [
                                        "#{Token[TOKEN.690]}",
                                      ],
                                    },
                                    "cfnOptions": {},
                                    "cfnResourceType": "AWS::IAM::Policy",
                                    "dependsOn": Set {},
                                    "groups": [
                                      "#{Token[TOKEN.691]}",
                                    ],
                                    "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                    "node": Node {
                                      "_children": {},
                                      "_context": {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": [
                                        {
                                          "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                          "trace": undefined,
                                          "type": "aws:cdk:logicalId",
                                        },
                                      ],
                                      "_validations": [],
                                      "host": [Circular],
                                      "id": "Resource",
                                      "scope": [Circular],
                                    },
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "lambda:InvokeFunction",
                                          "Effect": "Allow",
                                          "Resource": [
                                            "\${Token[TOKEN.658]}",
                                            "\${Token[TOKEN.658]}:*",
                                          ],
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "policyName": "\${Token[TOKEN.688]}",
                                    "rawOverrides": {},
                                    "roles": [
                                      "#{Token[TOKEN.689]}",
                                    ],
                                    "stack": [Circular],
                                    "users": [
                                      "#{Token[TOKEN.690]}",
                                    ],
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [
                                        [Circular],
                                      ],
                                    },
                                  },
                                },
                                "_context": {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": [],
                                "_validations": [
                                  {
                                    "validate": [Function],
                                  },
                                ],
                                "host": [Circular],
                                "id": "DefaultPolicy",
                                "scope": [Circular],
                              },
                              "physicalName": "\${Token[TOKEN.688]}",
                              "referenceTaken": false,
                              "roles": [
                                [Circular],
                              ],
                              "stack": [Circular],
                              "users": [],
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [
                                  [Circular],
                                ],
                              },
                            },
                            "dependables": Map {
                              {
                                "Action": "lambda:InvokeFunction",
                                "Effect": "Allow",
                                "Resource": [
                                  "\${Token[TOKEN.658]}",
                                  "\${Token[TOKEN.658]}:*",
                                ],
                              } => DependencyGroup {
                                "_deps": [],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [],
                                },
                              },
                            },
                            "env": {
                              "account": "\${Token[AWS.AccountId.2]}",
                              "region": "\${Token[AWS.Region.6]}",
                            },
                            "grantPrincipal": [Circular],
                            "inlinePolicies": {},
                            "managedPolicies": [
                              AwsManagedPolicy {
                                "managedPolicyArn": "arn:\${Token[AWS.Partition.5]}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                              },
                            ],
                            "node": Node {
                              "_children": {
                                "DefaultPolicy": Policy {
                                  "_allowCrossEnvironment": false,
                                  "_physicalName": "\${Token[TOKEN.688]}",
                                  "_policyName": "\${Token[TOKEN.688]}",
                                  "document": {
                                    "Statement": [
                                      {
                                        "Action": "lambda:InvokeFunction",
                                        "Effect": "Allow",
                                        "Resource": [
                                          "\${Token[TOKEN.658]}",
                                          "\${Token[TOKEN.658]}:*",
                                        ],
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "env": {
                                    "account": "\${Token[AWS.AccountId.2]}",
                                    "region": "\${Token[AWS.Region.6]}",
                                  },
                                  "force": false,
                                  "grantPrincipal": PolicyGrantPrincipal {
                                    "_policy": [Circular],
                                    "assumeRoleAction": "sts:AssumeRole",
                                    "grantPrincipal": [Circular],
                                    "principalAccount": "\${Token[AWS.AccountId.2]}",
                                  },
                                  "groups": [],
                                  "node": Node {
                                    "_children": {
                                      "Resource": CfnPolicyConditional {
                                        "_cfnProperties": {
                                          "groups": [
                                            "#{Token[TOKEN.691]}",
                                          ],
                                          "policyDocument": {
                                            "Statement": [
                                              {
                                                "Action": "lambda:InvokeFunction",
                                                "Effect": "Allow",
                                                "Resource": [
                                                  "\${Token[TOKEN.658]}",
                                                  "\${Token[TOKEN.658]}:*",
                                                ],
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "policyName": "\${Token[TOKEN.688]}",
                                          "roles": [
                                            "#{Token[TOKEN.689]}",
                                          ],
                                          "users": [
                                            "#{Token[TOKEN.690]}",
                                          ],
                                        },
                                        "cfnOptions": {},
                                        "cfnResourceType": "AWS::IAM::Policy",
                                        "dependsOn": Set {},
                                        "groups": [
                                          "#{Token[TOKEN.691]}",
                                        ],
                                        "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                        "node": Node {
                                          "_children": {},
                                          "_context": {},
                                          "_dependencies": Set {},
                                          "_locked": false,
                                          "_metadata": [
                                            {
                                              "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                              "trace": undefined,
                                              "type": "aws:cdk:logicalId",
                                            },
                                          ],
                                          "_validations": [],
                                          "host": [Circular],
                                          "id": "Resource",
                                          "scope": [Circular],
                                        },
                                        "policyDocument": {
                                          "Statement": [
                                            {
                                              "Action": "lambda:InvokeFunction",
                                              "Effect": "Allow",
                                              "Resource": [
                                                "\${Token[TOKEN.658]}",
                                                "\${Token[TOKEN.658]}:*",
                                              ],
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "policyName": "\${Token[TOKEN.688]}",
                                        "rawOverrides": {},
                                        "roles": [
                                          "#{Token[TOKEN.689]}",
                                        ],
                                        "stack": [Circular],
                                        "users": [
                                          "#{Token[TOKEN.690]}",
                                        ],
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [
                                            [Circular],
                                          ],
                                        },
                                      },
                                    },
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [],
                                    "_validations": [
                                      {
                                        "validate": [Function],
                                      },
                                    ],
                                    "host": [Circular],
                                    "id": "DefaultPolicy",
                                    "scope": [Circular],
                                  },
                                  "physicalName": "\${Token[TOKEN.688]}",
                                  "referenceTaken": false,
                                  "roles": [
                                    [Circular],
                                  ],
                                  "stack": [Circular],
                                  "users": [],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                                "ImportServiceRole": ImportedRole {
                                  "_allowCrossEnvironment": false,
                                  "_physicalName": undefined,
                                  "assumeRoleAction": "sts:AssumeRole",
                                  "attachedPolicies": AttachedPolicies {
                                    "policies": [],
                                  },
                                  "defaultPolicyName": undefined,
                                  "env": {
                                    "account": "\${Token[AWS.AccountId.2]}",
                                    "region": "\${Token[AWS.Region.6]}",
                                  },
                                  "grantPrincipal": [Circular],
                                  "node": Node {
                                    "_children": {},
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [],
                                    "_validations": [],
                                    "host": [Circular],
                                    "id": "ImportServiceRole",
                                    "scope": [Circular],
                                  },
                                  "physicalName": "\${Token[TOKEN.667]}",
                                  "policyFragment": PrincipalPolicyFragment {
                                    "conditions": {},
                                    "principalJson": {
                                      "AWS": [
                                        "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                                      ],
                                    },
                                  },
                                  "principalAccount": "\${Token[AWS.AccountId.2]}",
                                  "roleArn": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                                  "roleName": "ServiceRole",
                                  "stack": [Circular],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                                "Resource": CfnRole {
                                  "_cfnProperties": {
                                    "assumeRolePolicyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "sts:AssumeRole",
                                          "Effect": "Allow",
                                          "Principal": {
                                            "Service": "\${Token[lambda.amazonaws.com.666]}",
                                          },
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "description": undefined,
                                    "managedPolicyArns": [
                                      "#{Token[TOKEN.668]}",
                                    ],
                                    "maxSessionDuration": undefined,
                                    "path": undefined,
                                    "permissionsBoundary": undefined,
                                    "policies": undefined,
                                    "roleName": "\${Token[TOKEN.665]}",
                                  },
                                  "assumeRolePolicyDocument": {
                                    "Statement": [
                                      {
                                        "Action": "sts:AssumeRole",
                                        "Effect": "Allow",
                                        "Principal": {
                                          "Service": "\${Token[lambda.amazonaws.com.666]}",
                                        },
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "attrArn": "\${Token[TOKEN.670]}",
                                  "attrRoleId": "\${Token[TOKEN.671]}",
                                  "cfnOptions": {},
                                  "cfnResourceType": "AWS::IAM::Role",
                                  "dependsOn": Set {},
                                  "description": undefined,
                                  "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.Resource.LogicalID.669]}",
                                  "managedPolicyArns": [
                                    "#{Token[TOKEN.668]}",
                                  ],
                                  "maxSessionDuration": undefined,
                                  "node": Node {
                                    "_children": {},
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [
                                      {
                                        "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.Resource.LogicalID.669]}",
                                        "trace": undefined,
                                        "type": "aws:cdk:logicalId",
                                      },
                                    ],
                                    "_validations": [],
                                    "host": [Circular],
                                    "id": "Resource",
                                    "scope": [Circular],
                                  },
                                  "path": undefined,
                                  "permissionsBoundary": undefined,
                                  "policies": undefined,
                                  "rawOverrides": {},
                                  "roleName": "\${Token[TOKEN.665]}",
                                  "stack": [Circular],
                                  "tags": TagManager {
                                    "initialTagPriority": 50,
                                    "priorities": Map {},
                                    "renderedTags": "<unresolved-lazy>",
                                    "resourceTypeName": "AWS::IAM::Role",
                                    "tagFormatter": StandardFormatter {},
                                    "tagPropertyName": "tags",
                                    "tags": Map {},
                                  },
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                              },
                              "_context": {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": [],
                              "_validations": [
                                {
                                  "validate": [Function],
                                },
                              ],
                              "host": [Circular],
                              "id": "ServiceRole",
                              "scope": [Circular],
                            },
                            "permissionsBoundary": undefined,
                            "physicalName": "\${Token[TOKEN.665]}",
                            "policyFragment": PrincipalPolicyFragment {
                              "conditions": {},
                              "principalJson": {
                                "AWS": [
                                  "\${Token[TOKEN.672]}",
                                ],
                              },
                            },
                            "principalAccount": "\${Token[AWS.AccountId.2]}",
                            "roleArn": "\${Token[TOKEN.672]}",
                            "roleName": "\${Token[TOKEN.674]}",
                            "stack": [Circular],
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                        },
                        "_context": {},
                        "_dependencies": Set {},
                        "_locked": false,
                        "_metadata": [],
                        "_validations": [],
                        "host": [Circular],
                        "id": "framework-onEvent",
                        "scope": Provider {
                          "entrypoint": [Circular],
                          "isCompleteHandler": undefined,
                          "logRetention": undefined,
                          "node": Node {
                            "_children": {
                              "framework-onEvent": [Circular],
                            },
                            "_context": {},
                            "_dependencies": Set {},
                            "_locked": false,
                            "_metadata": [],
                            "_validations": [],
                            "host": [Circular],
                            "id": "Custom::GitopsSecrets",
                            "scope": [Circular],
                          },
                          "onEventHandler": [Circular],
                          "role": undefined,
                          "securityGroups": undefined,
                          "serviceToken": "\${Token[TOKEN.687]}",
                          "vpc": undefined,
                          "vpcSubnets": undefined,
                          Symbol(@aws-cdk/core.DependableTrait): {
                            "dependencyRoots": [
                              [Circular],
                            ],
                          },
                        },
                      },
                      "physicalName": "\${Token[TOKEN.664]}",
                      "role": Role {
                        "_allowCrossEnvironment": false,
                        "_didSplit": false,
                        "_physicalName": undefined,
                        "_roleId": "\${Token[TOKEN.671]}",
                        "assumeRoleAction": "sts:AssumeRole",
                        "assumeRolePolicy": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "\${Token[lambda.amazonaws.com.666]}",
                              },
                            },
                          ],
                          "Version": "2012-10-17",
                        },
                        "attachedPolicies": AttachedPolicies {
                          "policies": [
                            Policy {
                              "_allowCrossEnvironment": false,
                              "_physicalName": "\${Token[TOKEN.688]}",
                              "_policyName": "\${Token[TOKEN.688]}",
                              "document": {
                                "Statement": [
                                  {
                                    "Action": "lambda:InvokeFunction",
                                    "Effect": "Allow",
                                    "Resource": [
                                      "\${Token[TOKEN.658]}",
                                      "\${Token[TOKEN.658]}:*",
                                    ],
                                  },
                                ],
                                "Version": "2012-10-17",
                              },
                              "env": {
                                "account": "\${Token[AWS.AccountId.2]}",
                                "region": "\${Token[AWS.Region.6]}",
                              },
                              "force": false,
                              "grantPrincipal": PolicyGrantPrincipal {
                                "_policy": [Circular],
                                "assumeRoleAction": "sts:AssumeRole",
                                "grantPrincipal": [Circular],
                                "principalAccount": "\${Token[AWS.AccountId.2]}",
                              },
                              "groups": [],
                              "node": Node {
                                "_children": {
                                  "Resource": CfnPolicyConditional {
                                    "_cfnProperties": {
                                      "groups": [
                                        "#{Token[TOKEN.691]}",
                                      ],
                                      "policyDocument": {
                                        "Statement": [
                                          {
                                            "Action": "lambda:InvokeFunction",
                                            "Effect": "Allow",
                                            "Resource": [
                                              "\${Token[TOKEN.658]}",
                                              "\${Token[TOKEN.658]}:*",
                                            ],
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "policyName": "\${Token[TOKEN.688]}",
                                      "roles": [
                                        "#{Token[TOKEN.689]}",
                                      ],
                                      "users": [
                                        "#{Token[TOKEN.690]}",
                                      ],
                                    },
                                    "cfnOptions": {},
                                    "cfnResourceType": "AWS::IAM::Policy",
                                    "dependsOn": Set {},
                                    "groups": [
                                      "#{Token[TOKEN.691]}",
                                    ],
                                    "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                    "node": Node {
                                      "_children": {},
                                      "_context": {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": [
                                        {
                                          "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                          "trace": undefined,
                                          "type": "aws:cdk:logicalId",
                                        },
                                      ],
                                      "_validations": [],
                                      "host": [Circular],
                                      "id": "Resource",
                                      "scope": [Circular],
                                    },
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "lambda:InvokeFunction",
                                          "Effect": "Allow",
                                          "Resource": [
                                            "\${Token[TOKEN.658]}",
                                            "\${Token[TOKEN.658]}:*",
                                          ],
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "policyName": "\${Token[TOKEN.688]}",
                                    "rawOverrides": {},
                                    "roles": [
                                      "#{Token[TOKEN.689]}",
                                    ],
                                    "stack": [Circular],
                                    "users": [
                                      "#{Token[TOKEN.690]}",
                                    ],
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [
                                        [Circular],
                                      ],
                                    },
                                  },
                                },
                                "_context": {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": [],
                                "_validations": [
                                  {
                                    "validate": [Function],
                                  },
                                ],
                                "host": [Circular],
                                "id": "DefaultPolicy",
                                "scope": [Circular],
                              },
                              "physicalName": "\${Token[TOKEN.688]}",
                              "referenceTaken": false,
                              "roles": [
                                [Circular],
                              ],
                              "stack": [Circular],
                              "users": [],
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [
                                  [Circular],
                                ],
                              },
                            },
                          ],
                        },
                        "defaultPolicy": Policy {
                          "_allowCrossEnvironment": false,
                          "_physicalName": "\${Token[TOKEN.688]}",
                          "_policyName": "\${Token[TOKEN.688]}",
                          "document": {
                            "Statement": [
                              {
                                "Action": "lambda:InvokeFunction",
                                "Effect": "Allow",
                                "Resource": [
                                  "\${Token[TOKEN.658]}",
                                  "\${Token[TOKEN.658]}:*",
                                ],
                              },
                            ],
                            "Version": "2012-10-17",
                          },
                          "env": {
                            "account": "\${Token[AWS.AccountId.2]}",
                            "region": "\${Token[AWS.Region.6]}",
                          },
                          "force": false,
                          "grantPrincipal": PolicyGrantPrincipal {
                            "_policy": [Circular],
                            "assumeRoleAction": "sts:AssumeRole",
                            "grantPrincipal": [Circular],
                            "principalAccount": "\${Token[AWS.AccountId.2]}",
                          },
                          "groups": [],
                          "node": Node {
                            "_children": {
                              "Resource": CfnPolicyConditional {
                                "_cfnProperties": {
                                  "groups": [
                                    "#{Token[TOKEN.691]}",
                                  ],
                                  "policyDocument": {
                                    "Statement": [
                                      {
                                        "Action": "lambda:InvokeFunction",
                                        "Effect": "Allow",
                                        "Resource": [
                                          "\${Token[TOKEN.658]}",
                                          "\${Token[TOKEN.658]}:*",
                                        ],
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "policyName": "\${Token[TOKEN.688]}",
                                  "roles": [
                                    "#{Token[TOKEN.689]}",
                                  ],
                                  "users": [
                                    "#{Token[TOKEN.690]}",
                                  ],
                                },
                                "cfnOptions": {},
                                "cfnResourceType": "AWS::IAM::Policy",
                                "dependsOn": Set {},
                                "groups": [
                                  "#{Token[TOKEN.691]}",
                                ],
                                "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                "node": Node {
                                  "_children": {},
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [
                                    {
                                      "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                      "trace": undefined,
                                      "type": "aws:cdk:logicalId",
                                    },
                                  ],
                                  "_validations": [],
                                  "host": [Circular],
                                  "id": "Resource",
                                  "scope": [Circular],
                                },
                                "policyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "lambda:InvokeFunction",
                                      "Effect": "Allow",
                                      "Resource": [
                                        "\${Token[TOKEN.658]}",
                                        "\${Token[TOKEN.658]}:*",
                                      ],
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "policyName": "\${Token[TOKEN.688]}",
                                "rawOverrides": {},
                                "roles": [
                                  "#{Token[TOKEN.689]}",
                                ],
                                "stack": [Circular],
                                "users": [
                                  "#{Token[TOKEN.690]}",
                                ],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                            },
                            "_context": {},
                            "_dependencies": Set {},
                            "_locked": false,
                            "_metadata": [],
                            "_validations": [
                              {
                                "validate": [Function],
                              },
                            ],
                            "host": [Circular],
                            "id": "DefaultPolicy",
                            "scope": [Circular],
                          },
                          "physicalName": "\${Token[TOKEN.688]}",
                          "referenceTaken": false,
                          "roles": [
                            [Circular],
                          ],
                          "stack": [Circular],
                          "users": [],
                          Symbol(@aws-cdk/core.DependableTrait): {
                            "dependencyRoots": [
                              [Circular],
                            ],
                          },
                        },
                        "dependables": Map {
                          {
                            "Action": "lambda:InvokeFunction",
                            "Effect": "Allow",
                            "Resource": [
                              "\${Token[TOKEN.658]}",
                              "\${Token[TOKEN.658]}:*",
                            ],
                          } => DependencyGroup {
                            "_deps": [],
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [],
                            },
                          },
                        },
                        "env": {
                          "account": "\${Token[AWS.AccountId.2]}",
                          "region": "\${Token[AWS.Region.6]}",
                        },
                        "grantPrincipal": [Circular],
                        "inlinePolicies": {},
                        "managedPolicies": [
                          AwsManagedPolicy {
                            "managedPolicyArn": "arn:\${Token[AWS.Partition.5]}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                          },
                        ],
                        "node": Node {
                          "_children": {
                            "DefaultPolicy": Policy {
                              "_allowCrossEnvironment": false,
                              "_physicalName": "\${Token[TOKEN.688]}",
                              "_policyName": "\${Token[TOKEN.688]}",
                              "document": {
                                "Statement": [
                                  {
                                    "Action": "lambda:InvokeFunction",
                                    "Effect": "Allow",
                                    "Resource": [
                                      "\${Token[TOKEN.658]}",
                                      "\${Token[TOKEN.658]}:*",
                                    ],
                                  },
                                ],
                                "Version": "2012-10-17",
                              },
                              "env": {
                                "account": "\${Token[AWS.AccountId.2]}",
                                "region": "\${Token[AWS.Region.6]}",
                              },
                              "force": false,
                              "grantPrincipal": PolicyGrantPrincipal {
                                "_policy": [Circular],
                                "assumeRoleAction": "sts:AssumeRole",
                                "grantPrincipal": [Circular],
                                "principalAccount": "\${Token[AWS.AccountId.2]}",
                              },
                              "groups": [],
                              "node": Node {
                                "_children": {
                                  "Resource": CfnPolicyConditional {
                                    "_cfnProperties": {
                                      "groups": [
                                        "#{Token[TOKEN.691]}",
                                      ],
                                      "policyDocument": {
                                        "Statement": [
                                          {
                                            "Action": "lambda:InvokeFunction",
                                            "Effect": "Allow",
                                            "Resource": [
                                              "\${Token[TOKEN.658]}",
                                              "\${Token[TOKEN.658]}:*",
                                            ],
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "policyName": "\${Token[TOKEN.688]}",
                                      "roles": [
                                        "#{Token[TOKEN.689]}",
                                      ],
                                      "users": [
                                        "#{Token[TOKEN.690]}",
                                      ],
                                    },
                                    "cfnOptions": {},
                                    "cfnResourceType": "AWS::IAM::Policy",
                                    "dependsOn": Set {},
                                    "groups": [
                                      "#{Token[TOKEN.691]}",
                                    ],
                                    "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                    "node": Node {
                                      "_children": {},
                                      "_context": {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": [
                                        {
                                          "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.DefaultPolicy.Resource.LogicalID.692]}",
                                          "trace": undefined,
                                          "type": "aws:cdk:logicalId",
                                        },
                                      ],
                                      "_validations": [],
                                      "host": [Circular],
                                      "id": "Resource",
                                      "scope": [Circular],
                                    },
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "lambda:InvokeFunction",
                                          "Effect": "Allow",
                                          "Resource": [
                                            "\${Token[TOKEN.658]}",
                                            "\${Token[TOKEN.658]}:*",
                                          ],
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "policyName": "\${Token[TOKEN.688]}",
                                    "rawOverrides": {},
                                    "roles": [
                                      "#{Token[TOKEN.689]}",
                                    ],
                                    "stack": [Circular],
                                    "users": [
                                      "#{Token[TOKEN.690]}",
                                    ],
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [
                                        [Circular],
                                      ],
                                    },
                                  },
                                },
                                "_context": {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": [],
                                "_validations": [
                                  {
                                    "validate": [Function],
                                  },
                                ],
                                "host": [Circular],
                                "id": "DefaultPolicy",
                                "scope": [Circular],
                              },
                              "physicalName": "\${Token[TOKEN.688]}",
                              "referenceTaken": false,
                              "roles": [
                                [Circular],
                              ],
                              "stack": [Circular],
                              "users": [],
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [
                                  [Circular],
                                ],
                              },
                            },
                            "ImportServiceRole": ImportedRole {
                              "_allowCrossEnvironment": false,
                              "_physicalName": undefined,
                              "assumeRoleAction": "sts:AssumeRole",
                              "attachedPolicies": AttachedPolicies {
                                "policies": [],
                              },
                              "defaultPolicyName": undefined,
                              "env": {
                                "account": "\${Token[AWS.AccountId.2]}",
                                "region": "\${Token[AWS.Region.6]}",
                              },
                              "grantPrincipal": [Circular],
                              "node": Node {
                                "_children": {},
                                "_context": {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": [],
                                "_validations": [],
                                "host": [Circular],
                                "id": "ImportServiceRole",
                                "scope": [Circular],
                              },
                              "physicalName": "\${Token[TOKEN.667]}",
                              "policyFragment": PrincipalPolicyFragment {
                                "conditions": {},
                                "principalJson": {
                                  "AWS": [
                                    "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                                  ],
                                },
                              },
                              "principalAccount": "\${Token[AWS.AccountId.2]}",
                              "roleArn": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                              "roleName": "ServiceRole",
                              "stack": [Circular],
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [
                                  [Circular],
                                ],
                              },
                            },
                            "Resource": CfnRole {
                              "_cfnProperties": {
                                "assumeRolePolicyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Principal": {
                                        "Service": "\${Token[lambda.amazonaws.com.666]}",
                                      },
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "description": undefined,
                                "managedPolicyArns": [
                                  "#{Token[TOKEN.668]}",
                                ],
                                "maxSessionDuration": undefined,
                                "path": undefined,
                                "permissionsBoundary": undefined,
                                "policies": undefined,
                                "roleName": "\${Token[TOKEN.665]}",
                              },
                              "assumeRolePolicyDocument": {
                                "Statement": [
                                  {
                                    "Action": "sts:AssumeRole",
                                    "Effect": "Allow",
                                    "Principal": {
                                      "Service": "\${Token[lambda.amazonaws.com.666]}",
                                    },
                                  },
                                ],
                                "Version": "2012-10-17",
                              },
                              "attrArn": "\${Token[TOKEN.670]}",
                              "attrRoleId": "\${Token[TOKEN.671]}",
                              "cfnOptions": {},
                              "cfnResourceType": "AWS::IAM::Role",
                              "dependsOn": Set {},
                              "description": undefined,
                              "logicalId": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.Resource.LogicalID.669]}",
                              "managedPolicyArns": [
                                "#{Token[TOKEN.668]}",
                              ],
                              "maxSessionDuration": undefined,
                              "node": Node {
                                "_children": {},
                                "_context": {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": [
                                  {
                                    "data": "\${Token[Default.codeCommitSecret.Custom::GitopsSecrets.framework-onEvent.ServiceRole.Resource.LogicalID.669]}",
                                    "trace": undefined,
                                    "type": "aws:cdk:logicalId",
                                  },
                                ],
                                "_validations": [],
                                "host": [Circular],
                                "id": "Resource",
                                "scope": [Circular],
                              },
                              "path": undefined,
                              "permissionsBoundary": undefined,
                              "policies": undefined,
                              "rawOverrides": {},
                              "roleName": "\${Token[TOKEN.665]}",
                              "stack": [Circular],
                              "tags": TagManager {
                                "initialTagPriority": 50,
                                "priorities": Map {},
                                "renderedTags": "<unresolved-lazy>",
                                "resourceTypeName": "AWS::IAM::Role",
                                "tagFormatter": StandardFormatter {},
                                "tagPropertyName": "tags",
                                "tags": Map {},
                              },
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [
                                  [Circular],
                                ],
                              },
                            },
                          },
                          "_context": {},
                          "_dependencies": Set {},
                          "_locked": false,
                          "_metadata": [],
                          "_validations": [
                            {
                              "validate": [Function],
                            },
                          ],
                          "host": [Circular],
                          "id": "ServiceRole",
                          "scope": [Circular],
                        },
                        "permissionsBoundary": undefined,
                        "physicalName": "\${Token[TOKEN.665]}",
                        "policyFragment": PrincipalPolicyFragment {
                          "conditions": {},
                          "principalJson": {
                            "AWS": [
                              "\${Token[TOKEN.672]}",
                            ],
                          },
                        },
                        "principalAccount": "\${Token[AWS.AccountId.2]}",
                        "roleArn": "\${Token[TOKEN.672]}",
                        "roleName": "\${Token[TOKEN.674]}",
                        "stack": [Circular],
                        Symbol(@aws-cdk/core.DependableTrait): {
                          "dependencyRoots": [
                            [Circular],
                          ],
                        },
                      },
                      "runtime": Runtime {
                        "bundlingDockerImage": "public.ecr.aws/sam/build-nodejs14.x",
                        "bundlingImage": "public.ecr.aws/sam/build-nodejs14.x",
                        "family": 0,
                        "name": "nodejs14.x",
                        "supportsCodeGuruProfiling": false,
                        "supportsInlineCode": true,
                      },
                      "stack": [Circular],
                      "timeout": Duration {
                        "amount": 15,
                        "unit": TimeUnit {
                          "inMillis": 60000,
                          "isoLabel": "M",
                          "label": "minutes",
                        },
                      },
                      Symbol(@aws-cdk/core.DependableTrait): {
                        "dependencyRoots": [
                          [Circular],
                        ],
                      },
                    },
                    "resource": {
                      "addToResourcePolicy": [Function],
                      "applyRemovalPolicy": [Function],
                      "env": {
                        "account": "\${Token[AWS.AccountId.2]}",
                        "region": "\${Token[AWS.Region.6]}",
                      },
                      "node": Node {
                        "_children": {
                          "Code": Asset {
                            "assetHash": "437761578112cb81b0b580e5b870f6bb63cb2ab57ec7b59e9c0cf3dd5ce02013",
                            "assetPath": "asset.437761578112cb81b0b580e5b870f6bb63cb2ab57ec7b59e9c0cf3dd5ce02013",
                            "bucket": Import {
                              "_allowCrossEnvironment": false,
                              "_physicalName": undefined,
                              "autoCreatePolicy": false,
                              "bucketArn": "arn:\${Token[AWS.Partition.5]}:s3:::\${Token[TOKEN.647]}",
                              "bucketDomainName": "\${Token[TOKEN.647]}.s3.\${Token[AWS.URLSuffix.3]}",
                              "bucketDualStackDomainName": "\${Token[TOKEN.647]}.s3.dualstack.\${Token[AWS.Region.6]}.\${Token[AWS.URLSuffix.3]}",
                              "bucketName": "\${Token[TOKEN.647]}",
                              "bucketRegionalDomainName": "\${Token[TOKEN.647]}.s3.\${Token[AWS.Region.6]}.\${Token[AWS.URLSuffix.3]}",
                              "bucketWebsiteDomainName": "\${Token[TOKEN.647]}.\${Token[TOKEN.649]}",
                              "bucketWebsiteNewUrlFormat": false,
                              "bucketWebsiteUrl": "http://\${Token[TOKEN.647]}.\${Token[TOKEN.649]}",
                              "disallowPublicAccess": false,
                              "encryptionKey": undefined,
                              "env": {
                                "account": "\${Token[AWS.AccountId.2]}",
                                "region": "\${Token[AWS.Region.6]}",
                              },
                              "isWebsite": false,
                              "node": Node {
                                "_children": {},
                                "_context": {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": [],
                                "_validations": [
                                  {
                                    "validate": [Function],
                                  },
                                ],
                                "host": [Circular],
                                "id": "AssetBucket",
                                "scope": [Circular],
                              },
                              "notificationsHandlerRole": undefined,
                              "physicalName": "\${Token[TOKEN.650]}",
                              "policy": undefined,
                              "stack": [Circular],
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [
                                  [Circular],
                                ],
                              },
                            },
                            "httpUrl": "\${Token[TOKEN.646]}",
                            "isBundled": false,
                            "isFile": false,
                            "isZipArchive": true,
                            "node": Node {
                              "_children": {
                                "AssetBucket": Import {
                                  "_allowCrossEnvironment": false,
                                  "_physicalName": undefined,
                                  "autoCreatePolicy": false,
                                  "bucketArn": "arn:\${Token[AWS.Partition.5]}:s3:::\${Token[TOKEN.647]}",
                                  "bucketDomainName": "\${Token[TOKEN.647]}.s3.\${Token[AWS.URLSuffix.3]}",
                                  "bucketDualStackDomainName": "\${Token[TOKEN.647]}.s3.dualstack.\${Token[AWS.Region.6]}.\${Token[AWS.URLSuffix.3]}",
                                  "bucketName": "\${Token[TOKEN.647]}",
                                  "bucketRegionalDomainName": "\${Token[TOKEN.647]}.s3.\${Token[AWS.Region.6]}.\${Token[AWS.URLSuffix.3]}",
                                  "bucketWebsiteDomainName": "\${Token[TOKEN.647]}.\${Token[TOKEN.649]}",
                                  "bucketWebsiteNewUrlFormat": false,
                                  "bucketWebsiteUrl": "http://\${Token[TOKEN.647]}.\${Token[TOKEN.649]}",
                                  "disallowPublicAccess": false,
                                  "encryptionKey": undefined,
                                  "env": {
                                    "account": "\${Token[AWS.AccountId.2]}",
                                    "region": "\${Token[AWS.Region.6]}",
                                  },
                                  "isWebsite": false,
                                  "node": Node {
                                    "_children": {},
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [],
                                    "_validations": [
                                      {
                                        "validate": [Function],
                                      },
                                    ],
                                    "host": [Circular],
                                    "id": "AssetBucket",
                                    "scope": [Circular],
                                  },
                                  "notificationsHandlerRole": undefined,
                                  "physicalName": "\${Token[TOKEN.650]}",
                                  "policy": undefined,
                                  "stack": [Circular],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                                "Stage": AssetStaging {
                                  "absoluteStagedPath": "/private/var/folders/tn/799yyvm92g74fj_thj2z7w140000gr/T/cdk-test-app-WFT8EN/asset.437761578112cb81b0b580e5b870f6bb63cb2ab57ec7b59e9c0cf3dd5ce02013",
                                  "assetHash": "437761578112cb81b0b580e5b870f6bb63cb2ab57ec7b59e9c0cf3dd5ce02013",
                                  "assetOutdir": "/private/var/folders/tn/799yyvm92g74fj_thj2z7w140000gr/T/cdk-test-app-WFT8EN",
                                  "cacheKey": "944e1635f7fdfeb3073e35dcc76cabb302cf6e89afa2c77982bff6c3fdf3cdab",
                                  "customSourceFingerprint": undefined,
                                  "fingerprintOptions": {
                                    "assetHash": undefined,
                                    "extraHash": undefined,
                                    "follow": undefined,
                                    "path": "/Users/rverma/dev/aws/nsl-saas-accelerator/packages/constructs/lib/aws-codecommit/lambda-codecommit-secret/dist",
                                    "sourcePath": "/Users/rverma/dev/aws/nsl-saas-accelerator/packages/constructs/lib/aws-codecommit/lambda-codecommit-secret/dist",
                                  },
                                  "hashType": "source",
                                  "isArchive": true,
                                  "node": Node {
                                    "_children": {},
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [],
                                    "_validations": [],
                                    "host": [Circular],
                                    "id": "Stage",
                                    "scope": [Circular],
                                  },
                                  "packaging": "zip",
                                  "sourcePath": "/Users/rverma/dev/aws/nsl-saas-accelerator/packages/constructs/lib/aws-codecommit/lambda-codecommit-secret/dist",
                                  "sourceStats": Stats {
                                    "atime": 2023-04-19T09:28:15.189Z,
                                    "atimeMs": 1681896495189.284,
                                    "birthtime": 2023-04-18T10:17:45.917Z,
                                    "birthtimeMs": 1681813065916.9114,
                                    "blksize": 4096,
                                    "blocks": 0,
                                    "ctime": 2023-04-19T09:28:15.155Z,
                                    "ctimeMs": 1681896495155.161,
                                    "dev": 16777233,
                                    "gid": 20,
                                    "ino": 64257818,
                                    "mode": 16877,
                                    "mtime": 2023-04-19T09:28:15.155Z,
                                    "mtimeMs": 1681896495155.161,
                                    "nlink": 4,
                                    "rdev": 0,
                                    "size": 128,
                                    "uid": 504,
                                  },
                                  "stagedPath": "/private/var/folders/tn/799yyvm92g74fj_thj2z7w140000gr/T/cdk-test-app-WFT8EN/asset.437761578112cb81b0b580e5b870f6bb63cb2ab57ec7b59e9c0cf3dd5ce02013",
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                              },
                              "_context": {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": [],
                              "_validations": [],
                              "host": [Circular],
                              "id": "Code",
                              "scope": [Circular],
                            },
                            "s3BucketName": "\${Token[TOKEN.647]}",
                            "s3ObjectKey": "REPLACED-GENERATED-NAME.zip",
                            "s3ObjectUrl": "\${Token[TOKEN.648]}",
                            "s3Url": "\${Token[TOKEN.646]}",
                            "sourceHash": "437761578112cb81b0b580e5b870f6bb63cb2ab57ec7b59e9c0cf3dd5ce02013",
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                          "Resource": CfnFunction {
                            "_cfnProperties": {
                              "architectures": undefined,
                              "code": {
                                "imageUri": undefined,
                                "s3Bucket": "\${Token[TOKEN.647]}",
                                "s3Key": "REPLACED-GENERATED-NAME.zip",
                                "s3ObjectVersion": undefined,
                                "zipFile": undefined,
                              },
                              "codeSigningConfigArn": undefined,
                              "deadLetterConfig": undefined,
                              "description": "Create Gitops Secret",
                              "environment": "<unresolved-lazy>",
                              "ephemeralStorage": undefined,
                              "fileSystemConfigs": undefined,
                              "functionName": "\${Token[TOKEN.645]}",
                              "handler": "index.handler",
                              "imageConfig": undefined,
                              "kmsKeyArn": undefined,
                              "layers": [
                                "#{Token[TOKEN.651]}",
                              ],
                              "memorySize": undefined,
                              "packageType": undefined,
                              "reservedConcurrentExecutions": undefined,
                              "role": "\${Token[TOKEN.17]}",
                              "runtime": "nodejs18.x",
                              "runtimeManagementConfig": undefined,
                              "timeout": 900,
                              "vpcConfig": undefined,
                            },
                            "architectures": undefined,
                            "attrArn": "\${Token[TOKEN.653]}",
                            "attrSnapStartResponseApplyOn": "\${Token[TOKEN.654]}",
                            "attrSnapStartResponseOptimizationStatus": "\${Token[TOKEN.655]}",
                            "cfnOptions": {},
                            "cfnResourceType": "AWS::Lambda::Function",
                            "code": {
                              "imageUri": undefined,
                              "s3Bucket": "\${Token[TOKEN.647]}",
                              "s3Key": "REPLACED-GENERATED-NAME.zip",
                              "s3ObjectVersion": undefined,
                              "zipFile": undefined,
                            },
                            "codeSigningConfigArn": undefined,
                            "deadLetterConfig": undefined,
                            "dependsOn": Set {},
                            "description": "Create Gitops Secret",
                            "environment": "<unresolved-lazy>",
                            "ephemeralStorage": undefined,
                            "fileSystemConfigs": undefined,
                            "functionName": "\${Token[TOKEN.645]}",
                            "handler": "index.handler",
                            "imageConfig": undefined,
                            "kmsKeyArn": undefined,
                            "layers": [
                              "#{Token[TOKEN.651]}",
                            ],
                            "logicalId": "\${Token[Default.codeCommitSecret.Function.Resource.LogicalID.652]}",
                            "memorySize": undefined,
                            "node": Node {
                              "_children": {},
                              "_context": {},
                              "_dependencies": Set {
                                Role {
                                  "_allowCrossEnvironment": true,
                                  "_didSplit": false,
                                  "_physicalName": "AWSLambdaBasicExecutionRole-codeCommitSecret",
                                  "_roleId": "\${Token[TOKEN.16]}",
                                  "assumeRoleAction": "sts:AssumeRole",
                                  "assumeRolePolicy": {
                                    "Statement": [
                                      {
                                        "Action": "sts:AssumeRole",
                                        "Effect": "Allow",
                                        "Principal": {
                                          "Service": "\${Token[lambda.amazonaws.com.11]}",
                                        },
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "attachedPolicies": AttachedPolicies {
                                    "policies": [
                                      Policy {
                                        "_allowCrossEnvironment": false,
                                        "_physicalName": "\${Token[TOKEN.20]}",
                                        "_policyName": "\${Token[TOKEN.20]}",
                                        "document": {
                                          "Statement": [
                                            {
                                              "Action": "logs:CreateLogGroup",
                                              "Effect": "Allow",
                                              "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                            },
                                            {
                                              "Action": "secretsmanager:*",
                                              "Effect": "Allow",
                                              "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                            },
                                            {
                                              "Action": [
                                                "kms:Decrypt",
                                                "kms:DescribeKey",
                                              ],
                                              "Effect": "Allow",
                                              "Resource": "*",
                                            },
                                            {
                                              "Action": [
                                                "iam:CreateServiceSpecificCredential",
                                                "iam:DeleteServiceSpecificCredential",
                                                "iam:ListServiceSpecificCredentials",
                                              ],
                                              "Effect": "Allow",
                                              "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "env": {
                                          "account": "\${Token[AWS.AccountId.2]}",
                                          "region": "\${Token[AWS.Region.6]}",
                                        },
                                        "force": false,
                                        "grantPrincipal": PolicyGrantPrincipal {
                                          "_policy": [Circular],
                                          "assumeRoleAction": "sts:AssumeRole",
                                          "grantPrincipal": [Circular],
                                          "principalAccount": "\${Token[AWS.AccountId.2]}",
                                        },
                                        "groups": [],
                                        "node": Node {
                                          "_children": {
                                            "Resource": CfnPolicyConditional {
                                              "_cfnProperties": {
                                                "groups": [
                                                  "#{Token[TOKEN.23]}",
                                                ],
                                                "policyDocument": {
                                                  "Statement": [
                                                    {
                                                      "Action": "logs:CreateLogGroup",
                                                      "Effect": "Allow",
                                                      "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                                    },
                                                    {
                                                      "Action": "secretsmanager:*",
                                                      "Effect": "Allow",
                                                      "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                                    },
                                                    {
                                                      "Action": [
                                                        "kms:Decrypt",
                                                        "kms:DescribeKey",
                                                      ],
                                                      "Effect": "Allow",
                                                      "Resource": "*",
                                                    },
                                                    {
                                                      "Action": [
                                                        "iam:CreateServiceSpecificCredential",
                                                        "iam:DeleteServiceSpecificCredential",
                                                        "iam:ListServiceSpecificCredentials",
                                                      ],
                                                      "Effect": "Allow",
                                                      "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                                    },
                                                  ],
                                                  "Version": "2012-10-17",
                                                },
                                                "policyName": "\${Token[TOKEN.20]}",
                                                "roles": [
                                                  "#{Token[TOKEN.21]}",
                                                ],
                                                "users": [
                                                  "#{Token[TOKEN.22]}",
                                                ],
                                              },
                                              "cfnOptions": {},
                                              "cfnResourceType": "AWS::IAM::Policy",
                                              "dependsOn": Set {},
                                              "groups": [
                                                "#{Token[TOKEN.23]}",
                                              ],
                                              "logicalId": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                                              "node": Node {
                                                "_children": {},
                                                "_context": {},
                                                "_dependencies": Set {},
                                                "_locked": false,
                                                "_metadata": [
                                                  {
                                                    "data": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                                                    "trace": undefined,
                                                    "type": "aws:cdk:logicalId",
                                                  },
                                                ],
                                                "_validations": [],
                                                "host": [Circular],
                                                "id": "Resource",
                                                "scope": [Circular],
                                              },
                                              "policyDocument": {
                                                "Statement": [
                                                  {
                                                    "Action": "logs:CreateLogGroup",
                                                    "Effect": "Allow",
                                                    "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                                  },
                                                  {
                                                    "Action": "secretsmanager:*",
                                                    "Effect": "Allow",
                                                    "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                                  },
                                                  {
                                                    "Action": [
                                                      "kms:Decrypt",
                                                      "kms:DescribeKey",
                                                    ],
                                                    "Effect": "Allow",
                                                    "Resource": "*",
                                                  },
                                                  {
                                                    "Action": [
                                                      "iam:CreateServiceSpecificCredential",
                                                      "iam:DeleteServiceSpecificCredential",
                                                      "iam:ListServiceSpecificCredentials",
                                                    ],
                                                    "Effect": "Allow",
                                                    "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                                  },
                                                ],
                                                "Version": "2012-10-17",
                                              },
                                              "policyName": "\${Token[TOKEN.20]}",
                                              "rawOverrides": {},
                                              "roles": [
                                                "#{Token[TOKEN.21]}",
                                              ],
                                              "stack": [Circular],
                                              "users": [
                                                "#{Token[TOKEN.22]}",
                                              ],
                                              Symbol(@aws-cdk/core.DependableTrait): {
                                                "dependencyRoots": [
                                                  [Circular],
                                                ],
                                              },
                                            },
                                          },
                                          "_context": {},
                                          "_dependencies": Set {},
                                          "_locked": false,
                                          "_metadata": [],
                                          "_validations": [
                                            {
                                              "validate": [Function],
                                            },
                                          ],
                                          "host": [Circular],
                                          "id": "DefaultPolicy",
                                          "scope": [Circular],
                                        },
                                        "physicalName": "\${Token[TOKEN.20]}",
                                        "referenceTaken": false,
                                        "roles": [
                                          [Circular],
                                        ],
                                        "stack": [Circular],
                                        "users": [],
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [
                                            [Circular],
                                          ],
                                        },
                                      },
                                    ],
                                  },
                                  "defaultPolicy": Policy {
                                    "_allowCrossEnvironment": false,
                                    "_physicalName": "\${Token[TOKEN.20]}",
                                    "_policyName": "\${Token[TOKEN.20]}",
                                    "document": {
                                      "Statement": [
                                        {
                                          "Action": "logs:CreateLogGroup",
                                          "Effect": "Allow",
                                          "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                        },
                                        {
                                          "Action": "secretsmanager:*",
                                          "Effect": "Allow",
                                          "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                        },
                                        {
                                          "Action": [
                                            "kms:Decrypt",
                                            "kms:DescribeKey",
                                          ],
                                          "Effect": "Allow",
                                          "Resource": "*",
                                        },
                                        {
                                          "Action": [
                                            "iam:CreateServiceSpecificCredential",
                                            "iam:DeleteServiceSpecificCredential",
                                            "iam:ListServiceSpecificCredentials",
                                          ],
                                          "Effect": "Allow",
                                          "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "env": {
                                      "account": "\${Token[AWS.AccountId.2]}",
                                      "region": "\${Token[AWS.Region.6]}",
                                    },
                                    "force": false,
                                    "grantPrincipal": PolicyGrantPrincipal {
                                      "_policy": [Circular],
                                      "assumeRoleAction": "sts:AssumeRole",
                                      "grantPrincipal": [Circular],
                                      "principalAccount": "\${Token[AWS.AccountId.2]}",
                                    },
                                    "groups": [],
                                    "node": Node {
                                      "_children": {
                                        "Resource": CfnPolicyConditional {
                                          "_cfnProperties": {
                                            "groups": [
                                              "#{Token[TOKEN.23]}",
                                            ],
                                            "policyDocument": {
                                              "Statement": [
                                                {
                                                  "Action": "logs:CreateLogGroup",
                                                  "Effect": "Allow",
                                                  "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                                },
                                                {
                                                  "Action": "secretsmanager:*",
                                                  "Effect": "Allow",
                                                  "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                                },
                                                {
                                                  "Action": [
                                                    "kms:Decrypt",
                                                    "kms:DescribeKey",
                                                  ],
                                                  "Effect": "Allow",
                                                  "Resource": "*",
                                                },
                                                {
                                                  "Action": [
                                                    "iam:CreateServiceSpecificCredential",
                                                    "iam:DeleteServiceSpecificCredential",
                                                    "iam:ListServiceSpecificCredentials",
                                                  ],
                                                  "Effect": "Allow",
                                                  "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                                },
                                              ],
                                              "Version": "2012-10-17",
                                            },
                                            "policyName": "\${Token[TOKEN.20]}",
                                            "roles": [
                                              "#{Token[TOKEN.21]}",
                                            ],
                                            "users": [
                                              "#{Token[TOKEN.22]}",
                                            ],
                                          },
                                          "cfnOptions": {},
                                          "cfnResourceType": "AWS::IAM::Policy",
                                          "dependsOn": Set {},
                                          "groups": [
                                            "#{Token[TOKEN.23]}",
                                          ],
                                          "logicalId": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                                          "node": Node {
                                            "_children": {},
                                            "_context": {},
                                            "_dependencies": Set {},
                                            "_locked": false,
                                            "_metadata": [
                                              {
                                                "data": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                                                "trace": undefined,
                                                "type": "aws:cdk:logicalId",
                                              },
                                            ],
                                            "_validations": [],
                                            "host": [Circular],
                                            "id": "Resource",
                                            "scope": [Circular],
                                          },
                                          "policyDocument": {
                                            "Statement": [
                                              {
                                                "Action": "logs:CreateLogGroup",
                                                "Effect": "Allow",
                                                "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                              },
                                              {
                                                "Action": "secretsmanager:*",
                                                "Effect": "Allow",
                                                "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                              },
                                              {
                                                "Action": [
                                                  "kms:Decrypt",
                                                  "kms:DescribeKey",
                                                ],
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                              {
                                                "Action": [
                                                  "iam:CreateServiceSpecificCredential",
                                                  "iam:DeleteServiceSpecificCredential",
                                                  "iam:ListServiceSpecificCredentials",
                                                ],
                                                "Effect": "Allow",
                                                "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "policyName": "\${Token[TOKEN.20]}",
                                          "rawOverrides": {},
                                          "roles": [
                                            "#{Token[TOKEN.21]}",
                                          ],
                                          "stack": [Circular],
                                          "users": [
                                            "#{Token[TOKEN.22]}",
                                          ],
                                          Symbol(@aws-cdk/core.DependableTrait): {
                                            "dependencyRoots": [
                                              [Circular],
                                            ],
                                          },
                                        },
                                      },
                                      "_context": {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": [],
                                      "_validations": [
                                        {
                                          "validate": [Function],
                                        },
                                      ],
                                      "host": [Circular],
                                      "id": "DefaultPolicy",
                                      "scope": [Circular],
                                    },
                                    "physicalName": "\${Token[TOKEN.20]}",
                                    "referenceTaken": false,
                                    "roles": [
                                      [Circular],
                                    ],
                                    "stack": [Circular],
                                    "users": [],
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [
                                        [Circular],
                                      ],
                                    },
                                  },
                                  "dependables": Map {
                                    {
                                      "Action": "logs:CreateLogGroup",
                                      "Effect": "Allow",
                                      "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                    } => DependencyGroup {
                                      "_deps": [],
                                      Symbol(@aws-cdk/core.DependableTrait): {
                                        "dependencyRoots": [],
                                      },
                                    },
                                    {
                                      "Action": "secretsmanager:*",
                                      "Effect": "Allow",
                                      "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                    } => DependencyGroup {
                                      "_deps": [],
                                      Symbol(@aws-cdk/core.DependableTrait): {
                                        "dependencyRoots": [],
                                      },
                                    },
                                    {
                                      "Action": [
                                        "kms:Decrypt",
                                        "kms:DescribeKey",
                                      ],
                                      "Effect": "Allow",
                                      "Resource": "*",
                                    } => DependencyGroup {
                                      "_deps": [],
                                      Symbol(@aws-cdk/core.DependableTrait): {
                                        "dependencyRoots": [],
                                      },
                                    },
                                    {
                                      "Action": [
                                        "iam:CreateServiceSpecificCredential",
                                        "iam:DeleteServiceSpecificCredential",
                                        "iam:ListServiceSpecificCredentials",
                                      ],
                                      "Effect": "Allow",
                                      "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                    } => DependencyGroup {
                                      "_deps": [],
                                      Symbol(@aws-cdk/core.DependableTrait): {
                                        "dependencyRoots": [],
                                      },
                                    },
                                  },
                                  "env": {
                                    "account": "\${Token[AWS.AccountId.2]}",
                                    "region": "\${Token[AWS.Region.6]}",
                                  },
                                  "grantPrincipal": [Circular],
                                  "inlinePolicies": {},
                                  "managedPolicies": [
                                    AwsManagedPolicy {
                                      "managedPolicyArn": "arn:\${Token[AWS.Partition.5]}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                                    },
                                  ],
                                  "node": Node {
                                    "_children": {
                                      "DefaultPolicy": Policy {
                                        "_allowCrossEnvironment": false,
                                        "_physicalName": "\${Token[TOKEN.20]}",
                                        "_policyName": "\${Token[TOKEN.20]}",
                                        "document": {
                                          "Statement": [
                                            {
                                              "Action": "logs:CreateLogGroup",
                                              "Effect": "Allow",
                                              "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                            },
                                            {
                                              "Action": "secretsmanager:*",
                                              "Effect": "Allow",
                                              "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                            },
                                            {
                                              "Action": [
                                                "kms:Decrypt",
                                                "kms:DescribeKey",
                                              ],
                                              "Effect": "Allow",
                                              "Resource": "*",
                                            },
                                            {
                                              "Action": [
                                                "iam:CreateServiceSpecificCredential",
                                                "iam:DeleteServiceSpecificCredential",
                                                "iam:ListServiceSpecificCredentials",
                                              ],
                                              "Effect": "Allow",
                                              "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "env": {
                                          "account": "\${Token[AWS.AccountId.2]}",
                                          "region": "\${Token[AWS.Region.6]}",
                                        },
                                        "force": false,
                                        "grantPrincipal": PolicyGrantPrincipal {
                                          "_policy": [Circular],
                                          "assumeRoleAction": "sts:AssumeRole",
                                          "grantPrincipal": [Circular],
                                          "principalAccount": "\${Token[AWS.AccountId.2]}",
                                        },
                                        "groups": [],
                                        "node": Node {
                                          "_children": {
                                            "Resource": CfnPolicyConditional {
                                              "_cfnProperties": {
                                                "groups": [
                                                  "#{Token[TOKEN.23]}",
                                                ],
                                                "policyDocument": {
                                                  "Statement": [
                                                    {
                                                      "Action": "logs:CreateLogGroup",
                                                      "Effect": "Allow",
                                                      "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                                    },
                                                    {
                                                      "Action": "secretsmanager:*",
                                                      "Effect": "Allow",
                                                      "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                                    },
                                                    {
                                                      "Action": [
                                                        "kms:Decrypt",
                                                        "kms:DescribeKey",
                                                      ],
                                                      "Effect": "Allow",
                                                      "Resource": "*",
                                                    },
                                                    {
                                                      "Action": [
                                                        "iam:CreateServiceSpecificCredential",
                                                        "iam:DeleteServiceSpecificCredential",
                                                        "iam:ListServiceSpecificCredentials",
                                                      ],
                                                      "Effect": "Allow",
                                                      "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                                    },
                                                  ],
                                                  "Version": "2012-10-17",
                                                },
                                                "policyName": "\${Token[TOKEN.20]}",
                                                "roles": [
                                                  "#{Token[TOKEN.21]}",
                                                ],
                                                "users": [
                                                  "#{Token[TOKEN.22]}",
                                                ],
                                              },
                                              "cfnOptions": {},
                                              "cfnResourceType": "AWS::IAM::Policy",
                                              "dependsOn": Set {},
                                              "groups": [
                                                "#{Token[TOKEN.23]}",
                                              ],
                                              "logicalId": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                                              "node": Node {
                                                "_children": {},
                                                "_context": {},
                                                "_dependencies": Set {},
                                                "_locked": false,
                                                "_metadata": [
                                                  {
                                                    "data": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                                                    "trace": undefined,
                                                    "type": "aws:cdk:logicalId",
                                                  },
                                                ],
                                                "_validations": [],
                                                "host": [Circular],
                                                "id": "Resource",
                                                "scope": [Circular],
                                              },
                                              "policyDocument": {
                                                "Statement": [
                                                  {
                                                    "Action": "logs:CreateLogGroup",
                                                    "Effect": "Allow",
                                                    "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                                  },
                                                  {
                                                    "Action": "secretsmanager:*",
                                                    "Effect": "Allow",
                                                    "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                                  },
                                                  {
                                                    "Action": [
                                                      "kms:Decrypt",
                                                      "kms:DescribeKey",
                                                    ],
                                                    "Effect": "Allow",
                                                    "Resource": "*",
                                                  },
                                                  {
                                                    "Action": [
                                                      "iam:CreateServiceSpecificCredential",
                                                      "iam:DeleteServiceSpecificCredential",
                                                      "iam:ListServiceSpecificCredentials",
                                                    ],
                                                    "Effect": "Allow",
                                                    "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                                  },
                                                ],
                                                "Version": "2012-10-17",
                                              },
                                              "policyName": "\${Token[TOKEN.20]}",
                                              "rawOverrides": {},
                                              "roles": [
                                                "#{Token[TOKEN.21]}",
                                              ],
                                              "stack": [Circular],
                                              "users": [
                                                "#{Token[TOKEN.22]}",
                                              ],
                                              Symbol(@aws-cdk/core.DependableTrait): {
                                                "dependencyRoots": [
                                                  [Circular],
                                                ],
                                              },
                                            },
                                          },
                                          "_context": {},
                                          "_dependencies": Set {},
                                          "_locked": false,
                                          "_metadata": [],
                                          "_validations": [
                                            {
                                              "validate": [Function],
                                            },
                                          ],
                                          "host": [Circular],
                                          "id": "DefaultPolicy",
                                          "scope": [Circular],
                                        },
                                        "physicalName": "\${Token[TOKEN.20]}",
                                        "referenceTaken": false,
                                        "roles": [
                                          [Circular],
                                        ],
                                        "stack": [Circular],
                                        "users": [],
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [
                                            [Circular],
                                          ],
                                        },
                                      },
                                      "ImportCreateGitopsSecretLambda": ImportedRole {
                                        "_allowCrossEnvironment": false,
                                        "_physicalName": undefined,
                                        "assumeRoleAction": "sts:AssumeRole",
                                        "attachedPolicies": AttachedPolicies {
                                          "policies": [],
                                        },
                                        "defaultPolicyName": undefined,
                                        "env": {
                                          "account": "\${Token[AWS.AccountId.2]}",
                                          "region": "\${Token[AWS.Region.6]}",
                                        },
                                        "grantPrincipal": [Circular],
                                        "node": Node {
                                          "_children": {},
                                          "_context": {},
                                          "_dependencies": Set {},
                                          "_locked": false,
                                          "_metadata": [],
                                          "_validations": [],
                                          "host": [Circular],
                                          "id": "ImportCreateGitopsSecretLambda",
                                          "scope": [Circular],
                                        },
                                        "physicalName": "\${Token[TOKEN.12]}",
                                        "policyFragment": PrincipalPolicyFragment {
                                          "conditions": {},
                                          "principalJson": {
                                            "AWS": [
                                              "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                                            ],
                                          },
                                        },
                                        "principalAccount": "\${Token[AWS.AccountId.2]}",
                                        "roleArn": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                                        "roleName": "CreateGitopsSecretLambda",
                                        "stack": [Circular],
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [
                                            [Circular],
                                          ],
                                        },
                                      },
                                      "Resource": CfnRole {
                                        "_cfnProperties": {
                                          "assumeRolePolicyDocument": {
                                            "Statement": [
                                              {
                                                "Action": "sts:AssumeRole",
                                                "Effect": "Allow",
                                                "Principal": {
                                                  "Service": "\${Token[lambda.amazonaws.com.11]}",
                                                },
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "description": "AWS Accelerator assets access role in workload accounts to bootstrap gitops credentials",
                                          "managedPolicyArns": [
                                            "#{Token[TOKEN.13]}",
                                          ],
                                          "maxSessionDuration": undefined,
                                          "path": undefined,
                                          "permissionsBoundary": undefined,
                                          "policies": undefined,
                                          "roleName": "AWSLambdaBasicExecutionRole-codeCommitSecret",
                                        },
                                        "assumeRolePolicyDocument": {
                                          "Statement": [
                                            {
                                              "Action": "sts:AssumeRole",
                                              "Effect": "Allow",
                                              "Principal": {
                                                "Service": "\${Token[lambda.amazonaws.com.11]}",
                                              },
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "attrArn": "\${Token[TOKEN.15]}",
                                        "attrRoleId": "\${Token[TOKEN.16]}",
                                        "cfnOptions": {},
                                        "cfnResourceType": "AWS::IAM::Role",
                                        "dependsOn": Set {},
                                        "description": "AWS Accelerator assets access role in workload accounts to bootstrap gitops credentials",
                                        "logicalId": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.Resource.LogicalID.14]}",
                                        "managedPolicyArns": [
                                          "#{Token[TOKEN.13]}",
                                        ],
                                        "maxSessionDuration": undefined,
                                        "node": Node {
                                          "_children": {},
                                          "_context": {},
                                          "_dependencies": Set {},
                                          "_locked": false,
                                          "_metadata": [
                                            {
                                              "data": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.Resource.LogicalID.14]}",
                                              "trace": undefined,
                                              "type": "aws:cdk:logicalId",
                                            },
                                          ],
                                          "_validations": [],
                                          "host": [Circular],
                                          "id": "Resource",
                                          "scope": [Circular],
                                        },
                                        "path": undefined,
                                        "permissionsBoundary": undefined,
                                        "policies": undefined,
                                        "rawOverrides": {},
                                        "roleName": "AWSLambdaBasicExecutionRole-codeCommitSecret",
                                        "stack": [Circular],
                                        "tags": TagManager {
                                          "initialTagPriority": 50,
                                          "priorities": Map {},
                                          "renderedTags": "<unresolved-lazy>",
                                          "resourceTypeName": "AWS::IAM::Role",
                                          "tagFormatter": StandardFormatter {},
                                          "tagPropertyName": "tags",
                                          "tags": Map {},
                                        },
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [
                                            [Circular],
                                          ],
                                        },
                                      },
                                    },
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [],
                                    "_validations": [
                                      {
                                        "validate": [Function],
                                      },
                                    ],
                                    "host": [Circular],
                                    "id": "CreateGitopsSecretLambda",
                                    "scope": [Circular],
                                  },
                                  "permissionsBoundary": undefined,
                                  "physicalName": "AWSLambdaBasicExecutionRole-codeCommitSecret",
                                  "policyFragment": PrincipalPolicyFragment {
                                    "conditions": {},
                                    "principalJson": {
                                      "AWS": [
                                        "\${Token[TOKEN.17]}",
                                      ],
                                    },
                                  },
                                  "principalAccount": "\${Token[AWS.AccountId.2]}",
                                  "roleArn": "\${Token[TOKEN.17]}",
                                  "roleName": "\${Token[TOKEN.19]}",
                                  "stack": [Circular],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                              },
                              "_locked": false,
                              "_metadata": [
                                {
                                  "data": "\${Token[Default.codeCommitSecret.Function.Resource.LogicalID.652]}",
                                  "trace": undefined,
                                  "type": "aws:cdk:logicalId",
                                },
                              ],
                              "_validations": [],
                              "host": [Circular],
                              "id": "Resource",
                              "scope": [Circular],
                            },
                            "packageType": undefined,
                            "rawOverrides": {},
                            "reservedConcurrentExecutions": undefined,
                            "role": "\${Token[TOKEN.17]}",
                            "runtime": "nodejs18.x",
                            "runtimeManagementConfig": undefined,
                            "snapStart": undefined,
                            "stack": [Circular],
                            "tags": TagManager {
                              "initialTagPriority": 50,
                              "priorities": Map {},
                              "renderedTags": "<unresolved-lazy>",
                              "resourceTypeName": "AWS::Lambda::Function",
                              "tagFormatter": StandardFormatter {},
                              "tagPropertyName": "tags",
                              "tags": Map {},
                            },
                            "timeout": 900,
                            "tracingConfig": undefined,
                            "vpcConfig": undefined,
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                        },
                        "_context": {},
                        "_dependencies": Set {},
                        "_locked": false,
                        "_metadata": [],
                        "_validations": [],
                        "host": [Circular],
                        "id": "Function",
                        "scope": [Circular],
                      },
                      "stack": [Circular],
                    },
                    "resourceArns": [
                      "\${Token[TOKEN.658]}",
                      "\${Token[TOKEN.658]}:*",
                    ],
                    "scope": {
                      "addToResourcePolicy": [Function],
                      "applyRemovalPolicy": [Function],
                      "env": {
                        "account": "\${Token[AWS.AccountId.2]}",
                        "region": "\${Token[AWS.Region.6]}",
                      },
                      "node": Node {
                        "_children": {
                          "Code": Asset {
                            "assetHash": "437761578112cb81b0b580e5b870f6bb63cb2ab57ec7b59e9c0cf3dd5ce02013",
                            "assetPath": "asset.437761578112cb81b0b580e5b870f6bb63cb2ab57ec7b59e9c0cf3dd5ce02013",
                            "bucket": Import {
                              "_allowCrossEnvironment": false,
                              "_physicalName": undefined,
                              "autoCreatePolicy": false,
                              "bucketArn": "arn:\${Token[AWS.Partition.5]}:s3:::\${Token[TOKEN.647]}",
                              "bucketDomainName": "\${Token[TOKEN.647]}.s3.\${Token[AWS.URLSuffix.3]}",
                              "bucketDualStackDomainName": "\${Token[TOKEN.647]}.s3.dualstack.\${Token[AWS.Region.6]}.\${Token[AWS.URLSuffix.3]}",
                              "bucketName": "\${Token[TOKEN.647]}",
                              "bucketRegionalDomainName": "\${Token[TOKEN.647]}.s3.\${Token[AWS.Region.6]}.\${Token[AWS.URLSuffix.3]}",
                              "bucketWebsiteDomainName": "\${Token[TOKEN.647]}.\${Token[TOKEN.649]}",
                              "bucketWebsiteNewUrlFormat": false,
                              "bucketWebsiteUrl": "http://\${Token[TOKEN.647]}.\${Token[TOKEN.649]}",
                              "disallowPublicAccess": false,
                              "encryptionKey": undefined,
                              "env": {
                                "account": "\${Token[AWS.AccountId.2]}",
                                "region": "\${Token[AWS.Region.6]}",
                              },
                              "isWebsite": false,
                              "node": Node {
                                "_children": {},
                                "_context": {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": [],
                                "_validations": [
                                  {
                                    "validate": [Function],
                                  },
                                ],
                                "host": [Circular],
                                "id": "AssetBucket",
                                "scope": [Circular],
                              },
                              "notificationsHandlerRole": undefined,
                              "physicalName": "\${Token[TOKEN.650]}",
                              "policy": undefined,
                              "stack": [Circular],
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [
                                  [Circular],
                                ],
                              },
                            },
                            "httpUrl": "\${Token[TOKEN.646]}",
                            "isBundled": false,
                            "isFile": false,
                            "isZipArchive": true,
                            "node": Node {
                              "_children": {
                                "AssetBucket": Import {
                                  "_allowCrossEnvironment": false,
                                  "_physicalName": undefined,
                                  "autoCreatePolicy": false,
                                  "bucketArn": "arn:\${Token[AWS.Partition.5]}:s3:::\${Token[TOKEN.647]}",
                                  "bucketDomainName": "\${Token[TOKEN.647]}.s3.\${Token[AWS.URLSuffix.3]}",
                                  "bucketDualStackDomainName": "\${Token[TOKEN.647]}.s3.dualstack.\${Token[AWS.Region.6]}.\${Token[AWS.URLSuffix.3]}",
                                  "bucketName": "\${Token[TOKEN.647]}",
                                  "bucketRegionalDomainName": "\${Token[TOKEN.647]}.s3.\${Token[AWS.Region.6]}.\${Token[AWS.URLSuffix.3]}",
                                  "bucketWebsiteDomainName": "\${Token[TOKEN.647]}.\${Token[TOKEN.649]}",
                                  "bucketWebsiteNewUrlFormat": false,
                                  "bucketWebsiteUrl": "http://\${Token[TOKEN.647]}.\${Token[TOKEN.649]}",
                                  "disallowPublicAccess": false,
                                  "encryptionKey": undefined,
                                  "env": {
                                    "account": "\${Token[AWS.AccountId.2]}",
                                    "region": "\${Token[AWS.Region.6]}",
                                  },
                                  "isWebsite": false,
                                  "node": Node {
                                    "_children": {},
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [],
                                    "_validations": [
                                      {
                                        "validate": [Function],
                                      },
                                    ],
                                    "host": [Circular],
                                    "id": "AssetBucket",
                                    "scope": [Circular],
                                  },
                                  "notificationsHandlerRole": undefined,
                                  "physicalName": "\${Token[TOKEN.650]}",
                                  "policy": undefined,
                                  "stack": [Circular],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                                "Stage": AssetStaging {
                                  "absoluteStagedPath": "/private/var/folders/tn/799yyvm92g74fj_thj2z7w140000gr/T/cdk-test-app-WFT8EN/asset.437761578112cb81b0b580e5b870f6bb63cb2ab57ec7b59e9c0cf3dd5ce02013",
                                  "assetHash": "437761578112cb81b0b580e5b870f6bb63cb2ab57ec7b59e9c0cf3dd5ce02013",
                                  "assetOutdir": "/private/var/folders/tn/799yyvm92g74fj_thj2z7w140000gr/T/cdk-test-app-WFT8EN",
                                  "cacheKey": "944e1635f7fdfeb3073e35dcc76cabb302cf6e89afa2c77982bff6c3fdf3cdab",
                                  "customSourceFingerprint": undefined,
                                  "fingerprintOptions": {
                                    "assetHash": undefined,
                                    "extraHash": undefined,
                                    "follow": undefined,
                                    "path": "/Users/rverma/dev/aws/nsl-saas-accelerator/packages/constructs/lib/aws-codecommit/lambda-codecommit-secret/dist",
                                    "sourcePath": "/Users/rverma/dev/aws/nsl-saas-accelerator/packages/constructs/lib/aws-codecommit/lambda-codecommit-secret/dist",
                                  },
                                  "hashType": "source",
                                  "isArchive": true,
                                  "node": Node {
                                    "_children": {},
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [],
                                    "_validations": [],
                                    "host": [Circular],
                                    "id": "Stage",
                                    "scope": [Circular],
                                  },
                                  "packaging": "zip",
                                  "sourcePath": "/Users/rverma/dev/aws/nsl-saas-accelerator/packages/constructs/lib/aws-codecommit/lambda-codecommit-secret/dist",
                                  "sourceStats": Stats {
                                    "atime": 2023-04-19T09:28:15.189Z,
                                    "atimeMs": 1681896495189.284,
                                    "birthtime": 2023-04-18T10:17:45.917Z,
                                    "birthtimeMs": 1681813065916.9114,
                                    "blksize": 4096,
                                    "blocks": 0,
                                    "ctime": 2023-04-19T09:28:15.155Z,
                                    "ctimeMs": 1681896495155.161,
                                    "dev": 16777233,
                                    "gid": 20,
                                    "ino": 64257818,
                                    "mode": 16877,
                                    "mtime": 2023-04-19T09:28:15.155Z,
                                    "mtimeMs": 1681896495155.161,
                                    "nlink": 4,
                                    "rdev": 0,
                                    "size": 128,
                                    "uid": 504,
                                  },
                                  "stagedPath": "/private/var/folders/tn/799yyvm92g74fj_thj2z7w140000gr/T/cdk-test-app-WFT8EN/asset.437761578112cb81b0b580e5b870f6bb63cb2ab57ec7b59e9c0cf3dd5ce02013",
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                              },
                              "_context": {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": [],
                              "_validations": [],
                              "host": [Circular],
                              "id": "Code",
                              "scope": [Circular],
                            },
                            "s3BucketName": "\${Token[TOKEN.647]}",
                            "s3ObjectKey": "REPLACED-GENERATED-NAME.zip",
                            "s3ObjectUrl": "\${Token[TOKEN.648]}",
                            "s3Url": "\${Token[TOKEN.646]}",
                            "sourceHash": "437761578112cb81b0b580e5b870f6bb63cb2ab57ec7b59e9c0cf3dd5ce02013",
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                          "Resource": CfnFunction {
                            "_cfnProperties": {
                              "architectures": undefined,
                              "code": {
                                "imageUri": undefined,
                                "s3Bucket": "\${Token[TOKEN.647]}",
                                "s3Key": "REPLACED-GENERATED-NAME.zip",
                                "s3ObjectVersion": undefined,
                                "zipFile": undefined,
                              },
                              "codeSigningConfigArn": undefined,
                              "deadLetterConfig": undefined,
                              "description": "Create Gitops Secret",
                              "environment": "<unresolved-lazy>",
                              "ephemeralStorage": undefined,
                              "fileSystemConfigs": undefined,
                              "functionName": "\${Token[TOKEN.645]}",
                              "handler": "index.handler",
                              "imageConfig": undefined,
                              "kmsKeyArn": undefined,
                              "layers": [
                                "#{Token[TOKEN.651]}",
                              ],
                              "memorySize": undefined,
                              "packageType": undefined,
                              "reservedConcurrentExecutions": undefined,
                              "role": "\${Token[TOKEN.17]}",
                              "runtime": "nodejs18.x",
                              "runtimeManagementConfig": undefined,
                              "timeout": 900,
                              "vpcConfig": undefined,
                            },
                            "architectures": undefined,
                            "attrArn": "\${Token[TOKEN.653]}",
                            "attrSnapStartResponseApplyOn": "\${Token[TOKEN.654]}",
                            "attrSnapStartResponseOptimizationStatus": "\${Token[TOKEN.655]}",
                            "cfnOptions": {},
                            "cfnResourceType": "AWS::Lambda::Function",
                            "code": {
                              "imageUri": undefined,
                              "s3Bucket": "\${Token[TOKEN.647]}",
                              "s3Key": "REPLACED-GENERATED-NAME.zip",
                              "s3ObjectVersion": undefined,
                              "zipFile": undefined,
                            },
                            "codeSigningConfigArn": undefined,
                            "deadLetterConfig": undefined,
                            "dependsOn": Set {},
                            "description": "Create Gitops Secret",
                            "environment": "<unresolved-lazy>",
                            "ephemeralStorage": undefined,
                            "fileSystemConfigs": undefined,
                            "functionName": "\${Token[TOKEN.645]}",
                            "handler": "index.handler",
                            "imageConfig": undefined,
                            "kmsKeyArn": undefined,
                            "layers": [
                              "#{Token[TOKEN.651]}",
                            ],
                            "logicalId": "\${Token[Default.codeCommitSecret.Function.Resource.LogicalID.652]}",
                            "memorySize": undefined,
                            "node": Node {
                              "_children": {},
                              "_context": {},
                              "_dependencies": Set {
                                Role {
                                  "_allowCrossEnvironment": true,
                                  "_didSplit": false,
                                  "_physicalName": "AWSLambdaBasicExecutionRole-codeCommitSecret",
                                  "_roleId": "\${Token[TOKEN.16]}",
                                  "assumeRoleAction": "sts:AssumeRole",
                                  "assumeRolePolicy": {
                                    "Statement": [
                                      {
                                        "Action": "sts:AssumeRole",
                                        "Effect": "Allow",
                                        "Principal": {
                                          "Service": "\${Token[lambda.amazonaws.com.11]}",
                                        },
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "attachedPolicies": AttachedPolicies {
                                    "policies": [
                                      Policy {
                                        "_allowCrossEnvironment": false,
                                        "_physicalName": "\${Token[TOKEN.20]}",
                                        "_policyName": "\${Token[TOKEN.20]}",
                                        "document": {
                                          "Statement": [
                                            {
                                              "Action": "logs:CreateLogGroup",
                                              "Effect": "Allow",
                                              "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                            },
                                            {
                                              "Action": "secretsmanager:*",
                                              "Effect": "Allow",
                                              "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                            },
                                            {
                                              "Action": [
                                                "kms:Decrypt",
                                                "kms:DescribeKey",
                                              ],
                                              "Effect": "Allow",
                                              "Resource": "*",
                                            },
                                            {
                                              "Action": [
                                                "iam:CreateServiceSpecificCredential",
                                                "iam:DeleteServiceSpecificCredential",
                                                "iam:ListServiceSpecificCredentials",
                                              ],
                                              "Effect": "Allow",
                                              "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "env": {
                                          "account": "\${Token[AWS.AccountId.2]}",
                                          "region": "\${Token[AWS.Region.6]}",
                                        },
                                        "force": false,
                                        "grantPrincipal": PolicyGrantPrincipal {
                                          "_policy": [Circular],
                                          "assumeRoleAction": "sts:AssumeRole",
                                          "grantPrincipal": [Circular],
                                          "principalAccount": "\${Token[AWS.AccountId.2]}",
                                        },
                                        "groups": [],
                                        "node": Node {
                                          "_children": {
                                            "Resource": CfnPolicyConditional {
                                              "_cfnProperties": {
                                                "groups": [
                                                  "#{Token[TOKEN.23]}",
                                                ],
                                                "policyDocument": {
                                                  "Statement": [
                                                    {
                                                      "Action": "logs:CreateLogGroup",
                                                      "Effect": "Allow",
                                                      "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                                    },
                                                    {
                                                      "Action": "secretsmanager:*",
                                                      "Effect": "Allow",
                                                      "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                                    },
                                                    {
                                                      "Action": [
                                                        "kms:Decrypt",
                                                        "kms:DescribeKey",
                                                      ],
                                                      "Effect": "Allow",
                                                      "Resource": "*",
                                                    },
                                                    {
                                                      "Action": [
                                                        "iam:CreateServiceSpecificCredential",
                                                        "iam:DeleteServiceSpecificCredential",
                                                        "iam:ListServiceSpecificCredentials",
                                                      ],
                                                      "Effect": "Allow",
                                                      "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                                    },
                                                  ],
                                                  "Version": "2012-10-17",
                                                },
                                                "policyName": "\${Token[TOKEN.20]}",
                                                "roles": [
                                                  "#{Token[TOKEN.21]}",
                                                ],
                                                "users": [
                                                  "#{Token[TOKEN.22]}",
                                                ],
                                              },
                                              "cfnOptions": {},
                                              "cfnResourceType": "AWS::IAM::Policy",
                                              "dependsOn": Set {},
                                              "groups": [
                                                "#{Token[TOKEN.23]}",
                                              ],
                                              "logicalId": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                                              "node": Node {
                                                "_children": {},
                                                "_context": {},
                                                "_dependencies": Set {},
                                                "_locked": false,
                                                "_metadata": [
                                                  {
                                                    "data": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                                                    "trace": undefined,
                                                    "type": "aws:cdk:logicalId",
                                                  },
                                                ],
                                                "_validations": [],
                                                "host": [Circular],
                                                "id": "Resource",
                                                "scope": [Circular],
                                              },
                                              "policyDocument": {
                                                "Statement": [
                                                  {
                                                    "Action": "logs:CreateLogGroup",
                                                    "Effect": "Allow",
                                                    "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                                  },
                                                  {
                                                    "Action": "secretsmanager:*",
                                                    "Effect": "Allow",
                                                    "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                                  },
                                                  {
                                                    "Action": [
                                                      "kms:Decrypt",
                                                      "kms:DescribeKey",
                                                    ],
                                                    "Effect": "Allow",
                                                    "Resource": "*",
                                                  },
                                                  {
                                                    "Action": [
                                                      "iam:CreateServiceSpecificCredential",
                                                      "iam:DeleteServiceSpecificCredential",
                                                      "iam:ListServiceSpecificCredentials",
                                                    ],
                                                    "Effect": "Allow",
                                                    "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                                  },
                                                ],
                                                "Version": "2012-10-17",
                                              },
                                              "policyName": "\${Token[TOKEN.20]}",
                                              "rawOverrides": {},
                                              "roles": [
                                                "#{Token[TOKEN.21]}",
                                              ],
                                              "stack": [Circular],
                                              "users": [
                                                "#{Token[TOKEN.22]}",
                                              ],
                                              Symbol(@aws-cdk/core.DependableTrait): {
                                                "dependencyRoots": [
                                                  [Circular],
                                                ],
                                              },
                                            },
                                          },
                                          "_context": {},
                                          "_dependencies": Set {},
                                          "_locked": false,
                                          "_metadata": [],
                                          "_validations": [
                                            {
                                              "validate": [Function],
                                            },
                                          ],
                                          "host": [Circular],
                                          "id": "DefaultPolicy",
                                          "scope": [Circular],
                                        },
                                        "physicalName": "\${Token[TOKEN.20]}",
                                        "referenceTaken": false,
                                        "roles": [
                                          [Circular],
                                        ],
                                        "stack": [Circular],
                                        "users": [],
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [
                                            [Circular],
                                          ],
                                        },
                                      },
                                    ],
                                  },
                                  "defaultPolicy": Policy {
                                    "_allowCrossEnvironment": false,
                                    "_physicalName": "\${Token[TOKEN.20]}",
                                    "_policyName": "\${Token[TOKEN.20]}",
                                    "document": {
                                      "Statement": [
                                        {
                                          "Action": "logs:CreateLogGroup",
                                          "Effect": "Allow",
                                          "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                        },
                                        {
                                          "Action": "secretsmanager:*",
                                          "Effect": "Allow",
                                          "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                        },
                                        {
                                          "Action": [
                                            "kms:Decrypt",
                                            "kms:DescribeKey",
                                          ],
                                          "Effect": "Allow",
                                          "Resource": "*",
                                        },
                                        {
                                          "Action": [
                                            "iam:CreateServiceSpecificCredential",
                                            "iam:DeleteServiceSpecificCredential",
                                            "iam:ListServiceSpecificCredentials",
                                          ],
                                          "Effect": "Allow",
                                          "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "env": {
                                      "account": "\${Token[AWS.AccountId.2]}",
                                      "region": "\${Token[AWS.Region.6]}",
                                    },
                                    "force": false,
                                    "grantPrincipal": PolicyGrantPrincipal {
                                      "_policy": [Circular],
                                      "assumeRoleAction": "sts:AssumeRole",
                                      "grantPrincipal": [Circular],
                                      "principalAccount": "\${Token[AWS.AccountId.2]}",
                                    },
                                    "groups": [],
                                    "node": Node {
                                      "_children": {
                                        "Resource": CfnPolicyConditional {
                                          "_cfnProperties": {
                                            "groups": [
                                              "#{Token[TOKEN.23]}",
                                            ],
                                            "policyDocument": {
                                              "Statement": [
                                                {
                                                  "Action": "logs:CreateLogGroup",
                                                  "Effect": "Allow",
                                                  "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                                },
                                                {
                                                  "Action": "secretsmanager:*",
                                                  "Effect": "Allow",
                                                  "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                                },
                                                {
                                                  "Action": [
                                                    "kms:Decrypt",
                                                    "kms:DescribeKey",
                                                  ],
                                                  "Effect": "Allow",
                                                  "Resource": "*",
                                                },
                                                {
                                                  "Action": [
                                                    "iam:CreateServiceSpecificCredential",
                                                    "iam:DeleteServiceSpecificCredential",
                                                    "iam:ListServiceSpecificCredentials",
                                                  ],
                                                  "Effect": "Allow",
                                                  "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                                },
                                              ],
                                              "Version": "2012-10-17",
                                            },
                                            "policyName": "\${Token[TOKEN.20]}",
                                            "roles": [
                                              "#{Token[TOKEN.21]}",
                                            ],
                                            "users": [
                                              "#{Token[TOKEN.22]}",
                                            ],
                                          },
                                          "cfnOptions": {},
                                          "cfnResourceType": "AWS::IAM::Policy",
                                          "dependsOn": Set {},
                                          "groups": [
                                            "#{Token[TOKEN.23]}",
                                          ],
                                          "logicalId": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                                          "node": Node {
                                            "_children": {},
                                            "_context": {},
                                            "_dependencies": Set {},
                                            "_locked": false,
                                            "_metadata": [
                                              {
                                                "data": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                                                "trace": undefined,
                                                "type": "aws:cdk:logicalId",
                                              },
                                            ],
                                            "_validations": [],
                                            "host": [Circular],
                                            "id": "Resource",
                                            "scope": [Circular],
                                          },
                                          "policyDocument": {
                                            "Statement": [
                                              {
                                                "Action": "logs:CreateLogGroup",
                                                "Effect": "Allow",
                                                "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                              },
                                              {
                                                "Action": "secretsmanager:*",
                                                "Effect": "Allow",
                                                "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                              },
                                              {
                                                "Action": [
                                                  "kms:Decrypt",
                                                  "kms:DescribeKey",
                                                ],
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                              {
                                                "Action": [
                                                  "iam:CreateServiceSpecificCredential",
                                                  "iam:DeleteServiceSpecificCredential",
                                                  "iam:ListServiceSpecificCredentials",
                                                ],
                                                "Effect": "Allow",
                                                "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "policyName": "\${Token[TOKEN.20]}",
                                          "rawOverrides": {},
                                          "roles": [
                                            "#{Token[TOKEN.21]}",
                                          ],
                                          "stack": [Circular],
                                          "users": [
                                            "#{Token[TOKEN.22]}",
                                          ],
                                          Symbol(@aws-cdk/core.DependableTrait): {
                                            "dependencyRoots": [
                                              [Circular],
                                            ],
                                          },
                                        },
                                      },
                                      "_context": {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": [],
                                      "_validations": [
                                        {
                                          "validate": [Function],
                                        },
                                      ],
                                      "host": [Circular],
                                      "id": "DefaultPolicy",
                                      "scope": [Circular],
                                    },
                                    "physicalName": "\${Token[TOKEN.20]}",
                                    "referenceTaken": false,
                                    "roles": [
                                      [Circular],
                                    ],
                                    "stack": [Circular],
                                    "users": [],
                                    Symbol(@aws-cdk/core.DependableTrait): {
                                      "dependencyRoots": [
                                        [Circular],
                                      ],
                                    },
                                  },
                                  "dependables": Map {
                                    {
                                      "Action": "logs:CreateLogGroup",
                                      "Effect": "Allow",
                                      "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                    } => DependencyGroup {
                                      "_deps": [],
                                      Symbol(@aws-cdk/core.DependableTrait): {
                                        "dependencyRoots": [],
                                      },
                                    },
                                    {
                                      "Action": "secretsmanager:*",
                                      "Effect": "Allow",
                                      "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                    } => DependencyGroup {
                                      "_deps": [],
                                      Symbol(@aws-cdk/core.DependableTrait): {
                                        "dependencyRoots": [],
                                      },
                                    },
                                    {
                                      "Action": [
                                        "kms:Decrypt",
                                        "kms:DescribeKey",
                                      ],
                                      "Effect": "Allow",
                                      "Resource": "*",
                                    } => DependencyGroup {
                                      "_deps": [],
                                      Symbol(@aws-cdk/core.DependableTrait): {
                                        "dependencyRoots": [],
                                      },
                                    },
                                    {
                                      "Action": [
                                        "iam:CreateServiceSpecificCredential",
                                        "iam:DeleteServiceSpecificCredential",
                                        "iam:ListServiceSpecificCredentials",
                                      ],
                                      "Effect": "Allow",
                                      "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                    } => DependencyGroup {
                                      "_deps": [],
                                      Symbol(@aws-cdk/core.DependableTrait): {
                                        "dependencyRoots": [],
                                      },
                                    },
                                  },
                                  "env": {
                                    "account": "\${Token[AWS.AccountId.2]}",
                                    "region": "\${Token[AWS.Region.6]}",
                                  },
                                  "grantPrincipal": [Circular],
                                  "inlinePolicies": {},
                                  "managedPolicies": [
                                    AwsManagedPolicy {
                                      "managedPolicyArn": "arn:\${Token[AWS.Partition.5]}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                                    },
                                  ],
                                  "node": Node {
                                    "_children": {
                                      "DefaultPolicy": Policy {
                                        "_allowCrossEnvironment": false,
                                        "_physicalName": "\${Token[TOKEN.20]}",
                                        "_policyName": "\${Token[TOKEN.20]}",
                                        "document": {
                                          "Statement": [
                                            {
                                              "Action": "logs:CreateLogGroup",
                                              "Effect": "Allow",
                                              "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                            },
                                            {
                                              "Action": "secretsmanager:*",
                                              "Effect": "Allow",
                                              "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                            },
                                            {
                                              "Action": [
                                                "kms:Decrypt",
                                                "kms:DescribeKey",
                                              ],
                                              "Effect": "Allow",
                                              "Resource": "*",
                                            },
                                            {
                                              "Action": [
                                                "iam:CreateServiceSpecificCredential",
                                                "iam:DeleteServiceSpecificCredential",
                                                "iam:ListServiceSpecificCredentials",
                                              ],
                                              "Effect": "Allow",
                                              "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "env": {
                                          "account": "\${Token[AWS.AccountId.2]}",
                                          "region": "\${Token[AWS.Region.6]}",
                                        },
                                        "force": false,
                                        "grantPrincipal": PolicyGrantPrincipal {
                                          "_policy": [Circular],
                                          "assumeRoleAction": "sts:AssumeRole",
                                          "grantPrincipal": [Circular],
                                          "principalAccount": "\${Token[AWS.AccountId.2]}",
                                        },
                                        "groups": [],
                                        "node": Node {
                                          "_children": {
                                            "Resource": CfnPolicyConditional {
                                              "_cfnProperties": {
                                                "groups": [
                                                  "#{Token[TOKEN.23]}",
                                                ],
                                                "policyDocument": {
                                                  "Statement": [
                                                    {
                                                      "Action": "logs:CreateLogGroup",
                                                      "Effect": "Allow",
                                                      "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                                    },
                                                    {
                                                      "Action": "secretsmanager:*",
                                                      "Effect": "Allow",
                                                      "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                                    },
                                                    {
                                                      "Action": [
                                                        "kms:Decrypt",
                                                        "kms:DescribeKey",
                                                      ],
                                                      "Effect": "Allow",
                                                      "Resource": "*",
                                                    },
                                                    {
                                                      "Action": [
                                                        "iam:CreateServiceSpecificCredential",
                                                        "iam:DeleteServiceSpecificCredential",
                                                        "iam:ListServiceSpecificCredentials",
                                                      ],
                                                      "Effect": "Allow",
                                                      "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                                    },
                                                  ],
                                                  "Version": "2012-10-17",
                                                },
                                                "policyName": "\${Token[TOKEN.20]}",
                                                "roles": [
                                                  "#{Token[TOKEN.21]}",
                                                ],
                                                "users": [
                                                  "#{Token[TOKEN.22]}",
                                                ],
                                              },
                                              "cfnOptions": {},
                                              "cfnResourceType": "AWS::IAM::Policy",
                                              "dependsOn": Set {},
                                              "groups": [
                                                "#{Token[TOKEN.23]}",
                                              ],
                                              "logicalId": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                                              "node": Node {
                                                "_children": {},
                                                "_context": {},
                                                "_dependencies": Set {},
                                                "_locked": false,
                                                "_metadata": [
                                                  {
                                                    "data": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                                                    "trace": undefined,
                                                    "type": "aws:cdk:logicalId",
                                                  },
                                                ],
                                                "_validations": [],
                                                "host": [Circular],
                                                "id": "Resource",
                                                "scope": [Circular],
                                              },
                                              "policyDocument": {
                                                "Statement": [
                                                  {
                                                    "Action": "logs:CreateLogGroup",
                                                    "Effect": "Allow",
                                                    "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                                  },
                                                  {
                                                    "Action": "secretsmanager:*",
                                                    "Effect": "Allow",
                                                    "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                                  },
                                                  {
                                                    "Action": [
                                                      "kms:Decrypt",
                                                      "kms:DescribeKey",
                                                    ],
                                                    "Effect": "Allow",
                                                    "Resource": "*",
                                                  },
                                                  {
                                                    "Action": [
                                                      "iam:CreateServiceSpecificCredential",
                                                      "iam:DeleteServiceSpecificCredential",
                                                      "iam:ListServiceSpecificCredentials",
                                                    ],
                                                    "Effect": "Allow",
                                                    "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                                  },
                                                ],
                                                "Version": "2012-10-17",
                                              },
                                              "policyName": "\${Token[TOKEN.20]}",
                                              "rawOverrides": {},
                                              "roles": [
                                                "#{Token[TOKEN.21]}",
                                              ],
                                              "stack": [Circular],
                                              "users": [
                                                "#{Token[TOKEN.22]}",
                                              ],
                                              Symbol(@aws-cdk/core.DependableTrait): {
                                                "dependencyRoots": [
                                                  [Circular],
                                                ],
                                              },
                                            },
                                          },
                                          "_context": {},
                                          "_dependencies": Set {},
                                          "_locked": false,
                                          "_metadata": [],
                                          "_validations": [
                                            {
                                              "validate": [Function],
                                            },
                                          ],
                                          "host": [Circular],
                                          "id": "DefaultPolicy",
                                          "scope": [Circular],
                                        },
                                        "physicalName": "\${Token[TOKEN.20]}",
                                        "referenceTaken": false,
                                        "roles": [
                                          [Circular],
                                        ],
                                        "stack": [Circular],
                                        "users": [],
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [
                                            [Circular],
                                          ],
                                        },
                                      },
                                      "ImportCreateGitopsSecretLambda": ImportedRole {
                                        "_allowCrossEnvironment": false,
                                        "_physicalName": undefined,
                                        "assumeRoleAction": "sts:AssumeRole",
                                        "attachedPolicies": AttachedPolicies {
                                          "policies": [],
                                        },
                                        "defaultPolicyName": undefined,
                                        "env": {
                                          "account": "\${Token[AWS.AccountId.2]}",
                                          "region": "\${Token[AWS.Region.6]}",
                                        },
                                        "grantPrincipal": [Circular],
                                        "node": Node {
                                          "_children": {},
                                          "_context": {},
                                          "_dependencies": Set {},
                                          "_locked": false,
                                          "_metadata": [],
                                          "_validations": [],
                                          "host": [Circular],
                                          "id": "ImportCreateGitopsSecretLambda",
                                          "scope": [Circular],
                                        },
                                        "physicalName": "\${Token[TOKEN.12]}",
                                        "policyFragment": PrincipalPolicyFragment {
                                          "conditions": {},
                                          "principalJson": {
                                            "AWS": [
                                              "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                                            ],
                                          },
                                        },
                                        "principalAccount": "\${Token[AWS.AccountId.2]}",
                                        "roleArn": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                                        "roleName": "CreateGitopsSecretLambda",
                                        "stack": [Circular],
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [
                                            [Circular],
                                          ],
                                        },
                                      },
                                      "Resource": CfnRole {
                                        "_cfnProperties": {
                                          "assumeRolePolicyDocument": {
                                            "Statement": [
                                              {
                                                "Action": "sts:AssumeRole",
                                                "Effect": "Allow",
                                                "Principal": {
                                                  "Service": "\${Token[lambda.amazonaws.com.11]}",
                                                },
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "description": "AWS Accelerator assets access role in workload accounts to bootstrap gitops credentials",
                                          "managedPolicyArns": [
                                            "#{Token[TOKEN.13]}",
                                          ],
                                          "maxSessionDuration": undefined,
                                          "path": undefined,
                                          "permissionsBoundary": undefined,
                                          "policies": undefined,
                                          "roleName": "AWSLambdaBasicExecutionRole-codeCommitSecret",
                                        },
                                        "assumeRolePolicyDocument": {
                                          "Statement": [
                                            {
                                              "Action": "sts:AssumeRole",
                                              "Effect": "Allow",
                                              "Principal": {
                                                "Service": "\${Token[lambda.amazonaws.com.11]}",
                                              },
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "attrArn": "\${Token[TOKEN.15]}",
                                        "attrRoleId": "\${Token[TOKEN.16]}",
                                        "cfnOptions": {},
                                        "cfnResourceType": "AWS::IAM::Role",
                                        "dependsOn": Set {},
                                        "description": "AWS Accelerator assets access role in workload accounts to bootstrap gitops credentials",
                                        "logicalId": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.Resource.LogicalID.14]}",
                                        "managedPolicyArns": [
                                          "#{Token[TOKEN.13]}",
                                        ],
                                        "maxSessionDuration": undefined,
                                        "node": Node {
                                          "_children": {},
                                          "_context": {},
                                          "_dependencies": Set {},
                                          "_locked": false,
                                          "_metadata": [
                                            {
                                              "data": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.Resource.LogicalID.14]}",
                                              "trace": undefined,
                                              "type": "aws:cdk:logicalId",
                                            },
                                          ],
                                          "_validations": [],
                                          "host": [Circular],
                                          "id": "Resource",
                                          "scope": [Circular],
                                        },
                                        "path": undefined,
                                        "permissionsBoundary": undefined,
                                        "policies": undefined,
                                        "rawOverrides": {},
                                        "roleName": "AWSLambdaBasicExecutionRole-codeCommitSecret",
                                        "stack": [Circular],
                                        "tags": TagManager {
                                          "initialTagPriority": 50,
                                          "priorities": Map {},
                                          "renderedTags": "<unresolved-lazy>",
                                          "resourceTypeName": "AWS::IAM::Role",
                                          "tagFormatter": StandardFormatter {},
                                          "tagPropertyName": "tags",
                                          "tags": Map {},
                                        },
                                        Symbol(@aws-cdk/core.DependableTrait): {
                                          "dependencyRoots": [
                                            [Circular],
                                          ],
                                        },
                                      },
                                    },
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [],
                                    "_validations": [
                                      {
                                        "validate": [Function],
                                      },
                                    ],
                                    "host": [Circular],
                                    "id": "CreateGitopsSecretLambda",
                                    "scope": [Circular],
                                  },
                                  "permissionsBoundary": undefined,
                                  "physicalName": "AWSLambdaBasicExecutionRole-codeCommitSecret",
                                  "policyFragment": PrincipalPolicyFragment {
                                    "conditions": {},
                                    "principalJson": {
                                      "AWS": [
                                        "\${Token[TOKEN.17]}",
                                      ],
                                    },
                                  },
                                  "principalAccount": "\${Token[AWS.AccountId.2]}",
                                  "roleArn": "\${Token[TOKEN.17]}",
                                  "roleName": "\${Token[TOKEN.19]}",
                                  "stack": [Circular],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                              },
                              "_locked": false,
                              "_metadata": [
                                {
                                  "data": "\${Token[Default.codeCommitSecret.Function.Resource.LogicalID.652]}",
                                  "trace": undefined,
                                  "type": "aws:cdk:logicalId",
                                },
                              ],
                              "_validations": [],
                              "host": [Circular],
                              "id": "Resource",
                              "scope": [Circular],
                            },
                            "packageType": undefined,
                            "rawOverrides": {},
                            "reservedConcurrentExecutions": undefined,
                            "role": "\${Token[TOKEN.17]}",
                            "runtime": "nodejs18.x",
                            "runtimeManagementConfig": undefined,
                            "snapStart": undefined,
                            "stack": [Circular],
                            "tags": TagManager {
                              "initialTagPriority": 50,
                              "priorities": Map {},
                              "renderedTags": "<unresolved-lazy>",
                              "resourceTypeName": "AWS::Lambda::Function",
                              "tagFormatter": StandardFormatter {},
                              "tagPropertyName": "tags",
                              "tags": Map {},
                            },
                            "timeout": 900,
                            "tracingConfig": undefined,
                            "vpcConfig": undefined,
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                        },
                        "_context": {},
                        "_dependencies": Set {},
                        "_locked": false,
                        "_metadata": [],
                        "_validations": [],
                        "host": [Circular],
                        "id": "Function",
                        "scope": [Circular],
                      },
                      "stack": [Circular],
                    },
                  },
                  "principalStatement": {
                    "Action": "lambda:InvokeFunction",
                    "Effect": "Allow",
                    "Resource": [
                      "\${Token[TOKEN.658]}",
                      "\${Token[TOKEN.658]}:*",
                    ],
                  },
                  "principalStatements": [
                    {
                      "Action": "lambda:InvokeFunction",
                      "Effect": "Allow",
                      "Resource": [
                        "\${Token[TOKEN.658]}",
                        "\${Token[TOKEN.658]}:*",
                      ],
                    },
                  ],
                  "resourceStatement": undefined,
                  "resourceStatements": [],
                  Symbol(@aws-cdk/core.DependableTrait): {
                    "dependencyRoots": [],
                  },
                },
              },
              "_layers": [],
              "_physicalName": undefined,
              "_warnIfCurrentVersionCalled": false,
              "architecture": Architecture {
                "dockerPlatform": "linux/amd64",
                "name": "x86_64",
              },
              "canCreatePermissions": true,
              "currentVersionOptions": undefined,
              "env": {
                "account": "\${Token[AWS.AccountId.2]}",
                "region": "\${Token[AWS.Region.6]}",
              },
              "environment": {},
              "functionArn": "\${Token[TOKEN.658]}",
              "functionName": "\${Token[TOKEN.657]}",
              "grantPrincipal": Role {
                "_allowCrossEnvironment": true,
                "_didSplit": false,
                "_physicalName": "AWSLambdaBasicExecutionRole-codeCommitSecret",
                "_roleId": "\${Token[TOKEN.16]}",
                "assumeRoleAction": "sts:AssumeRole",
                "assumeRolePolicy": {
                  "Statement": [
                    {
                      "Action": "sts:AssumeRole",
                      "Effect": "Allow",
                      "Principal": {
                        "Service": "\${Token[lambda.amazonaws.com.11]}",
                      },
                    },
                  ],
                  "Version": "2012-10-17",
                },
                "attachedPolicies": AttachedPolicies {
                  "policies": [
                    Policy {
                      "_allowCrossEnvironment": false,
                      "_physicalName": "\${Token[TOKEN.20]}",
                      "_policyName": "\${Token[TOKEN.20]}",
                      "document": {
                        "Statement": [
                          {
                            "Action": "logs:CreateLogGroup",
                            "Effect": "Allow",
                            "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                          },
                          {
                            "Action": "secretsmanager:*",
                            "Effect": "Allow",
                            "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                          },
                          {
                            "Action": [
                              "kms:Decrypt",
                              "kms:DescribeKey",
                            ],
                            "Effect": "Allow",
                            "Resource": "*",
                          },
                          {
                            "Action": [
                              "iam:CreateServiceSpecificCredential",
                              "iam:DeleteServiceSpecificCredential",
                              "iam:ListServiceSpecificCredentials",
                            ],
                            "Effect": "Allow",
                            "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                          },
                        ],
                        "Version": "2012-10-17",
                      },
                      "env": {
                        "account": "\${Token[AWS.AccountId.2]}",
                        "region": "\${Token[AWS.Region.6]}",
                      },
                      "force": false,
                      "grantPrincipal": PolicyGrantPrincipal {
                        "_policy": [Circular],
                        "assumeRoleAction": "sts:AssumeRole",
                        "grantPrincipal": [Circular],
                        "principalAccount": "\${Token[AWS.AccountId.2]}",
                      },
                      "groups": [],
                      "node": Node {
                        "_children": {
                          "Resource": CfnPolicyConditional {
                            "_cfnProperties": {
                              "groups": [
                                "#{Token[TOKEN.23]}",
                              ],
                              "policyDocument": {
                                "Statement": [
                                  {
                                    "Action": "logs:CreateLogGroup",
                                    "Effect": "Allow",
                                    "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                  },
                                  {
                                    "Action": "secretsmanager:*",
                                    "Effect": "Allow",
                                    "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                  },
                                  {
                                    "Action": [
                                      "kms:Decrypt",
                                      "kms:DescribeKey",
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "*",
                                  },
                                  {
                                    "Action": [
                                      "iam:CreateServiceSpecificCredential",
                                      "iam:DeleteServiceSpecificCredential",
                                      "iam:ListServiceSpecificCredentials",
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                  },
                                ],
                                "Version": "2012-10-17",
                              },
                              "policyName": "\${Token[TOKEN.20]}",
                              "roles": [
                                "#{Token[TOKEN.21]}",
                              ],
                              "users": [
                                "#{Token[TOKEN.22]}",
                              ],
                            },
                            "cfnOptions": {},
                            "cfnResourceType": "AWS::IAM::Policy",
                            "dependsOn": Set {},
                            "groups": [
                              "#{Token[TOKEN.23]}",
                            ],
                            "logicalId": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                            "node": Node {
                              "_children": {},
                              "_context": {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": [
                                {
                                  "data": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                                  "trace": undefined,
                                  "type": "aws:cdk:logicalId",
                                },
                              ],
                              "_validations": [],
                              "host": [Circular],
                              "id": "Resource",
                              "scope": [Circular],
                            },
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "logs:CreateLogGroup",
                                  "Effect": "Allow",
                                  "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                },
                                {
                                  "Action": "secretsmanager:*",
                                  "Effect": "Allow",
                                  "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                },
                                {
                                  "Action": [
                                    "kms:Decrypt",
                                    "kms:DescribeKey",
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*",
                                },
                                {
                                  "Action": [
                                    "iam:CreateServiceSpecificCredential",
                                    "iam:DeleteServiceSpecificCredential",
                                    "iam:ListServiceSpecificCredentials",
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                },
                              ],
                              "Version": "2012-10-17",
                            },
                            "policyName": "\${Token[TOKEN.20]}",
                            "rawOverrides": {},
                            "roles": [
                              "#{Token[TOKEN.21]}",
                            ],
                            "stack": [Circular],
                            "users": [
                              "#{Token[TOKEN.22]}",
                            ],
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                        },
                        "_context": {},
                        "_dependencies": Set {},
                        "_locked": false,
                        "_metadata": [],
                        "_validations": [
                          {
                            "validate": [Function],
                          },
                        ],
                        "host": [Circular],
                        "id": "DefaultPolicy",
                        "scope": [Circular],
                      },
                      "physicalName": "\${Token[TOKEN.20]}",
                      "referenceTaken": false,
                      "roles": [
                        [Circular],
                      ],
                      "stack": [Circular],
                      "users": [],
                      Symbol(@aws-cdk/core.DependableTrait): {
                        "dependencyRoots": [
                          [Circular],
                        ],
                      },
                    },
                  ],
                },
                "defaultPolicy": Policy {
                  "_allowCrossEnvironment": false,
                  "_physicalName": "\${Token[TOKEN.20]}",
                  "_policyName": "\${Token[TOKEN.20]}",
                  "document": {
                    "Statement": [
                      {
                        "Action": "logs:CreateLogGroup",
                        "Effect": "Allow",
                        "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                      },
                      {
                        "Action": "secretsmanager:*",
                        "Effect": "Allow",
                        "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                      },
                      {
                        "Action": [
                          "kms:Decrypt",
                          "kms:DescribeKey",
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                      },
                      {
                        "Action": [
                          "iam:CreateServiceSpecificCredential",
                          "iam:DeleteServiceSpecificCredential",
                          "iam:ListServiceSpecificCredentials",
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                      },
                    ],
                    "Version": "2012-10-17",
                  },
                  "env": {
                    "account": "\${Token[AWS.AccountId.2]}",
                    "region": "\${Token[AWS.Region.6]}",
                  },
                  "force": false,
                  "grantPrincipal": PolicyGrantPrincipal {
                    "_policy": [Circular],
                    "assumeRoleAction": "sts:AssumeRole",
                    "grantPrincipal": [Circular],
                    "principalAccount": "\${Token[AWS.AccountId.2]}",
                  },
                  "groups": [],
                  "node": Node {
                    "_children": {
                      "Resource": CfnPolicyConditional {
                        "_cfnProperties": {
                          "groups": [
                            "#{Token[TOKEN.23]}",
                          ],
                          "policyDocument": {
                            "Statement": [
                              {
                                "Action": "logs:CreateLogGroup",
                                "Effect": "Allow",
                                "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                              },
                              {
                                "Action": "secretsmanager:*",
                                "Effect": "Allow",
                                "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                              },
                              {
                                "Action": [
                                  "kms:Decrypt",
                                  "kms:DescribeKey",
                                ],
                                "Effect": "Allow",
                                "Resource": "*",
                              },
                              {
                                "Action": [
                                  "iam:CreateServiceSpecificCredential",
                                  "iam:DeleteServiceSpecificCredential",
                                  "iam:ListServiceSpecificCredentials",
                                ],
                                "Effect": "Allow",
                                "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                              },
                            ],
                            "Version": "2012-10-17",
                          },
                          "policyName": "\${Token[TOKEN.20]}",
                          "roles": [
                            "#{Token[TOKEN.21]}",
                          ],
                          "users": [
                            "#{Token[TOKEN.22]}",
                          ],
                        },
                        "cfnOptions": {},
                        "cfnResourceType": "AWS::IAM::Policy",
                        "dependsOn": Set {},
                        "groups": [
                          "#{Token[TOKEN.23]}",
                        ],
                        "logicalId": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                        "node": Node {
                          "_children": {},
                          "_context": {},
                          "_dependencies": Set {},
                          "_locked": false,
                          "_metadata": [
                            {
                              "data": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                              "trace": undefined,
                              "type": "aws:cdk:logicalId",
                            },
                          ],
                          "_validations": [],
                          "host": [Circular],
                          "id": "Resource",
                          "scope": [Circular],
                        },
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": "logs:CreateLogGroup",
                              "Effect": "Allow",
                              "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                            },
                            {
                              "Action": "secretsmanager:*",
                              "Effect": "Allow",
                              "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                            },
                            {
                              "Action": [
                                "kms:Decrypt",
                                "kms:DescribeKey",
                              ],
                              "Effect": "Allow",
                              "Resource": "*",
                            },
                            {
                              "Action": [
                                "iam:CreateServiceSpecificCredential",
                                "iam:DeleteServiceSpecificCredential",
                                "iam:ListServiceSpecificCredentials",
                              ],
                              "Effect": "Allow",
                              "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                            },
                          ],
                          "Version": "2012-10-17",
                        },
                        "policyName": "\${Token[TOKEN.20]}",
                        "rawOverrides": {},
                        "roles": [
                          "#{Token[TOKEN.21]}",
                        ],
                        "stack": [Circular],
                        "users": [
                          "#{Token[TOKEN.22]}",
                        ],
                        Symbol(@aws-cdk/core.DependableTrait): {
                          "dependencyRoots": [
                            [Circular],
                          ],
                        },
                      },
                    },
                    "_context": {},
                    "_dependencies": Set {},
                    "_locked": false,
                    "_metadata": [],
                    "_validations": [
                      {
                        "validate": [Function],
                      },
                    ],
                    "host": [Circular],
                    "id": "DefaultPolicy",
                    "scope": [Circular],
                  },
                  "physicalName": "\${Token[TOKEN.20]}",
                  "referenceTaken": false,
                  "roles": [
                    [Circular],
                  ],
                  "stack": [Circular],
                  "users": [],
                  Symbol(@aws-cdk/core.DependableTrait): {
                    "dependencyRoots": [
                      [Circular],
                    ],
                  },
                },
                "dependables": Map {
                  {
                    "Action": "logs:CreateLogGroup",
                    "Effect": "Allow",
                    "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                  } => DependencyGroup {
                    "_deps": [],
                    Symbol(@aws-cdk/core.DependableTrait): {
                      "dependencyRoots": [],
                    },
                  },
                  {
                    "Action": "secretsmanager:*",
                    "Effect": "Allow",
                    "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                  } => DependencyGroup {
                    "_deps": [],
                    Symbol(@aws-cdk/core.DependableTrait): {
                      "dependencyRoots": [],
                    },
                  },
                  {
                    "Action": [
                      "kms:Decrypt",
                      "kms:DescribeKey",
                    ],
                    "Effect": "Allow",
                    "Resource": "*",
                  } => DependencyGroup {
                    "_deps": [],
                    Symbol(@aws-cdk/core.DependableTrait): {
                      "dependencyRoots": [],
                    },
                  },
                  {
                    "Action": [
                      "iam:CreateServiceSpecificCredential",
                      "iam:DeleteServiceSpecificCredential",
                      "iam:ListServiceSpecificCredentials",
                    ],
                    "Effect": "Allow",
                    "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                  } => DependencyGroup {
                    "_deps": [],
                    Symbol(@aws-cdk/core.DependableTrait): {
                      "dependencyRoots": [],
                    },
                  },
                },
                "env": {
                  "account": "\${Token[AWS.AccountId.2]}",
                  "region": "\${Token[AWS.Region.6]}",
                },
                "grantPrincipal": [Circular],
                "inlinePolicies": {},
                "managedPolicies": [
                  AwsManagedPolicy {
                    "managedPolicyArn": "arn:\${Token[AWS.Partition.5]}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                  },
                ],
                "node": Node {
                  "_children": {
                    "DefaultPolicy": Policy {
                      "_allowCrossEnvironment": false,
                      "_physicalName": "\${Token[TOKEN.20]}",
                      "_policyName": "\${Token[TOKEN.20]}",
                      "document": {
                        "Statement": [
                          {
                            "Action": "logs:CreateLogGroup",
                            "Effect": "Allow",
                            "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                          },
                          {
                            "Action": "secretsmanager:*",
                            "Effect": "Allow",
                            "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                          },
                          {
                            "Action": [
                              "kms:Decrypt",
                              "kms:DescribeKey",
                            ],
                            "Effect": "Allow",
                            "Resource": "*",
                          },
                          {
                            "Action": [
                              "iam:CreateServiceSpecificCredential",
                              "iam:DeleteServiceSpecificCredential",
                              "iam:ListServiceSpecificCredentials",
                            ],
                            "Effect": "Allow",
                            "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                          },
                        ],
                        "Version": "2012-10-17",
                      },
                      "env": {
                        "account": "\${Token[AWS.AccountId.2]}",
                        "region": "\${Token[AWS.Region.6]}",
                      },
                      "force": false,
                      "grantPrincipal": PolicyGrantPrincipal {
                        "_policy": [Circular],
                        "assumeRoleAction": "sts:AssumeRole",
                        "grantPrincipal": [Circular],
                        "principalAccount": "\${Token[AWS.AccountId.2]}",
                      },
                      "groups": [],
                      "node": Node {
                        "_children": {
                          "Resource": CfnPolicyConditional {
                            "_cfnProperties": {
                              "groups": [
                                "#{Token[TOKEN.23]}",
                              ],
                              "policyDocument": {
                                "Statement": [
                                  {
                                    "Action": "logs:CreateLogGroup",
                                    "Effect": "Allow",
                                    "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                  },
                                  {
                                    "Action": "secretsmanager:*",
                                    "Effect": "Allow",
                                    "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                  },
                                  {
                                    "Action": [
                                      "kms:Decrypt",
                                      "kms:DescribeKey",
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "*",
                                  },
                                  {
                                    "Action": [
                                      "iam:CreateServiceSpecificCredential",
                                      "iam:DeleteServiceSpecificCredential",
                                      "iam:ListServiceSpecificCredentials",
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                  },
                                ],
                                "Version": "2012-10-17",
                              },
                              "policyName": "\${Token[TOKEN.20]}",
                              "roles": [
                                "#{Token[TOKEN.21]}",
                              ],
                              "users": [
                                "#{Token[TOKEN.22]}",
                              ],
                            },
                            "cfnOptions": {},
                            "cfnResourceType": "AWS::IAM::Policy",
                            "dependsOn": Set {},
                            "groups": [
                              "#{Token[TOKEN.23]}",
                            ],
                            "logicalId": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                            "node": Node {
                              "_children": {},
                              "_context": {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": [
                                {
                                  "data": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                                  "trace": undefined,
                                  "type": "aws:cdk:logicalId",
                                },
                              ],
                              "_validations": [],
                              "host": [Circular],
                              "id": "Resource",
                              "scope": [Circular],
                            },
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "logs:CreateLogGroup",
                                  "Effect": "Allow",
                                  "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                },
                                {
                                  "Action": "secretsmanager:*",
                                  "Effect": "Allow",
                                  "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                },
                                {
                                  "Action": [
                                    "kms:Decrypt",
                                    "kms:DescribeKey",
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*",
                                },
                                {
                                  "Action": [
                                    "iam:CreateServiceSpecificCredential",
                                    "iam:DeleteServiceSpecificCredential",
                                    "iam:ListServiceSpecificCredentials",
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                },
                              ],
                              "Version": "2012-10-17",
                            },
                            "policyName": "\${Token[TOKEN.20]}",
                            "rawOverrides": {},
                            "roles": [
                              "#{Token[TOKEN.21]}",
                            ],
                            "stack": [Circular],
                            "users": [
                              "#{Token[TOKEN.22]}",
                            ],
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                        },
                        "_context": {},
                        "_dependencies": Set {},
                        "_locked": false,
                        "_metadata": [],
                        "_validations": [
                          {
                            "validate": [Function],
                          },
                        ],
                        "host": [Circular],
                        "id": "DefaultPolicy",
                        "scope": [Circular],
                      },
                      "physicalName": "\${Token[TOKEN.20]}",
                      "referenceTaken": false,
                      "roles": [
                        [Circular],
                      ],
                      "stack": [Circular],
                      "users": [],
                      Symbol(@aws-cdk/core.DependableTrait): {
                        "dependencyRoots": [
                          [Circular],
                        ],
                      },
                    },
                    "ImportCreateGitopsSecretLambda": ImportedRole {
                      "_allowCrossEnvironment": false,
                      "_physicalName": undefined,
                      "assumeRoleAction": "sts:AssumeRole",
                      "attachedPolicies": AttachedPolicies {
                        "policies": [],
                      },
                      "defaultPolicyName": undefined,
                      "env": {
                        "account": "\${Token[AWS.AccountId.2]}",
                        "region": "\${Token[AWS.Region.6]}",
                      },
                      "grantPrincipal": [Circular],
                      "node": Node {
                        "_children": {},
                        "_context": {},
                        "_dependencies": Set {},
                        "_locked": false,
                        "_metadata": [],
                        "_validations": [],
                        "host": [Circular],
                        "id": "ImportCreateGitopsSecretLambda",
                        "scope": [Circular],
                      },
                      "physicalName": "\${Token[TOKEN.12]}",
                      "policyFragment": PrincipalPolicyFragment {
                        "conditions": {},
                        "principalJson": {
                          "AWS": [
                            "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                          ],
                        },
                      },
                      "principalAccount": "\${Token[AWS.AccountId.2]}",
                      "roleArn": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                      "roleName": "CreateGitopsSecretLambda",
                      "stack": [Circular],
                      Symbol(@aws-cdk/core.DependableTrait): {
                        "dependencyRoots": [
                          [Circular],
                        ],
                      },
                    },
                    "Resource": CfnRole {
                      "_cfnProperties": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "\${Token[lambda.amazonaws.com.11]}",
                              },
                            },
                          ],
                          "Version": "2012-10-17",
                        },
                        "description": "AWS Accelerator assets access role in workload accounts to bootstrap gitops credentials",
                        "managedPolicyArns": [
                          "#{Token[TOKEN.13]}",
                        ],
                        "maxSessionDuration": undefined,
                        "path": undefined,
                        "permissionsBoundary": undefined,
                        "policies": undefined,
                        "roleName": "AWSLambdaBasicExecutionRole-codeCommitSecret",
                      },
                      "assumeRolePolicyDocument": {
                        "Statement": [
                          {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                              "Service": "\${Token[lambda.amazonaws.com.11]}",
                            },
                          },
                        ],
                        "Version": "2012-10-17",
                      },
                      "attrArn": "\${Token[TOKEN.15]}",
                      "attrRoleId": "\${Token[TOKEN.16]}",
                      "cfnOptions": {},
                      "cfnResourceType": "AWS::IAM::Role",
                      "dependsOn": Set {},
                      "description": "AWS Accelerator assets access role in workload accounts to bootstrap gitops credentials",
                      "logicalId": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.Resource.LogicalID.14]}",
                      "managedPolicyArns": [
                        "#{Token[TOKEN.13]}",
                      ],
                      "maxSessionDuration": undefined,
                      "node": Node {
                        "_children": {},
                        "_context": {},
                        "_dependencies": Set {},
                        "_locked": false,
                        "_metadata": [
                          {
                            "data": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.Resource.LogicalID.14]}",
                            "trace": undefined,
                            "type": "aws:cdk:logicalId",
                          },
                        ],
                        "_validations": [],
                        "host": [Circular],
                        "id": "Resource",
                        "scope": [Circular],
                      },
                      "path": undefined,
                      "permissionsBoundary": undefined,
                      "policies": undefined,
                      "rawOverrides": {},
                      "roleName": "AWSLambdaBasicExecutionRole-codeCommitSecret",
                      "stack": [Circular],
                      "tags": TagManager {
                        "initialTagPriority": 50,
                        "priorities": Map {},
                        "renderedTags": "<unresolved-lazy>",
                        "resourceTypeName": "AWS::IAM::Role",
                        "tagFormatter": StandardFormatter {},
                        "tagPropertyName": "tags",
                        "tags": Map {},
                      },
                      Symbol(@aws-cdk/core.DependableTrait): {
                        "dependencyRoots": [
                          [Circular],
                        ],
                      },
                    },
                  },
                  "_context": {},
                  "_dependencies": Set {},
                  "_locked": false,
                  "_metadata": [],
                  "_validations": [
                    {
                      "validate": [Function],
                    },
                  ],
                  "host": [Circular],
                  "id": "CreateGitopsSecretLambda",
                  "scope": [Circular],
                },
                "permissionsBoundary": undefined,
                "physicalName": "AWSLambdaBasicExecutionRole-codeCommitSecret",
                "policyFragment": PrincipalPolicyFragment {
                  "conditions": {},
                  "principalJson": {
                    "AWS": [
                      "\${Token[TOKEN.17]}",
                    ],
                  },
                },
                "principalAccount": "\${Token[AWS.AccountId.2]}",
                "roleArn": "\${Token[TOKEN.17]}",
                "roleName": "\${Token[TOKEN.19]}",
                "stack": [Circular],
                Symbol(@aws-cdk/core.DependableTrait): {
                  "dependencyRoots": [
                    [Circular],
                  ],
                },
              },
              "hashMixins": [],
              "node": Node {
                "_children": {
                  "Code": Asset {
                    "assetHash": "437761578112cb81b0b580e5b870f6bb63cb2ab57ec7b59e9c0cf3dd5ce02013",
                    "assetPath": "asset.437761578112cb81b0b580e5b870f6bb63cb2ab57ec7b59e9c0cf3dd5ce02013",
                    "bucket": Import {
                      "_allowCrossEnvironment": false,
                      "_physicalName": undefined,
                      "autoCreatePolicy": false,
                      "bucketArn": "arn:\${Token[AWS.Partition.5]}:s3:::\${Token[TOKEN.647]}",
                      "bucketDomainName": "\${Token[TOKEN.647]}.s3.\${Token[AWS.URLSuffix.3]}",
                      "bucketDualStackDomainName": "\${Token[TOKEN.647]}.s3.dualstack.\${Token[AWS.Region.6]}.\${Token[AWS.URLSuffix.3]}",
                      "bucketName": "\${Token[TOKEN.647]}",
                      "bucketRegionalDomainName": "\${Token[TOKEN.647]}.s3.\${Token[AWS.Region.6]}.\${Token[AWS.URLSuffix.3]}",
                      "bucketWebsiteDomainName": "\${Token[TOKEN.647]}.\${Token[TOKEN.649]}",
                      "bucketWebsiteNewUrlFormat": false,
                      "bucketWebsiteUrl": "http://\${Token[TOKEN.647]}.\${Token[TOKEN.649]}",
                      "disallowPublicAccess": false,
                      "encryptionKey": undefined,
                      "env": {
                        "account": "\${Token[AWS.AccountId.2]}",
                        "region": "\${Token[AWS.Region.6]}",
                      },
                      "isWebsite": false,
                      "node": Node {
                        "_children": {},
                        "_context": {},
                        "_dependencies": Set {},
                        "_locked": false,
                        "_metadata": [],
                        "_validations": [
                          {
                            "validate": [Function],
                          },
                        ],
                        "host": [Circular],
                        "id": "AssetBucket",
                        "scope": [Circular],
                      },
                      "notificationsHandlerRole": undefined,
                      "physicalName": "\${Token[TOKEN.650]}",
                      "policy": undefined,
                      "stack": [Circular],
                      Symbol(@aws-cdk/core.DependableTrait): {
                        "dependencyRoots": [
                          [Circular],
                        ],
                      },
                    },
                    "httpUrl": "\${Token[TOKEN.646]}",
                    "isBundled": false,
                    "isFile": false,
                    "isZipArchive": true,
                    "node": Node {
                      "_children": {
                        "AssetBucket": Import {
                          "_allowCrossEnvironment": false,
                          "_physicalName": undefined,
                          "autoCreatePolicy": false,
                          "bucketArn": "arn:\${Token[AWS.Partition.5]}:s3:::\${Token[TOKEN.647]}",
                          "bucketDomainName": "\${Token[TOKEN.647]}.s3.\${Token[AWS.URLSuffix.3]}",
                          "bucketDualStackDomainName": "\${Token[TOKEN.647]}.s3.dualstack.\${Token[AWS.Region.6]}.\${Token[AWS.URLSuffix.3]}",
                          "bucketName": "\${Token[TOKEN.647]}",
                          "bucketRegionalDomainName": "\${Token[TOKEN.647]}.s3.\${Token[AWS.Region.6]}.\${Token[AWS.URLSuffix.3]}",
                          "bucketWebsiteDomainName": "\${Token[TOKEN.647]}.\${Token[TOKEN.649]}",
                          "bucketWebsiteNewUrlFormat": false,
                          "bucketWebsiteUrl": "http://\${Token[TOKEN.647]}.\${Token[TOKEN.649]}",
                          "disallowPublicAccess": false,
                          "encryptionKey": undefined,
                          "env": {
                            "account": "\${Token[AWS.AccountId.2]}",
                            "region": "\${Token[AWS.Region.6]}",
                          },
                          "isWebsite": false,
                          "node": Node {
                            "_children": {},
                            "_context": {},
                            "_dependencies": Set {},
                            "_locked": false,
                            "_metadata": [],
                            "_validations": [
                              {
                                "validate": [Function],
                              },
                            ],
                            "host": [Circular],
                            "id": "AssetBucket",
                            "scope": [Circular],
                          },
                          "notificationsHandlerRole": undefined,
                          "physicalName": "\${Token[TOKEN.650]}",
                          "policy": undefined,
                          "stack": [Circular],
                          Symbol(@aws-cdk/core.DependableTrait): {
                            "dependencyRoots": [
                              [Circular],
                            ],
                          },
                        },
                        "Stage": AssetStaging {
                          "absoluteStagedPath": "/private/var/folders/tn/799yyvm92g74fj_thj2z7w140000gr/T/cdk-test-app-WFT8EN/asset.437761578112cb81b0b580e5b870f6bb63cb2ab57ec7b59e9c0cf3dd5ce02013",
                          "assetHash": "437761578112cb81b0b580e5b870f6bb63cb2ab57ec7b59e9c0cf3dd5ce02013",
                          "assetOutdir": "/private/var/folders/tn/799yyvm92g74fj_thj2z7w140000gr/T/cdk-test-app-WFT8EN",
                          "cacheKey": "944e1635f7fdfeb3073e35dcc76cabb302cf6e89afa2c77982bff6c3fdf3cdab",
                          "customSourceFingerprint": undefined,
                          "fingerprintOptions": {
                            "assetHash": undefined,
                            "extraHash": undefined,
                            "follow": undefined,
                            "path": "/Users/rverma/dev/aws/nsl-saas-accelerator/packages/constructs/lib/aws-codecommit/lambda-codecommit-secret/dist",
                            "sourcePath": "/Users/rverma/dev/aws/nsl-saas-accelerator/packages/constructs/lib/aws-codecommit/lambda-codecommit-secret/dist",
                          },
                          "hashType": "source",
                          "isArchive": true,
                          "node": Node {
                            "_children": {},
                            "_context": {},
                            "_dependencies": Set {},
                            "_locked": false,
                            "_metadata": [],
                            "_validations": [],
                            "host": [Circular],
                            "id": "Stage",
                            "scope": [Circular],
                          },
                          "packaging": "zip",
                          "sourcePath": "/Users/rverma/dev/aws/nsl-saas-accelerator/packages/constructs/lib/aws-codecommit/lambda-codecommit-secret/dist",
                          "sourceStats": Stats {
                            "atime": 2023-04-19T09:28:15.189Z,
                            "atimeMs": 1681896495189.284,
                            "birthtime": 2023-04-18T10:17:45.917Z,
                            "birthtimeMs": 1681813065916.9114,
                            "blksize": 4096,
                            "blocks": 0,
                            "ctime": 2023-04-19T09:28:15.155Z,
                            "ctimeMs": 1681896495155.161,
                            "dev": 16777233,
                            "gid": 20,
                            "ino": 64257818,
                            "mode": 16877,
                            "mtime": 2023-04-19T09:28:15.155Z,
                            "mtimeMs": 1681896495155.161,
                            "nlink": 4,
                            "rdev": 0,
                            "size": 128,
                            "uid": 504,
                          },
                          "stagedPath": "/private/var/folders/tn/799yyvm92g74fj_thj2z7w140000gr/T/cdk-test-app-WFT8EN/asset.437761578112cb81b0b580e5b870f6bb63cb2ab57ec7b59e9c0cf3dd5ce02013",
                          Symbol(@aws-cdk/core.DependableTrait): {
                            "dependencyRoots": [
                              [Circular],
                            ],
                          },
                        },
                      },
                      "_context": {},
                      "_dependencies": Set {},
                      "_locked": false,
                      "_metadata": [],
                      "_validations": [],
                      "host": [Circular],
                      "id": "Code",
                      "scope": [Circular],
                    },
                    "s3BucketName": "\${Token[TOKEN.647]}",
                    "s3ObjectKey": "REPLACED-GENERATED-NAME.zip",
                    "s3ObjectUrl": "\${Token[TOKEN.648]}",
                    "s3Url": "\${Token[TOKEN.646]}",
                    "sourceHash": "437761578112cb81b0b580e5b870f6bb63cb2ab57ec7b59e9c0cf3dd5ce02013",
                    Symbol(@aws-cdk/core.DependableTrait): {
                      "dependencyRoots": [
                        [Circular],
                      ],
                    },
                  },
                  "Resource": CfnFunction {
                    "_cfnProperties": {
                      "architectures": undefined,
                      "code": {
                        "imageUri": undefined,
                        "s3Bucket": "\${Token[TOKEN.647]}",
                        "s3Key": "REPLACED-GENERATED-NAME.zip",
                        "s3ObjectVersion": undefined,
                        "zipFile": undefined,
                      },
                      "codeSigningConfigArn": undefined,
                      "deadLetterConfig": undefined,
                      "description": "Create Gitops Secret",
                      "environment": "<unresolved-lazy>",
                      "ephemeralStorage": undefined,
                      "fileSystemConfigs": undefined,
                      "functionName": "\${Token[TOKEN.645]}",
                      "handler": "index.handler",
                      "imageConfig": undefined,
                      "kmsKeyArn": undefined,
                      "layers": [
                        "#{Token[TOKEN.651]}",
                      ],
                      "memorySize": undefined,
                      "packageType": undefined,
                      "reservedConcurrentExecutions": undefined,
                      "role": "\${Token[TOKEN.17]}",
                      "runtime": "nodejs18.x",
                      "runtimeManagementConfig": undefined,
                      "timeout": 900,
                      "vpcConfig": undefined,
                    },
                    "architectures": undefined,
                    "attrArn": "\${Token[TOKEN.653]}",
                    "attrSnapStartResponseApplyOn": "\${Token[TOKEN.654]}",
                    "attrSnapStartResponseOptimizationStatus": "\${Token[TOKEN.655]}",
                    "cfnOptions": {},
                    "cfnResourceType": "AWS::Lambda::Function",
                    "code": {
                      "imageUri": undefined,
                      "s3Bucket": "\${Token[TOKEN.647]}",
                      "s3Key": "REPLACED-GENERATED-NAME.zip",
                      "s3ObjectVersion": undefined,
                      "zipFile": undefined,
                    },
                    "codeSigningConfigArn": undefined,
                    "deadLetterConfig": undefined,
                    "dependsOn": Set {},
                    "description": "Create Gitops Secret",
                    "environment": "<unresolved-lazy>",
                    "ephemeralStorage": undefined,
                    "fileSystemConfigs": undefined,
                    "functionName": "\${Token[TOKEN.645]}",
                    "handler": "index.handler",
                    "imageConfig": undefined,
                    "kmsKeyArn": undefined,
                    "layers": [
                      "#{Token[TOKEN.651]}",
                    ],
                    "logicalId": "\${Token[Default.codeCommitSecret.Function.Resource.LogicalID.652]}",
                    "memorySize": undefined,
                    "node": Node {
                      "_children": {},
                      "_context": {},
                      "_dependencies": Set {
                        Role {
                          "_allowCrossEnvironment": true,
                          "_didSplit": false,
                          "_physicalName": "AWSLambdaBasicExecutionRole-codeCommitSecret",
                          "_roleId": "\${Token[TOKEN.16]}",
                          "assumeRoleAction": "sts:AssumeRole",
                          "assumeRolePolicy": {
                            "Statement": [
                              {
                                "Action": "sts:AssumeRole",
                                "Effect": "Allow",
                                "Principal": {
                                  "Service": "\${Token[lambda.amazonaws.com.11]}",
                                },
                              },
                            ],
                            "Version": "2012-10-17",
                          },
                          "attachedPolicies": AttachedPolicies {
                            "policies": [
                              Policy {
                                "_allowCrossEnvironment": false,
                                "_physicalName": "\${Token[TOKEN.20]}",
                                "_policyName": "\${Token[TOKEN.20]}",
                                "document": {
                                  "Statement": [
                                    {
                                      "Action": "logs:CreateLogGroup",
                                      "Effect": "Allow",
                                      "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                    },
                                    {
                                      "Action": "secretsmanager:*",
                                      "Effect": "Allow",
                                      "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                    },
                                    {
                                      "Action": [
                                        "kms:Decrypt",
                                        "kms:DescribeKey",
                                      ],
                                      "Effect": "Allow",
                                      "Resource": "*",
                                    },
                                    {
                                      "Action": [
                                        "iam:CreateServiceSpecificCredential",
                                        "iam:DeleteServiceSpecificCredential",
                                        "iam:ListServiceSpecificCredentials",
                                      ],
                                      "Effect": "Allow",
                                      "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "env": {
                                  "account": "\${Token[AWS.AccountId.2]}",
                                  "region": "\${Token[AWS.Region.6]}",
                                },
                                "force": false,
                                "grantPrincipal": PolicyGrantPrincipal {
                                  "_policy": [Circular],
                                  "assumeRoleAction": "sts:AssumeRole",
                                  "grantPrincipal": [Circular],
                                  "principalAccount": "\${Token[AWS.AccountId.2]}",
                                },
                                "groups": [],
                                "node": Node {
                                  "_children": {
                                    "Resource": CfnPolicyConditional {
                                      "_cfnProperties": {
                                        "groups": [
                                          "#{Token[TOKEN.23]}",
                                        ],
                                        "policyDocument": {
                                          "Statement": [
                                            {
                                              "Action": "logs:CreateLogGroup",
                                              "Effect": "Allow",
                                              "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                            },
                                            {
                                              "Action": "secretsmanager:*",
                                              "Effect": "Allow",
                                              "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                            },
                                            {
                                              "Action": [
                                                "kms:Decrypt",
                                                "kms:DescribeKey",
                                              ],
                                              "Effect": "Allow",
                                              "Resource": "*",
                                            },
                                            {
                                              "Action": [
                                                "iam:CreateServiceSpecificCredential",
                                                "iam:DeleteServiceSpecificCredential",
                                                "iam:ListServiceSpecificCredentials",
                                              ],
                                              "Effect": "Allow",
                                              "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "policyName": "\${Token[TOKEN.20]}",
                                        "roles": [
                                          "#{Token[TOKEN.21]}",
                                        ],
                                        "users": [
                                          "#{Token[TOKEN.22]}",
                                        ],
                                      },
                                      "cfnOptions": {},
                                      "cfnResourceType": "AWS::IAM::Policy",
                                      "dependsOn": Set {},
                                      "groups": [
                                        "#{Token[TOKEN.23]}",
                                      ],
                                      "logicalId": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                                      "node": Node {
                                        "_children": {},
                                        "_context": {},
                                        "_dependencies": Set {},
                                        "_locked": false,
                                        "_metadata": [
                                          {
                                            "data": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                                            "trace": undefined,
                                            "type": "aws:cdk:logicalId",
                                          },
                                        ],
                                        "_validations": [],
                                        "host": [Circular],
                                        "id": "Resource",
                                        "scope": [Circular],
                                      },
                                      "policyDocument": {
                                        "Statement": [
                                          {
                                            "Action": "logs:CreateLogGroup",
                                            "Effect": "Allow",
                                            "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                          },
                                          {
                                            "Action": "secretsmanager:*",
                                            "Effect": "Allow",
                                            "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                          },
                                          {
                                            "Action": [
                                              "kms:Decrypt",
                                              "kms:DescribeKey",
                                            ],
                                            "Effect": "Allow",
                                            "Resource": "*",
                                          },
                                          {
                                            "Action": [
                                              "iam:CreateServiceSpecificCredential",
                                              "iam:DeleteServiceSpecificCredential",
                                              "iam:ListServiceSpecificCredentials",
                                            ],
                                            "Effect": "Allow",
                                            "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "policyName": "\${Token[TOKEN.20]}",
                                      "rawOverrides": {},
                                      "roles": [
                                        "#{Token[TOKEN.21]}",
                                      ],
                                      "stack": [Circular],
                                      "users": [
                                        "#{Token[TOKEN.22]}",
                                      ],
                                      Symbol(@aws-cdk/core.DependableTrait): {
                                        "dependencyRoots": [
                                          [Circular],
                                        ],
                                      },
                                    },
                                  },
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [],
                                  "_validations": [
                                    {
                                      "validate": [Function],
                                    },
                                  ],
                                  "host": [Circular],
                                  "id": "DefaultPolicy",
                                  "scope": [Circular],
                                },
                                "physicalName": "\${Token[TOKEN.20]}",
                                "referenceTaken": false,
                                "roles": [
                                  [Circular],
                                ],
                                "stack": [Circular],
                                "users": [],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                            ],
                          },
                          "defaultPolicy": Policy {
                            "_allowCrossEnvironment": false,
                            "_physicalName": "\${Token[TOKEN.20]}",
                            "_policyName": "\${Token[TOKEN.20]}",
                            "document": {
                              "Statement": [
                                {
                                  "Action": "logs:CreateLogGroup",
                                  "Effect": "Allow",
                                  "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                },
                                {
                                  "Action": "secretsmanager:*",
                                  "Effect": "Allow",
                                  "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                },
                                {
                                  "Action": [
                                    "kms:Decrypt",
                                    "kms:DescribeKey",
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*",
                                },
                                {
                                  "Action": [
                                    "iam:CreateServiceSpecificCredential",
                                    "iam:DeleteServiceSpecificCredential",
                                    "iam:ListServiceSpecificCredentials",
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                },
                              ],
                              "Version": "2012-10-17",
                            },
                            "env": {
                              "account": "\${Token[AWS.AccountId.2]}",
                              "region": "\${Token[AWS.Region.6]}",
                            },
                            "force": false,
                            "grantPrincipal": PolicyGrantPrincipal {
                              "_policy": [Circular],
                              "assumeRoleAction": "sts:AssumeRole",
                              "grantPrincipal": [Circular],
                              "principalAccount": "\${Token[AWS.AccountId.2]}",
                            },
                            "groups": [],
                            "node": Node {
                              "_children": {
                                "Resource": CfnPolicyConditional {
                                  "_cfnProperties": {
                                    "groups": [
                                      "#{Token[TOKEN.23]}",
                                    ],
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "logs:CreateLogGroup",
                                          "Effect": "Allow",
                                          "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                        },
                                        {
                                          "Action": "secretsmanager:*",
                                          "Effect": "Allow",
                                          "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                        },
                                        {
                                          "Action": [
                                            "kms:Decrypt",
                                            "kms:DescribeKey",
                                          ],
                                          "Effect": "Allow",
                                          "Resource": "*",
                                        },
                                        {
                                          "Action": [
                                            "iam:CreateServiceSpecificCredential",
                                            "iam:DeleteServiceSpecificCredential",
                                            "iam:ListServiceSpecificCredentials",
                                          ],
                                          "Effect": "Allow",
                                          "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "policyName": "\${Token[TOKEN.20]}",
                                    "roles": [
                                      "#{Token[TOKEN.21]}",
                                    ],
                                    "users": [
                                      "#{Token[TOKEN.22]}",
                                    ],
                                  },
                                  "cfnOptions": {},
                                  "cfnResourceType": "AWS::IAM::Policy",
                                  "dependsOn": Set {},
                                  "groups": [
                                    "#{Token[TOKEN.23]}",
                                  ],
                                  "logicalId": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                                  "node": Node {
                                    "_children": {},
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [
                                      {
                                        "data": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                                        "trace": undefined,
                                        "type": "aws:cdk:logicalId",
                                      },
                                    ],
                                    "_validations": [],
                                    "host": [Circular],
                                    "id": "Resource",
                                    "scope": [Circular],
                                  },
                                  "policyDocument": {
                                    "Statement": [
                                      {
                                        "Action": "logs:CreateLogGroup",
                                        "Effect": "Allow",
                                        "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                      },
                                      {
                                        "Action": "secretsmanager:*",
                                        "Effect": "Allow",
                                        "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                      },
                                      {
                                        "Action": [
                                          "kms:Decrypt",
                                          "kms:DescribeKey",
                                        ],
                                        "Effect": "Allow",
                                        "Resource": "*",
                                      },
                                      {
                                        "Action": [
                                          "iam:CreateServiceSpecificCredential",
                                          "iam:DeleteServiceSpecificCredential",
                                          "iam:ListServiceSpecificCredentials",
                                        ],
                                        "Effect": "Allow",
                                        "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "policyName": "\${Token[TOKEN.20]}",
                                  "rawOverrides": {},
                                  "roles": [
                                    "#{Token[TOKEN.21]}",
                                  ],
                                  "stack": [Circular],
                                  "users": [
                                    "#{Token[TOKEN.22]}",
                                  ],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                              },
                              "_context": {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": [],
                              "_validations": [
                                {
                                  "validate": [Function],
                                },
                              ],
                              "host": [Circular],
                              "id": "DefaultPolicy",
                              "scope": [Circular],
                            },
                            "physicalName": "\${Token[TOKEN.20]}",
                            "referenceTaken": false,
                            "roles": [
                              [Circular],
                            ],
                            "stack": [Circular],
                            "users": [],
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                          "dependables": Map {
                            {
                              "Action": "logs:CreateLogGroup",
                              "Effect": "Allow",
                              "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                            } => DependencyGroup {
                              "_deps": [],
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [],
                              },
                            },
                            {
                              "Action": "secretsmanager:*",
                              "Effect": "Allow",
                              "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                            } => DependencyGroup {
                              "_deps": [],
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [],
                              },
                            },
                            {
                              "Action": [
                                "kms:Decrypt",
                                "kms:DescribeKey",
                              ],
                              "Effect": "Allow",
                              "Resource": "*",
                            } => DependencyGroup {
                              "_deps": [],
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [],
                              },
                            },
                            {
                              "Action": [
                                "iam:CreateServiceSpecificCredential",
                                "iam:DeleteServiceSpecificCredential",
                                "iam:ListServiceSpecificCredentials",
                              ],
                              "Effect": "Allow",
                              "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                            } => DependencyGroup {
                              "_deps": [],
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [],
                              },
                            },
                          },
                          "env": {
                            "account": "\${Token[AWS.AccountId.2]}",
                            "region": "\${Token[AWS.Region.6]}",
                          },
                          "grantPrincipal": [Circular],
                          "inlinePolicies": {},
                          "managedPolicies": [
                            AwsManagedPolicy {
                              "managedPolicyArn": "arn:\${Token[AWS.Partition.5]}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                            },
                          ],
                          "node": Node {
                            "_children": {
                              "DefaultPolicy": Policy {
                                "_allowCrossEnvironment": false,
                                "_physicalName": "\${Token[TOKEN.20]}",
                                "_policyName": "\${Token[TOKEN.20]}",
                                "document": {
                                  "Statement": [
                                    {
                                      "Action": "logs:CreateLogGroup",
                                      "Effect": "Allow",
                                      "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                    },
                                    {
                                      "Action": "secretsmanager:*",
                                      "Effect": "Allow",
                                      "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                    },
                                    {
                                      "Action": [
                                        "kms:Decrypt",
                                        "kms:DescribeKey",
                                      ],
                                      "Effect": "Allow",
                                      "Resource": "*",
                                    },
                                    {
                                      "Action": [
                                        "iam:CreateServiceSpecificCredential",
                                        "iam:DeleteServiceSpecificCredential",
                                        "iam:ListServiceSpecificCredentials",
                                      ],
                                      "Effect": "Allow",
                                      "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "env": {
                                  "account": "\${Token[AWS.AccountId.2]}",
                                  "region": "\${Token[AWS.Region.6]}",
                                },
                                "force": false,
                                "grantPrincipal": PolicyGrantPrincipal {
                                  "_policy": [Circular],
                                  "assumeRoleAction": "sts:AssumeRole",
                                  "grantPrincipal": [Circular],
                                  "principalAccount": "\${Token[AWS.AccountId.2]}",
                                },
                                "groups": [],
                                "node": Node {
                                  "_children": {
                                    "Resource": CfnPolicyConditional {
                                      "_cfnProperties": {
                                        "groups": [
                                          "#{Token[TOKEN.23]}",
                                        ],
                                        "policyDocument": {
                                          "Statement": [
                                            {
                                              "Action": "logs:CreateLogGroup",
                                              "Effect": "Allow",
                                              "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                            },
                                            {
                                              "Action": "secretsmanager:*",
                                              "Effect": "Allow",
                                              "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                            },
                                            {
                                              "Action": [
                                                "kms:Decrypt",
                                                "kms:DescribeKey",
                                              ],
                                              "Effect": "Allow",
                                              "Resource": "*",
                                            },
                                            {
                                              "Action": [
                                                "iam:CreateServiceSpecificCredential",
                                                "iam:DeleteServiceSpecificCredential",
                                                "iam:ListServiceSpecificCredentials",
                                              ],
                                              "Effect": "Allow",
                                              "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "policyName": "\${Token[TOKEN.20]}",
                                        "roles": [
                                          "#{Token[TOKEN.21]}",
                                        ],
                                        "users": [
                                          "#{Token[TOKEN.22]}",
                                        ],
                                      },
                                      "cfnOptions": {},
                                      "cfnResourceType": "AWS::IAM::Policy",
                                      "dependsOn": Set {},
                                      "groups": [
                                        "#{Token[TOKEN.23]}",
                                      ],
                                      "logicalId": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                                      "node": Node {
                                        "_children": {},
                                        "_context": {},
                                        "_dependencies": Set {},
                                        "_locked": false,
                                        "_metadata": [
                                          {
                                            "data": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                                            "trace": undefined,
                                            "type": "aws:cdk:logicalId",
                                          },
                                        ],
                                        "_validations": [],
                                        "host": [Circular],
                                        "id": "Resource",
                                        "scope": [Circular],
                                      },
                                      "policyDocument": {
                                        "Statement": [
                                          {
                                            "Action": "logs:CreateLogGroup",
                                            "Effect": "Allow",
                                            "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                          },
                                          {
                                            "Action": "secretsmanager:*",
                                            "Effect": "Allow",
                                            "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                          },
                                          {
                                            "Action": [
                                              "kms:Decrypt",
                                              "kms:DescribeKey",
                                            ],
                                            "Effect": "Allow",
                                            "Resource": "*",
                                          },
                                          {
                                            "Action": [
                                              "iam:CreateServiceSpecificCredential",
                                              "iam:DeleteServiceSpecificCredential",
                                              "iam:ListServiceSpecificCredentials",
                                            ],
                                            "Effect": "Allow",
                                            "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "policyName": "\${Token[TOKEN.20]}",
                                      "rawOverrides": {},
                                      "roles": [
                                        "#{Token[TOKEN.21]}",
                                      ],
                                      "stack": [Circular],
                                      "users": [
                                        "#{Token[TOKEN.22]}",
                                      ],
                                      Symbol(@aws-cdk/core.DependableTrait): {
                                        "dependencyRoots": [
                                          [Circular],
                                        ],
                                      },
                                    },
                                  },
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [],
                                  "_validations": [
                                    {
                                      "validate": [Function],
                                    },
                                  ],
                                  "host": [Circular],
                                  "id": "DefaultPolicy",
                                  "scope": [Circular],
                                },
                                "physicalName": "\${Token[TOKEN.20]}",
                                "referenceTaken": false,
                                "roles": [
                                  [Circular],
                                ],
                                "stack": [Circular],
                                "users": [],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                              "ImportCreateGitopsSecretLambda": ImportedRole {
                                "_allowCrossEnvironment": false,
                                "_physicalName": undefined,
                                "assumeRoleAction": "sts:AssumeRole",
                                "attachedPolicies": AttachedPolicies {
                                  "policies": [],
                                },
                                "defaultPolicyName": undefined,
                                "env": {
                                  "account": "\${Token[AWS.AccountId.2]}",
                                  "region": "\${Token[AWS.Region.6]}",
                                },
                                "grantPrincipal": [Circular],
                                "node": Node {
                                  "_children": {},
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [],
                                  "_validations": [],
                                  "host": [Circular],
                                  "id": "ImportCreateGitopsSecretLambda",
                                  "scope": [Circular],
                                },
                                "physicalName": "\${Token[TOKEN.12]}",
                                "policyFragment": PrincipalPolicyFragment {
                                  "conditions": {},
                                  "principalJson": {
                                    "AWS": [
                                      "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                                    ],
                                  },
                                },
                                "principalAccount": "\${Token[AWS.AccountId.2]}",
                                "roleArn": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                                "roleName": "CreateGitopsSecretLambda",
                                "stack": [Circular],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                              "Resource": CfnRole {
                                "_cfnProperties": {
                                  "assumeRolePolicyDocument": {
                                    "Statement": [
                                      {
                                        "Action": "sts:AssumeRole",
                                        "Effect": "Allow",
                                        "Principal": {
                                          "Service": "\${Token[lambda.amazonaws.com.11]}",
                                        },
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "description": "AWS Accelerator assets access role in workload accounts to bootstrap gitops credentials",
                                  "managedPolicyArns": [
                                    "#{Token[TOKEN.13]}",
                                  ],
                                  "maxSessionDuration": undefined,
                                  "path": undefined,
                                  "permissionsBoundary": undefined,
                                  "policies": undefined,
                                  "roleName": "AWSLambdaBasicExecutionRole-codeCommitSecret",
                                },
                                "assumeRolePolicyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Principal": {
                                        "Service": "\${Token[lambda.amazonaws.com.11]}",
                                      },
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "attrArn": "\${Token[TOKEN.15]}",
                                "attrRoleId": "\${Token[TOKEN.16]}",
                                "cfnOptions": {},
                                "cfnResourceType": "AWS::IAM::Role",
                                "dependsOn": Set {},
                                "description": "AWS Accelerator assets access role in workload accounts to bootstrap gitops credentials",
                                "logicalId": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.Resource.LogicalID.14]}",
                                "managedPolicyArns": [
                                  "#{Token[TOKEN.13]}",
                                ],
                                "maxSessionDuration": undefined,
                                "node": Node {
                                  "_children": {},
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [
                                    {
                                      "data": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.Resource.LogicalID.14]}",
                                      "trace": undefined,
                                      "type": "aws:cdk:logicalId",
                                    },
                                  ],
                                  "_validations": [],
                                  "host": [Circular],
                                  "id": "Resource",
                                  "scope": [Circular],
                                },
                                "path": undefined,
                                "permissionsBoundary": undefined,
                                "policies": undefined,
                                "rawOverrides": {},
                                "roleName": "AWSLambdaBasicExecutionRole-codeCommitSecret",
                                "stack": [Circular],
                                "tags": TagManager {
                                  "initialTagPriority": 50,
                                  "priorities": Map {},
                                  "renderedTags": "<unresolved-lazy>",
                                  "resourceTypeName": "AWS::IAM::Role",
                                  "tagFormatter": StandardFormatter {},
                                  "tagPropertyName": "tags",
                                  "tags": Map {},
                                },
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                            },
                            "_context": {},
                            "_dependencies": Set {},
                            "_locked": false,
                            "_metadata": [],
                            "_validations": [
                              {
                                "validate": [Function],
                              },
                            ],
                            "host": [Circular],
                            "id": "CreateGitopsSecretLambda",
                            "scope": [Circular],
                          },
                          "permissionsBoundary": undefined,
                          "physicalName": "AWSLambdaBasicExecutionRole-codeCommitSecret",
                          "policyFragment": PrincipalPolicyFragment {
                            "conditions": {},
                            "principalJson": {
                              "AWS": [
                                "\${Token[TOKEN.17]}",
                              ],
                            },
                          },
                          "principalAccount": "\${Token[AWS.AccountId.2]}",
                          "roleArn": "\${Token[TOKEN.17]}",
                          "roleName": "\${Token[TOKEN.19]}",
                          "stack": [Circular],
                          Symbol(@aws-cdk/core.DependableTrait): {
                            "dependencyRoots": [
                              [Circular],
                            ],
                          },
                        },
                      },
                      "_locked": false,
                      "_metadata": [
                        {
                          "data": "\${Token[Default.codeCommitSecret.Function.Resource.LogicalID.652]}",
                          "trace": undefined,
                          "type": "aws:cdk:logicalId",
                        },
                      ],
                      "_validations": [],
                      "host": [Circular],
                      "id": "Resource",
                      "scope": [Circular],
                    },
                    "packageType": undefined,
                    "rawOverrides": {},
                    "reservedConcurrentExecutions": undefined,
                    "role": "\${Token[TOKEN.17]}",
                    "runtime": "nodejs18.x",
                    "runtimeManagementConfig": undefined,
                    "snapStart": undefined,
                    "stack": [Circular],
                    "tags": TagManager {
                      "initialTagPriority": 50,
                      "priorities": Map {},
                      "renderedTags": "<unresolved-lazy>",
                      "resourceTypeName": "AWS::Lambda::Function",
                      "tagFormatter": StandardFormatter {},
                      "tagPropertyName": "tags",
                      "tags": Map {},
                    },
                    "timeout": 900,
                    "tracingConfig": undefined,
                    "vpcConfig": undefined,
                    Symbol(@aws-cdk/core.DependableTrait): {
                      "dependencyRoots": [
                        [Circular],
                      ],
                    },
                  },
                },
                "_context": {},
                "_dependencies": Set {},
                "_locked": false,
                "_metadata": [],
                "_validations": [],
                "host": [Circular],
                "id": "Function",
                "scope": [Circular],
              },
              "permissionsNode": Node {
                "_children": {
                  "Code": Asset {
                    "assetHash": "437761578112cb81b0b580e5b870f6bb63cb2ab57ec7b59e9c0cf3dd5ce02013",
                    "assetPath": "asset.437761578112cb81b0b580e5b870f6bb63cb2ab57ec7b59e9c0cf3dd5ce02013",
                    "bucket": Import {
                      "_allowCrossEnvironment": false,
                      "_physicalName": undefined,
                      "autoCreatePolicy": false,
                      "bucketArn": "arn:\${Token[AWS.Partition.5]}:s3:::\${Token[TOKEN.647]}",
                      "bucketDomainName": "\${Token[TOKEN.647]}.s3.\${Token[AWS.URLSuffix.3]}",
                      "bucketDualStackDomainName": "\${Token[TOKEN.647]}.s3.dualstack.\${Token[AWS.Region.6]}.\${Token[AWS.URLSuffix.3]}",
                      "bucketName": "\${Token[TOKEN.647]}",
                      "bucketRegionalDomainName": "\${Token[TOKEN.647]}.s3.\${Token[AWS.Region.6]}.\${Token[AWS.URLSuffix.3]}",
                      "bucketWebsiteDomainName": "\${Token[TOKEN.647]}.\${Token[TOKEN.649]}",
                      "bucketWebsiteNewUrlFormat": false,
                      "bucketWebsiteUrl": "http://\${Token[TOKEN.647]}.\${Token[TOKEN.649]}",
                      "disallowPublicAccess": false,
                      "encryptionKey": undefined,
                      "env": {
                        "account": "\${Token[AWS.AccountId.2]}",
                        "region": "\${Token[AWS.Region.6]}",
                      },
                      "isWebsite": false,
                      "node": Node {
                        "_children": {},
                        "_context": {},
                        "_dependencies": Set {},
                        "_locked": false,
                        "_metadata": [],
                        "_validations": [
                          {
                            "validate": [Function],
                          },
                        ],
                        "host": [Circular],
                        "id": "AssetBucket",
                        "scope": [Circular],
                      },
                      "notificationsHandlerRole": undefined,
                      "physicalName": "\${Token[TOKEN.650]}",
                      "policy": undefined,
                      "stack": [Circular],
                      Symbol(@aws-cdk/core.DependableTrait): {
                        "dependencyRoots": [
                          [Circular],
                        ],
                      },
                    },
                    "httpUrl": "\${Token[TOKEN.646]}",
                    "isBundled": false,
                    "isFile": false,
                    "isZipArchive": true,
                    "node": Node {
                      "_children": {
                        "AssetBucket": Import {
                          "_allowCrossEnvironment": false,
                          "_physicalName": undefined,
                          "autoCreatePolicy": false,
                          "bucketArn": "arn:\${Token[AWS.Partition.5]}:s3:::\${Token[TOKEN.647]}",
                          "bucketDomainName": "\${Token[TOKEN.647]}.s3.\${Token[AWS.URLSuffix.3]}",
                          "bucketDualStackDomainName": "\${Token[TOKEN.647]}.s3.dualstack.\${Token[AWS.Region.6]}.\${Token[AWS.URLSuffix.3]}",
                          "bucketName": "\${Token[TOKEN.647]}",
                          "bucketRegionalDomainName": "\${Token[TOKEN.647]}.s3.\${Token[AWS.Region.6]}.\${Token[AWS.URLSuffix.3]}",
                          "bucketWebsiteDomainName": "\${Token[TOKEN.647]}.\${Token[TOKEN.649]}",
                          "bucketWebsiteNewUrlFormat": false,
                          "bucketWebsiteUrl": "http://\${Token[TOKEN.647]}.\${Token[TOKEN.649]}",
                          "disallowPublicAccess": false,
                          "encryptionKey": undefined,
                          "env": {
                            "account": "\${Token[AWS.AccountId.2]}",
                            "region": "\${Token[AWS.Region.6]}",
                          },
                          "isWebsite": false,
                          "node": Node {
                            "_children": {},
                            "_context": {},
                            "_dependencies": Set {},
                            "_locked": false,
                            "_metadata": [],
                            "_validations": [
                              {
                                "validate": [Function],
                              },
                            ],
                            "host": [Circular],
                            "id": "AssetBucket",
                            "scope": [Circular],
                          },
                          "notificationsHandlerRole": undefined,
                          "physicalName": "\${Token[TOKEN.650]}",
                          "policy": undefined,
                          "stack": [Circular],
                          Symbol(@aws-cdk/core.DependableTrait): {
                            "dependencyRoots": [
                              [Circular],
                            ],
                          },
                        },
                        "Stage": AssetStaging {
                          "absoluteStagedPath": "/private/var/folders/tn/799yyvm92g74fj_thj2z7w140000gr/T/cdk-test-app-WFT8EN/asset.437761578112cb81b0b580e5b870f6bb63cb2ab57ec7b59e9c0cf3dd5ce02013",
                          "assetHash": "437761578112cb81b0b580e5b870f6bb63cb2ab57ec7b59e9c0cf3dd5ce02013",
                          "assetOutdir": "/private/var/folders/tn/799yyvm92g74fj_thj2z7w140000gr/T/cdk-test-app-WFT8EN",
                          "cacheKey": "944e1635f7fdfeb3073e35dcc76cabb302cf6e89afa2c77982bff6c3fdf3cdab",
                          "customSourceFingerprint": undefined,
                          "fingerprintOptions": {
                            "assetHash": undefined,
                            "extraHash": undefined,
                            "follow": undefined,
                            "path": "/Users/rverma/dev/aws/nsl-saas-accelerator/packages/constructs/lib/aws-codecommit/lambda-codecommit-secret/dist",
                            "sourcePath": "/Users/rverma/dev/aws/nsl-saas-accelerator/packages/constructs/lib/aws-codecommit/lambda-codecommit-secret/dist",
                          },
                          "hashType": "source",
                          "isArchive": true,
                          "node": Node {
                            "_children": {},
                            "_context": {},
                            "_dependencies": Set {},
                            "_locked": false,
                            "_metadata": [],
                            "_validations": [],
                            "host": [Circular],
                            "id": "Stage",
                            "scope": [Circular],
                          },
                          "packaging": "zip",
                          "sourcePath": "/Users/rverma/dev/aws/nsl-saas-accelerator/packages/constructs/lib/aws-codecommit/lambda-codecommit-secret/dist",
                          "sourceStats": Stats {
                            "atime": 2023-04-19T09:28:15.189Z,
                            "atimeMs": 1681896495189.284,
                            "birthtime": 2023-04-18T10:17:45.917Z,
                            "birthtimeMs": 1681813065916.9114,
                            "blksize": 4096,
                            "blocks": 0,
                            "ctime": 2023-04-19T09:28:15.155Z,
                            "ctimeMs": 1681896495155.161,
                            "dev": 16777233,
                            "gid": 20,
                            "ino": 64257818,
                            "mode": 16877,
                            "mtime": 2023-04-19T09:28:15.155Z,
                            "mtimeMs": 1681896495155.161,
                            "nlink": 4,
                            "rdev": 0,
                            "size": 128,
                            "uid": 504,
                          },
                          "stagedPath": "/private/var/folders/tn/799yyvm92g74fj_thj2z7w140000gr/T/cdk-test-app-WFT8EN/asset.437761578112cb81b0b580e5b870f6bb63cb2ab57ec7b59e9c0cf3dd5ce02013",
                          Symbol(@aws-cdk/core.DependableTrait): {
                            "dependencyRoots": [
                              [Circular],
                            ],
                          },
                        },
                      },
                      "_context": {},
                      "_dependencies": Set {},
                      "_locked": false,
                      "_metadata": [],
                      "_validations": [],
                      "host": [Circular],
                      "id": "Code",
                      "scope": [Circular],
                    },
                    "s3BucketName": "\${Token[TOKEN.647]}",
                    "s3ObjectKey": "REPLACED-GENERATED-NAME.zip",
                    "s3ObjectUrl": "\${Token[TOKEN.648]}",
                    "s3Url": "\${Token[TOKEN.646]}",
                    "sourceHash": "437761578112cb81b0b580e5b870f6bb63cb2ab57ec7b59e9c0cf3dd5ce02013",
                    Symbol(@aws-cdk/core.DependableTrait): {
                      "dependencyRoots": [
                        [Circular],
                      ],
                    },
                  },
                  "Resource": CfnFunction {
                    "_cfnProperties": {
                      "architectures": undefined,
                      "code": {
                        "imageUri": undefined,
                        "s3Bucket": "\${Token[TOKEN.647]}",
                        "s3Key": "REPLACED-GENERATED-NAME.zip",
                        "s3ObjectVersion": undefined,
                        "zipFile": undefined,
                      },
                      "codeSigningConfigArn": undefined,
                      "deadLetterConfig": undefined,
                      "description": "Create Gitops Secret",
                      "environment": "<unresolved-lazy>",
                      "ephemeralStorage": undefined,
                      "fileSystemConfigs": undefined,
                      "functionName": "\${Token[TOKEN.645]}",
                      "handler": "index.handler",
                      "imageConfig": undefined,
                      "kmsKeyArn": undefined,
                      "layers": [
                        "#{Token[TOKEN.651]}",
                      ],
                      "memorySize": undefined,
                      "packageType": undefined,
                      "reservedConcurrentExecutions": undefined,
                      "role": "\${Token[TOKEN.17]}",
                      "runtime": "nodejs18.x",
                      "runtimeManagementConfig": undefined,
                      "timeout": 900,
                      "vpcConfig": undefined,
                    },
                    "architectures": undefined,
                    "attrArn": "\${Token[TOKEN.653]}",
                    "attrSnapStartResponseApplyOn": "\${Token[TOKEN.654]}",
                    "attrSnapStartResponseOptimizationStatus": "\${Token[TOKEN.655]}",
                    "cfnOptions": {},
                    "cfnResourceType": "AWS::Lambda::Function",
                    "code": {
                      "imageUri": undefined,
                      "s3Bucket": "\${Token[TOKEN.647]}",
                      "s3Key": "REPLACED-GENERATED-NAME.zip",
                      "s3ObjectVersion": undefined,
                      "zipFile": undefined,
                    },
                    "codeSigningConfigArn": undefined,
                    "deadLetterConfig": undefined,
                    "dependsOn": Set {},
                    "description": "Create Gitops Secret",
                    "environment": "<unresolved-lazy>",
                    "ephemeralStorage": undefined,
                    "fileSystemConfigs": undefined,
                    "functionName": "\${Token[TOKEN.645]}",
                    "handler": "index.handler",
                    "imageConfig": undefined,
                    "kmsKeyArn": undefined,
                    "layers": [
                      "#{Token[TOKEN.651]}",
                    ],
                    "logicalId": "\${Token[Default.codeCommitSecret.Function.Resource.LogicalID.652]}",
                    "memorySize": undefined,
                    "node": Node {
                      "_children": {},
                      "_context": {},
                      "_dependencies": Set {
                        Role {
                          "_allowCrossEnvironment": true,
                          "_didSplit": false,
                          "_physicalName": "AWSLambdaBasicExecutionRole-codeCommitSecret",
                          "_roleId": "\${Token[TOKEN.16]}",
                          "assumeRoleAction": "sts:AssumeRole",
                          "assumeRolePolicy": {
                            "Statement": [
                              {
                                "Action": "sts:AssumeRole",
                                "Effect": "Allow",
                                "Principal": {
                                  "Service": "\${Token[lambda.amazonaws.com.11]}",
                                },
                              },
                            ],
                            "Version": "2012-10-17",
                          },
                          "attachedPolicies": AttachedPolicies {
                            "policies": [
                              Policy {
                                "_allowCrossEnvironment": false,
                                "_physicalName": "\${Token[TOKEN.20]}",
                                "_policyName": "\${Token[TOKEN.20]}",
                                "document": {
                                  "Statement": [
                                    {
                                      "Action": "logs:CreateLogGroup",
                                      "Effect": "Allow",
                                      "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                    },
                                    {
                                      "Action": "secretsmanager:*",
                                      "Effect": "Allow",
                                      "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                    },
                                    {
                                      "Action": [
                                        "kms:Decrypt",
                                        "kms:DescribeKey",
                                      ],
                                      "Effect": "Allow",
                                      "Resource": "*",
                                    },
                                    {
                                      "Action": [
                                        "iam:CreateServiceSpecificCredential",
                                        "iam:DeleteServiceSpecificCredential",
                                        "iam:ListServiceSpecificCredentials",
                                      ],
                                      "Effect": "Allow",
                                      "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "env": {
                                  "account": "\${Token[AWS.AccountId.2]}",
                                  "region": "\${Token[AWS.Region.6]}",
                                },
                                "force": false,
                                "grantPrincipal": PolicyGrantPrincipal {
                                  "_policy": [Circular],
                                  "assumeRoleAction": "sts:AssumeRole",
                                  "grantPrincipal": [Circular],
                                  "principalAccount": "\${Token[AWS.AccountId.2]}",
                                },
                                "groups": [],
                                "node": Node {
                                  "_children": {
                                    "Resource": CfnPolicyConditional {
                                      "_cfnProperties": {
                                        "groups": [
                                          "#{Token[TOKEN.23]}",
                                        ],
                                        "policyDocument": {
                                          "Statement": [
                                            {
                                              "Action": "logs:CreateLogGroup",
                                              "Effect": "Allow",
                                              "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                            },
                                            {
                                              "Action": "secretsmanager:*",
                                              "Effect": "Allow",
                                              "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                            },
                                            {
                                              "Action": [
                                                "kms:Decrypt",
                                                "kms:DescribeKey",
                                              ],
                                              "Effect": "Allow",
                                              "Resource": "*",
                                            },
                                            {
                                              "Action": [
                                                "iam:CreateServiceSpecificCredential",
                                                "iam:DeleteServiceSpecificCredential",
                                                "iam:ListServiceSpecificCredentials",
                                              ],
                                              "Effect": "Allow",
                                              "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "policyName": "\${Token[TOKEN.20]}",
                                        "roles": [
                                          "#{Token[TOKEN.21]}",
                                        ],
                                        "users": [
                                          "#{Token[TOKEN.22]}",
                                        ],
                                      },
                                      "cfnOptions": {},
                                      "cfnResourceType": "AWS::IAM::Policy",
                                      "dependsOn": Set {},
                                      "groups": [
                                        "#{Token[TOKEN.23]}",
                                      ],
                                      "logicalId": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                                      "node": Node {
                                        "_children": {},
                                        "_context": {},
                                        "_dependencies": Set {},
                                        "_locked": false,
                                        "_metadata": [
                                          {
                                            "data": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                                            "trace": undefined,
                                            "type": "aws:cdk:logicalId",
                                          },
                                        ],
                                        "_validations": [],
                                        "host": [Circular],
                                        "id": "Resource",
                                        "scope": [Circular],
                                      },
                                      "policyDocument": {
                                        "Statement": [
                                          {
                                            "Action": "logs:CreateLogGroup",
                                            "Effect": "Allow",
                                            "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                          },
                                          {
                                            "Action": "secretsmanager:*",
                                            "Effect": "Allow",
                                            "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                          },
                                          {
                                            "Action": [
                                              "kms:Decrypt",
                                              "kms:DescribeKey",
                                            ],
                                            "Effect": "Allow",
                                            "Resource": "*",
                                          },
                                          {
                                            "Action": [
                                              "iam:CreateServiceSpecificCredential",
                                              "iam:DeleteServiceSpecificCredential",
                                              "iam:ListServiceSpecificCredentials",
                                            ],
                                            "Effect": "Allow",
                                            "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "policyName": "\${Token[TOKEN.20]}",
                                      "rawOverrides": {},
                                      "roles": [
                                        "#{Token[TOKEN.21]}",
                                      ],
                                      "stack": [Circular],
                                      "users": [
                                        "#{Token[TOKEN.22]}",
                                      ],
                                      Symbol(@aws-cdk/core.DependableTrait): {
                                        "dependencyRoots": [
                                          [Circular],
                                        ],
                                      },
                                    },
                                  },
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [],
                                  "_validations": [
                                    {
                                      "validate": [Function],
                                    },
                                  ],
                                  "host": [Circular],
                                  "id": "DefaultPolicy",
                                  "scope": [Circular],
                                },
                                "physicalName": "\${Token[TOKEN.20]}",
                                "referenceTaken": false,
                                "roles": [
                                  [Circular],
                                ],
                                "stack": [Circular],
                                "users": [],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                            ],
                          },
                          "defaultPolicy": Policy {
                            "_allowCrossEnvironment": false,
                            "_physicalName": "\${Token[TOKEN.20]}",
                            "_policyName": "\${Token[TOKEN.20]}",
                            "document": {
                              "Statement": [
                                {
                                  "Action": "logs:CreateLogGroup",
                                  "Effect": "Allow",
                                  "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                },
                                {
                                  "Action": "secretsmanager:*",
                                  "Effect": "Allow",
                                  "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                },
                                {
                                  "Action": [
                                    "kms:Decrypt",
                                    "kms:DescribeKey",
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*",
                                },
                                {
                                  "Action": [
                                    "iam:CreateServiceSpecificCredential",
                                    "iam:DeleteServiceSpecificCredential",
                                    "iam:ListServiceSpecificCredentials",
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                },
                              ],
                              "Version": "2012-10-17",
                            },
                            "env": {
                              "account": "\${Token[AWS.AccountId.2]}",
                              "region": "\${Token[AWS.Region.6]}",
                            },
                            "force": false,
                            "grantPrincipal": PolicyGrantPrincipal {
                              "_policy": [Circular],
                              "assumeRoleAction": "sts:AssumeRole",
                              "grantPrincipal": [Circular],
                              "principalAccount": "\${Token[AWS.AccountId.2]}",
                            },
                            "groups": [],
                            "node": Node {
                              "_children": {
                                "Resource": CfnPolicyConditional {
                                  "_cfnProperties": {
                                    "groups": [
                                      "#{Token[TOKEN.23]}",
                                    ],
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "logs:CreateLogGroup",
                                          "Effect": "Allow",
                                          "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                        },
                                        {
                                          "Action": "secretsmanager:*",
                                          "Effect": "Allow",
                                          "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                        },
                                        {
                                          "Action": [
                                            "kms:Decrypt",
                                            "kms:DescribeKey",
                                          ],
                                          "Effect": "Allow",
                                          "Resource": "*",
                                        },
                                        {
                                          "Action": [
                                            "iam:CreateServiceSpecificCredential",
                                            "iam:DeleteServiceSpecificCredential",
                                            "iam:ListServiceSpecificCredentials",
                                          ],
                                          "Effect": "Allow",
                                          "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "policyName": "\${Token[TOKEN.20]}",
                                    "roles": [
                                      "#{Token[TOKEN.21]}",
                                    ],
                                    "users": [
                                      "#{Token[TOKEN.22]}",
                                    ],
                                  },
                                  "cfnOptions": {},
                                  "cfnResourceType": "AWS::IAM::Policy",
                                  "dependsOn": Set {},
                                  "groups": [
                                    "#{Token[TOKEN.23]}",
                                  ],
                                  "logicalId": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                                  "node": Node {
                                    "_children": {},
                                    "_context": {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": [
                                      {
                                        "data": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                                        "trace": undefined,
                                        "type": "aws:cdk:logicalId",
                                      },
                                    ],
                                    "_validations": [],
                                    "host": [Circular],
                                    "id": "Resource",
                                    "scope": [Circular],
                                  },
                                  "policyDocument": {
                                    "Statement": [
                                      {
                                        "Action": "logs:CreateLogGroup",
                                        "Effect": "Allow",
                                        "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                      },
                                      {
                                        "Action": "secretsmanager:*",
                                        "Effect": "Allow",
                                        "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                      },
                                      {
                                        "Action": [
                                          "kms:Decrypt",
                                          "kms:DescribeKey",
                                        ],
                                        "Effect": "Allow",
                                        "Resource": "*",
                                      },
                                      {
                                        "Action": [
                                          "iam:CreateServiceSpecificCredential",
                                          "iam:DeleteServiceSpecificCredential",
                                          "iam:ListServiceSpecificCredentials",
                                        ],
                                        "Effect": "Allow",
                                        "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "policyName": "\${Token[TOKEN.20]}",
                                  "rawOverrides": {},
                                  "roles": [
                                    "#{Token[TOKEN.21]}",
                                  ],
                                  "stack": [Circular],
                                  "users": [
                                    "#{Token[TOKEN.22]}",
                                  ],
                                  Symbol(@aws-cdk/core.DependableTrait): {
                                    "dependencyRoots": [
                                      [Circular],
                                    ],
                                  },
                                },
                              },
                              "_context": {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": [],
                              "_validations": [
                                {
                                  "validate": [Function],
                                },
                              ],
                              "host": [Circular],
                              "id": "DefaultPolicy",
                              "scope": [Circular],
                            },
                            "physicalName": "\${Token[TOKEN.20]}",
                            "referenceTaken": false,
                            "roles": [
                              [Circular],
                            ],
                            "stack": [Circular],
                            "users": [],
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                          "dependables": Map {
                            {
                              "Action": "logs:CreateLogGroup",
                              "Effect": "Allow",
                              "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                            } => DependencyGroup {
                              "_deps": [],
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [],
                              },
                            },
                            {
                              "Action": "secretsmanager:*",
                              "Effect": "Allow",
                              "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                            } => DependencyGroup {
                              "_deps": [],
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [],
                              },
                            },
                            {
                              "Action": [
                                "kms:Decrypt",
                                "kms:DescribeKey",
                              ],
                              "Effect": "Allow",
                              "Resource": "*",
                            } => DependencyGroup {
                              "_deps": [],
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [],
                              },
                            },
                            {
                              "Action": [
                                "iam:CreateServiceSpecificCredential",
                                "iam:DeleteServiceSpecificCredential",
                                "iam:ListServiceSpecificCredentials",
                              ],
                              "Effect": "Allow",
                              "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                            } => DependencyGroup {
                              "_deps": [],
                              Symbol(@aws-cdk/core.DependableTrait): {
                                "dependencyRoots": [],
                              },
                            },
                          },
                          "env": {
                            "account": "\${Token[AWS.AccountId.2]}",
                            "region": "\${Token[AWS.Region.6]}",
                          },
                          "grantPrincipal": [Circular],
                          "inlinePolicies": {},
                          "managedPolicies": [
                            AwsManagedPolicy {
                              "managedPolicyArn": "arn:\${Token[AWS.Partition.5]}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                            },
                          ],
                          "node": Node {
                            "_children": {
                              "DefaultPolicy": Policy {
                                "_allowCrossEnvironment": false,
                                "_physicalName": "\${Token[TOKEN.20]}",
                                "_policyName": "\${Token[TOKEN.20]}",
                                "document": {
                                  "Statement": [
                                    {
                                      "Action": "logs:CreateLogGroup",
                                      "Effect": "Allow",
                                      "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                    },
                                    {
                                      "Action": "secretsmanager:*",
                                      "Effect": "Allow",
                                      "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                    },
                                    {
                                      "Action": [
                                        "kms:Decrypt",
                                        "kms:DescribeKey",
                                      ],
                                      "Effect": "Allow",
                                      "Resource": "*",
                                    },
                                    {
                                      "Action": [
                                        "iam:CreateServiceSpecificCredential",
                                        "iam:DeleteServiceSpecificCredential",
                                        "iam:ListServiceSpecificCredentials",
                                      ],
                                      "Effect": "Allow",
                                      "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "env": {
                                  "account": "\${Token[AWS.AccountId.2]}",
                                  "region": "\${Token[AWS.Region.6]}",
                                },
                                "force": false,
                                "grantPrincipal": PolicyGrantPrincipal {
                                  "_policy": [Circular],
                                  "assumeRoleAction": "sts:AssumeRole",
                                  "grantPrincipal": [Circular],
                                  "principalAccount": "\${Token[AWS.AccountId.2]}",
                                },
                                "groups": [],
                                "node": Node {
                                  "_children": {
                                    "Resource": CfnPolicyConditional {
                                      "_cfnProperties": {
                                        "groups": [
                                          "#{Token[TOKEN.23]}",
                                        ],
                                        "policyDocument": {
                                          "Statement": [
                                            {
                                              "Action": "logs:CreateLogGroup",
                                              "Effect": "Allow",
                                              "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                            },
                                            {
                                              "Action": "secretsmanager:*",
                                              "Effect": "Allow",
                                              "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                            },
                                            {
                                              "Action": [
                                                "kms:Decrypt",
                                                "kms:DescribeKey",
                                              ],
                                              "Effect": "Allow",
                                              "Resource": "*",
                                            },
                                            {
                                              "Action": [
                                                "iam:CreateServiceSpecificCredential",
                                                "iam:DeleteServiceSpecificCredential",
                                                "iam:ListServiceSpecificCredentials",
                                              ],
                                              "Effect": "Allow",
                                              "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "policyName": "\${Token[TOKEN.20]}",
                                        "roles": [
                                          "#{Token[TOKEN.21]}",
                                        ],
                                        "users": [
                                          "#{Token[TOKEN.22]}",
                                        ],
                                      },
                                      "cfnOptions": {},
                                      "cfnResourceType": "AWS::IAM::Policy",
                                      "dependsOn": Set {},
                                      "groups": [
                                        "#{Token[TOKEN.23]}",
                                      ],
                                      "logicalId": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                                      "node": Node {
                                        "_children": {},
                                        "_context": {},
                                        "_dependencies": Set {},
                                        "_locked": false,
                                        "_metadata": [
                                          {
                                            "data": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                                            "trace": undefined,
                                            "type": "aws:cdk:logicalId",
                                          },
                                        ],
                                        "_validations": [],
                                        "host": [Circular],
                                        "id": "Resource",
                                        "scope": [Circular],
                                      },
                                      "policyDocument": {
                                        "Statement": [
                                          {
                                            "Action": "logs:CreateLogGroup",
                                            "Effect": "Allow",
                                            "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                          },
                                          {
                                            "Action": "secretsmanager:*",
                                            "Effect": "Allow",
                                            "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                          },
                                          {
                                            "Action": [
                                              "kms:Decrypt",
                                              "kms:DescribeKey",
                                            ],
                                            "Effect": "Allow",
                                            "Resource": "*",
                                          },
                                          {
                                            "Action": [
                                              "iam:CreateServiceSpecificCredential",
                                              "iam:DeleteServiceSpecificCredential",
                                              "iam:ListServiceSpecificCredentials",
                                            ],
                                            "Effect": "Allow",
                                            "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "policyName": "\${Token[TOKEN.20]}",
                                      "rawOverrides": {},
                                      "roles": [
                                        "#{Token[TOKEN.21]}",
                                      ],
                                      "stack": [Circular],
                                      "users": [
                                        "#{Token[TOKEN.22]}",
                                      ],
                                      Symbol(@aws-cdk/core.DependableTrait): {
                                        "dependencyRoots": [
                                          [Circular],
                                        ],
                                      },
                                    },
                                  },
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [],
                                  "_validations": [
                                    {
                                      "validate": [Function],
                                    },
                                  ],
                                  "host": [Circular],
                                  "id": "DefaultPolicy",
                                  "scope": [Circular],
                                },
                                "physicalName": "\${Token[TOKEN.20]}",
                                "referenceTaken": false,
                                "roles": [
                                  [Circular],
                                ],
                                "stack": [Circular],
                                "users": [],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                              "ImportCreateGitopsSecretLambda": ImportedRole {
                                "_allowCrossEnvironment": false,
                                "_physicalName": undefined,
                                "assumeRoleAction": "sts:AssumeRole",
                                "attachedPolicies": AttachedPolicies {
                                  "policies": [],
                                },
                                "defaultPolicyName": undefined,
                                "env": {
                                  "account": "\${Token[AWS.AccountId.2]}",
                                  "region": "\${Token[AWS.Region.6]}",
                                },
                                "grantPrincipal": [Circular],
                                "node": Node {
                                  "_children": {},
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [],
                                  "_validations": [],
                                  "host": [Circular],
                                  "id": "ImportCreateGitopsSecretLambda",
                                  "scope": [Circular],
                                },
                                "physicalName": "\${Token[TOKEN.12]}",
                                "policyFragment": PrincipalPolicyFragment {
                                  "conditions": {},
                                  "principalJson": {
                                    "AWS": [
                                      "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                                    ],
                                  },
                                },
                                "principalAccount": "\${Token[AWS.AccountId.2]}",
                                "roleArn": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                                "roleName": "CreateGitopsSecretLambda",
                                "stack": [Circular],
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                              "Resource": CfnRole {
                                "_cfnProperties": {
                                  "assumeRolePolicyDocument": {
                                    "Statement": [
                                      {
                                        "Action": "sts:AssumeRole",
                                        "Effect": "Allow",
                                        "Principal": {
                                          "Service": "\${Token[lambda.amazonaws.com.11]}",
                                        },
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "description": "AWS Accelerator assets access role in workload accounts to bootstrap gitops credentials",
                                  "managedPolicyArns": [
                                    "#{Token[TOKEN.13]}",
                                  ],
                                  "maxSessionDuration": undefined,
                                  "path": undefined,
                                  "permissionsBoundary": undefined,
                                  "policies": undefined,
                                  "roleName": "AWSLambdaBasicExecutionRole-codeCommitSecret",
                                },
                                "assumeRolePolicyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Principal": {
                                        "Service": "\${Token[lambda.amazonaws.com.11]}",
                                      },
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "attrArn": "\${Token[TOKEN.15]}",
                                "attrRoleId": "\${Token[TOKEN.16]}",
                                "cfnOptions": {},
                                "cfnResourceType": "AWS::IAM::Role",
                                "dependsOn": Set {},
                                "description": "AWS Accelerator assets access role in workload accounts to bootstrap gitops credentials",
                                "logicalId": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.Resource.LogicalID.14]}",
                                "managedPolicyArns": [
                                  "#{Token[TOKEN.13]}",
                                ],
                                "maxSessionDuration": undefined,
                                "node": Node {
                                  "_children": {},
                                  "_context": {},
                                  "_dependencies": Set {},
                                  "_locked": false,
                                  "_metadata": [
                                    {
                                      "data": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.Resource.LogicalID.14]}",
                                      "trace": undefined,
                                      "type": "aws:cdk:logicalId",
                                    },
                                  ],
                                  "_validations": [],
                                  "host": [Circular],
                                  "id": "Resource",
                                  "scope": [Circular],
                                },
                                "path": undefined,
                                "permissionsBoundary": undefined,
                                "policies": undefined,
                                "rawOverrides": {},
                                "roleName": "AWSLambdaBasicExecutionRole-codeCommitSecret",
                                "stack": [Circular],
                                "tags": TagManager {
                                  "initialTagPriority": 50,
                                  "priorities": Map {},
                                  "renderedTags": "<unresolved-lazy>",
                                  "resourceTypeName": "AWS::IAM::Role",
                                  "tagFormatter": StandardFormatter {},
                                  "tagPropertyName": "tags",
                                  "tags": Map {},
                                },
                                Symbol(@aws-cdk/core.DependableTrait): {
                                  "dependencyRoots": [
                                    [Circular],
                                  ],
                                },
                              },
                            },
                            "_context": {},
                            "_dependencies": Set {},
                            "_locked": false,
                            "_metadata": [],
                            "_validations": [
                              {
                                "validate": [Function],
                              },
                            ],
                            "host": [Circular],
                            "id": "CreateGitopsSecretLambda",
                            "scope": [Circular],
                          },
                          "permissionsBoundary": undefined,
                          "physicalName": "AWSLambdaBasicExecutionRole-codeCommitSecret",
                          "policyFragment": PrincipalPolicyFragment {
                            "conditions": {},
                            "principalJson": {
                              "AWS": [
                                "\${Token[TOKEN.17]}",
                              ],
                            },
                          },
                          "principalAccount": "\${Token[AWS.AccountId.2]}",
                          "roleArn": "\${Token[TOKEN.17]}",
                          "roleName": "\${Token[TOKEN.19]}",
                          "stack": [Circular],
                          Symbol(@aws-cdk/core.DependableTrait): {
                            "dependencyRoots": [
                              [Circular],
                            ],
                          },
                        },
                      },
                      "_locked": false,
                      "_metadata": [
                        {
                          "data": "\${Token[Default.codeCommitSecret.Function.Resource.LogicalID.652]}",
                          "trace": undefined,
                          "type": "aws:cdk:logicalId",
                        },
                      ],
                      "_validations": [],
                      "host": [Circular],
                      "id": "Resource",
                      "scope": [Circular],
                    },
                    "packageType": undefined,
                    "rawOverrides": {},
                    "reservedConcurrentExecutions": undefined,
                    "role": "\${Token[TOKEN.17]}",
                    "runtime": "nodejs18.x",
                    "runtimeManagementConfig": undefined,
                    "snapStart": undefined,
                    "stack": [Circular],
                    "tags": TagManager {
                      "initialTagPriority": 50,
                      "priorities": Map {},
                      "renderedTags": "<unresolved-lazy>",
                      "resourceTypeName": "AWS::Lambda::Function",
                      "tagFormatter": StandardFormatter {},
                      "tagPropertyName": "tags",
                      "tags": Map {},
                    },
                    "timeout": 900,
                    "tracingConfig": undefined,
                    "vpcConfig": undefined,
                    Symbol(@aws-cdk/core.DependableTrait): {
                      "dependencyRoots": [
                        [Circular],
                      ],
                    },
                  },
                },
                "_context": {},
                "_dependencies": Set {},
                "_locked": false,
                "_metadata": [],
                "_validations": [],
                "host": [Circular],
                "id": "Function",
                "scope": [Circular],
              },
              "physicalName": "\${Token[TOKEN.645]}",
              "role": Role {
                "_allowCrossEnvironment": true,
                "_didSplit": false,
                "_physicalName": "AWSLambdaBasicExecutionRole-codeCommitSecret",
                "_roleId": "\${Token[TOKEN.16]}",
                "assumeRoleAction": "sts:AssumeRole",
                "assumeRolePolicy": {
                  "Statement": [
                    {
                      "Action": "sts:AssumeRole",
                      "Effect": "Allow",
                      "Principal": {
                        "Service": "\${Token[lambda.amazonaws.com.11]}",
                      },
                    },
                  ],
                  "Version": "2012-10-17",
                },
                "attachedPolicies": AttachedPolicies {
                  "policies": [
                    Policy {
                      "_allowCrossEnvironment": false,
                      "_physicalName": "\${Token[TOKEN.20]}",
                      "_policyName": "\${Token[TOKEN.20]}",
                      "document": {
                        "Statement": [
                          {
                            "Action": "logs:CreateLogGroup",
                            "Effect": "Allow",
                            "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                          },
                          {
                            "Action": "secretsmanager:*",
                            "Effect": "Allow",
                            "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                          },
                          {
                            "Action": [
                              "kms:Decrypt",
                              "kms:DescribeKey",
                            ],
                            "Effect": "Allow",
                            "Resource": "*",
                          },
                          {
                            "Action": [
                              "iam:CreateServiceSpecificCredential",
                              "iam:DeleteServiceSpecificCredential",
                              "iam:ListServiceSpecificCredentials",
                            ],
                            "Effect": "Allow",
                            "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                          },
                        ],
                        "Version": "2012-10-17",
                      },
                      "env": {
                        "account": "\${Token[AWS.AccountId.2]}",
                        "region": "\${Token[AWS.Region.6]}",
                      },
                      "force": false,
                      "grantPrincipal": PolicyGrantPrincipal {
                        "_policy": [Circular],
                        "assumeRoleAction": "sts:AssumeRole",
                        "grantPrincipal": [Circular],
                        "principalAccount": "\${Token[AWS.AccountId.2]}",
                      },
                      "groups": [],
                      "node": Node {
                        "_children": {
                          "Resource": CfnPolicyConditional {
                            "_cfnProperties": {
                              "groups": [
                                "#{Token[TOKEN.23]}",
                              ],
                              "policyDocument": {
                                "Statement": [
                                  {
                                    "Action": "logs:CreateLogGroup",
                                    "Effect": "Allow",
                                    "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                  },
                                  {
                                    "Action": "secretsmanager:*",
                                    "Effect": "Allow",
                                    "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                  },
                                  {
                                    "Action": [
                                      "kms:Decrypt",
                                      "kms:DescribeKey",
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "*",
                                  },
                                  {
                                    "Action": [
                                      "iam:CreateServiceSpecificCredential",
                                      "iam:DeleteServiceSpecificCredential",
                                      "iam:ListServiceSpecificCredentials",
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                  },
                                ],
                                "Version": "2012-10-17",
                              },
                              "policyName": "\${Token[TOKEN.20]}",
                              "roles": [
                                "#{Token[TOKEN.21]}",
                              ],
                              "users": [
                                "#{Token[TOKEN.22]}",
                              ],
                            },
                            "cfnOptions": {},
                            "cfnResourceType": "AWS::IAM::Policy",
                            "dependsOn": Set {},
                            "groups": [
                              "#{Token[TOKEN.23]}",
                            ],
                            "logicalId": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                            "node": Node {
                              "_children": {},
                              "_context": {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": [
                                {
                                  "data": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                                  "trace": undefined,
                                  "type": "aws:cdk:logicalId",
                                },
                              ],
                              "_validations": [],
                              "host": [Circular],
                              "id": "Resource",
                              "scope": [Circular],
                            },
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "logs:CreateLogGroup",
                                  "Effect": "Allow",
                                  "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                },
                                {
                                  "Action": "secretsmanager:*",
                                  "Effect": "Allow",
                                  "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                },
                                {
                                  "Action": [
                                    "kms:Decrypt",
                                    "kms:DescribeKey",
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*",
                                },
                                {
                                  "Action": [
                                    "iam:CreateServiceSpecificCredential",
                                    "iam:DeleteServiceSpecificCredential",
                                    "iam:ListServiceSpecificCredentials",
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                },
                              ],
                              "Version": "2012-10-17",
                            },
                            "policyName": "\${Token[TOKEN.20]}",
                            "rawOverrides": {},
                            "roles": [
                              "#{Token[TOKEN.21]}",
                            ],
                            "stack": [Circular],
                            "users": [
                              "#{Token[TOKEN.22]}",
                            ],
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                        },
                        "_context": {},
                        "_dependencies": Set {},
                        "_locked": false,
                        "_metadata": [],
                        "_validations": [
                          {
                            "validate": [Function],
                          },
                        ],
                        "host": [Circular],
                        "id": "DefaultPolicy",
                        "scope": [Circular],
                      },
                      "physicalName": "\${Token[TOKEN.20]}",
                      "referenceTaken": false,
                      "roles": [
                        [Circular],
                      ],
                      "stack": [Circular],
                      "users": [],
                      Symbol(@aws-cdk/core.DependableTrait): {
                        "dependencyRoots": [
                          [Circular],
                        ],
                      },
                    },
                  ],
                },
                "defaultPolicy": Policy {
                  "_allowCrossEnvironment": false,
                  "_physicalName": "\${Token[TOKEN.20]}",
                  "_policyName": "\${Token[TOKEN.20]}",
                  "document": {
                    "Statement": [
                      {
                        "Action": "logs:CreateLogGroup",
                        "Effect": "Allow",
                        "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                      },
                      {
                        "Action": "secretsmanager:*",
                        "Effect": "Allow",
                        "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                      },
                      {
                        "Action": [
                          "kms:Decrypt",
                          "kms:DescribeKey",
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                      },
                      {
                        "Action": [
                          "iam:CreateServiceSpecificCredential",
                          "iam:DeleteServiceSpecificCredential",
                          "iam:ListServiceSpecificCredentials",
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                      },
                    ],
                    "Version": "2012-10-17",
                  },
                  "env": {
                    "account": "\${Token[AWS.AccountId.2]}",
                    "region": "\${Token[AWS.Region.6]}",
                  },
                  "force": false,
                  "grantPrincipal": PolicyGrantPrincipal {
                    "_policy": [Circular],
                    "assumeRoleAction": "sts:AssumeRole",
                    "grantPrincipal": [Circular],
                    "principalAccount": "\${Token[AWS.AccountId.2]}",
                  },
                  "groups": [],
                  "node": Node {
                    "_children": {
                      "Resource": CfnPolicyConditional {
                        "_cfnProperties": {
                          "groups": [
                            "#{Token[TOKEN.23]}",
                          ],
                          "policyDocument": {
                            "Statement": [
                              {
                                "Action": "logs:CreateLogGroup",
                                "Effect": "Allow",
                                "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                              },
                              {
                                "Action": "secretsmanager:*",
                                "Effect": "Allow",
                                "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                              },
                              {
                                "Action": [
                                  "kms:Decrypt",
                                  "kms:DescribeKey",
                                ],
                                "Effect": "Allow",
                                "Resource": "*",
                              },
                              {
                                "Action": [
                                  "iam:CreateServiceSpecificCredential",
                                  "iam:DeleteServiceSpecificCredential",
                                  "iam:ListServiceSpecificCredentials",
                                ],
                                "Effect": "Allow",
                                "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                              },
                            ],
                            "Version": "2012-10-17",
                          },
                          "policyName": "\${Token[TOKEN.20]}",
                          "roles": [
                            "#{Token[TOKEN.21]}",
                          ],
                          "users": [
                            "#{Token[TOKEN.22]}",
                          ],
                        },
                        "cfnOptions": {},
                        "cfnResourceType": "AWS::IAM::Policy",
                        "dependsOn": Set {},
                        "groups": [
                          "#{Token[TOKEN.23]}",
                        ],
                        "logicalId": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                        "node": Node {
                          "_children": {},
                          "_context": {},
                          "_dependencies": Set {},
                          "_locked": false,
                          "_metadata": [
                            {
                              "data": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                              "trace": undefined,
                              "type": "aws:cdk:logicalId",
                            },
                          ],
                          "_validations": [],
                          "host": [Circular],
                          "id": "Resource",
                          "scope": [Circular],
                        },
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": "logs:CreateLogGroup",
                              "Effect": "Allow",
                              "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                            },
                            {
                              "Action": "secretsmanager:*",
                              "Effect": "Allow",
                              "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                            },
                            {
                              "Action": [
                                "kms:Decrypt",
                                "kms:DescribeKey",
                              ],
                              "Effect": "Allow",
                              "Resource": "*",
                            },
                            {
                              "Action": [
                                "iam:CreateServiceSpecificCredential",
                                "iam:DeleteServiceSpecificCredential",
                                "iam:ListServiceSpecificCredentials",
                              ],
                              "Effect": "Allow",
                              "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                            },
                          ],
                          "Version": "2012-10-17",
                        },
                        "policyName": "\${Token[TOKEN.20]}",
                        "rawOverrides": {},
                        "roles": [
                          "#{Token[TOKEN.21]}",
                        ],
                        "stack": [Circular],
                        "users": [
                          "#{Token[TOKEN.22]}",
                        ],
                        Symbol(@aws-cdk/core.DependableTrait): {
                          "dependencyRoots": [
                            [Circular],
                          ],
                        },
                      },
                    },
                    "_context": {},
                    "_dependencies": Set {},
                    "_locked": false,
                    "_metadata": [],
                    "_validations": [
                      {
                        "validate": [Function],
                      },
                    ],
                    "host": [Circular],
                    "id": "DefaultPolicy",
                    "scope": [Circular],
                  },
                  "physicalName": "\${Token[TOKEN.20]}",
                  "referenceTaken": false,
                  "roles": [
                    [Circular],
                  ],
                  "stack": [Circular],
                  "users": [],
                  Symbol(@aws-cdk/core.DependableTrait): {
                    "dependencyRoots": [
                      [Circular],
                    ],
                  },
                },
                "dependables": Map {
                  {
                    "Action": "logs:CreateLogGroup",
                    "Effect": "Allow",
                    "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                  } => DependencyGroup {
                    "_deps": [],
                    Symbol(@aws-cdk/core.DependableTrait): {
                      "dependencyRoots": [],
                    },
                  },
                  {
                    "Action": "secretsmanager:*",
                    "Effect": "Allow",
                    "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                  } => DependencyGroup {
                    "_deps": [],
                    Symbol(@aws-cdk/core.DependableTrait): {
                      "dependencyRoots": [],
                    },
                  },
                  {
                    "Action": [
                      "kms:Decrypt",
                      "kms:DescribeKey",
                    ],
                    "Effect": "Allow",
                    "Resource": "*",
                  } => DependencyGroup {
                    "_deps": [],
                    Symbol(@aws-cdk/core.DependableTrait): {
                      "dependencyRoots": [],
                    },
                  },
                  {
                    "Action": [
                      "iam:CreateServiceSpecificCredential",
                      "iam:DeleteServiceSpecificCredential",
                      "iam:ListServiceSpecificCredentials",
                    ],
                    "Effect": "Allow",
                    "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                  } => DependencyGroup {
                    "_deps": [],
                    Symbol(@aws-cdk/core.DependableTrait): {
                      "dependencyRoots": [],
                    },
                  },
                },
                "env": {
                  "account": "\${Token[AWS.AccountId.2]}",
                  "region": "\${Token[AWS.Region.6]}",
                },
                "grantPrincipal": [Circular],
                "inlinePolicies": {},
                "managedPolicies": [
                  AwsManagedPolicy {
                    "managedPolicyArn": "arn:\${Token[AWS.Partition.5]}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                  },
                ],
                "node": Node {
                  "_children": {
                    "DefaultPolicy": Policy {
                      "_allowCrossEnvironment": false,
                      "_physicalName": "\${Token[TOKEN.20]}",
                      "_policyName": "\${Token[TOKEN.20]}",
                      "document": {
                        "Statement": [
                          {
                            "Action": "logs:CreateLogGroup",
                            "Effect": "Allow",
                            "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                          },
                          {
                            "Action": "secretsmanager:*",
                            "Effect": "Allow",
                            "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                          },
                          {
                            "Action": [
                              "kms:Decrypt",
                              "kms:DescribeKey",
                            ],
                            "Effect": "Allow",
                            "Resource": "*",
                          },
                          {
                            "Action": [
                              "iam:CreateServiceSpecificCredential",
                              "iam:DeleteServiceSpecificCredential",
                              "iam:ListServiceSpecificCredentials",
                            ],
                            "Effect": "Allow",
                            "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                          },
                        ],
                        "Version": "2012-10-17",
                      },
                      "env": {
                        "account": "\${Token[AWS.AccountId.2]}",
                        "region": "\${Token[AWS.Region.6]}",
                      },
                      "force": false,
                      "grantPrincipal": PolicyGrantPrincipal {
                        "_policy": [Circular],
                        "assumeRoleAction": "sts:AssumeRole",
                        "grantPrincipal": [Circular],
                        "principalAccount": "\${Token[AWS.AccountId.2]}",
                      },
                      "groups": [],
                      "node": Node {
                        "_children": {
                          "Resource": CfnPolicyConditional {
                            "_cfnProperties": {
                              "groups": [
                                "#{Token[TOKEN.23]}",
                              ],
                              "policyDocument": {
                                "Statement": [
                                  {
                                    "Action": "logs:CreateLogGroup",
                                    "Effect": "Allow",
                                    "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                  },
                                  {
                                    "Action": "secretsmanager:*",
                                    "Effect": "Allow",
                                    "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                  },
                                  {
                                    "Action": [
                                      "kms:Decrypt",
                                      "kms:DescribeKey",
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "*",
                                  },
                                  {
                                    "Action": [
                                      "iam:CreateServiceSpecificCredential",
                                      "iam:DeleteServiceSpecificCredential",
                                      "iam:ListServiceSpecificCredentials",
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                  },
                                ],
                                "Version": "2012-10-17",
                              },
                              "policyName": "\${Token[TOKEN.20]}",
                              "roles": [
                                "#{Token[TOKEN.21]}",
                              ],
                              "users": [
                                "#{Token[TOKEN.22]}",
                              ],
                            },
                            "cfnOptions": {},
                            "cfnResourceType": "AWS::IAM::Policy",
                            "dependsOn": Set {},
                            "groups": [
                              "#{Token[TOKEN.23]}",
                            ],
                            "logicalId": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                            "node": Node {
                              "_children": {},
                              "_context": {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": [
                                {
                                  "data": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.DefaultPolicy.Resource.LogicalID.24]}",
                                  "trace": undefined,
                                  "type": "aws:cdk:logicalId",
                                },
                              ],
                              "_validations": [],
                              "host": [Circular],
                              "id": "Resource",
                              "scope": [Circular],
                            },
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "logs:CreateLogGroup",
                                  "Effect": "Allow",
                                  "Resource": "arn:\${Token[AWS.Partition.5]}:logs:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:*",
                                },
                                {
                                  "Action": "secretsmanager:*",
                                  "Effect": "Allow",
                                  "Resource": "arn:\${Token[AWS.Partition.5]}:secretsmanager:\${Token[AWS.Region.6]}:\${Token[AWS.AccountId.2]}:secret:demo",
                                },
                                {
                                  "Action": [
                                    "kms:Decrypt",
                                    "kms:DescribeKey",
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*",
                                },
                                {
                                  "Action": [
                                    "iam:CreateServiceSpecificCredential",
                                    "iam:DeleteServiceSpecificCredential",
                                    "iam:ListServiceSpecificCredentials",
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:user/demo",
                                },
                              ],
                              "Version": "2012-10-17",
                            },
                            "policyName": "\${Token[TOKEN.20]}",
                            "rawOverrides": {},
                            "roles": [
                              "#{Token[TOKEN.21]}",
                            ],
                            "stack": [Circular],
                            "users": [
                              "#{Token[TOKEN.22]}",
                            ],
                            Symbol(@aws-cdk/core.DependableTrait): {
                              "dependencyRoots": [
                                [Circular],
                              ],
                            },
                          },
                        },
                        "_context": {},
                        "_dependencies": Set {},
                        "_locked": false,
                        "_metadata": [],
                        "_validations": [
                          {
                            "validate": [Function],
                          },
                        ],
                        "host": [Circular],
                        "id": "DefaultPolicy",
                        "scope": [Circular],
                      },
                      "physicalName": "\${Token[TOKEN.20]}",
                      "referenceTaken": false,
                      "roles": [
                        [Circular],
                      ],
                      "stack": [Circular],
                      "users": [],
                      Symbol(@aws-cdk/core.DependableTrait): {
                        "dependencyRoots": [
                          [Circular],
                        ],
                      },
                    },
                    "ImportCreateGitopsSecretLambda": ImportedRole {
                      "_allowCrossEnvironment": false,
                      "_physicalName": undefined,
                      "assumeRoleAction": "sts:AssumeRole",
                      "attachedPolicies": AttachedPolicies {
                        "policies": [],
                      },
                      "defaultPolicyName": undefined,
                      "env": {
                        "account": "\${Token[AWS.AccountId.2]}",
                        "region": "\${Token[AWS.Region.6]}",
                      },
                      "grantPrincipal": [Circular],
                      "node": Node {
                        "_children": {},
                        "_context": {},
                        "_dependencies": Set {},
                        "_locked": false,
                        "_metadata": [],
                        "_validations": [],
                        "host": [Circular],
                        "id": "ImportCreateGitopsSecretLambda",
                        "scope": [Circular],
                      },
                      "physicalName": "\${Token[TOKEN.12]}",
                      "policyFragment": PrincipalPolicyFragment {
                        "conditions": {},
                        "principalJson": {
                          "AWS": [
                            "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                          ],
                        },
                      },
                      "principalAccount": "\${Token[AWS.AccountId.2]}",
                      "roleArn": "arn:\${Token[AWS.Partition.5]}:iam::\${Token[AWS.AccountId.2]}:role",
                      "roleName": "CreateGitopsSecretLambda",
                      "stack": [Circular],
                      Symbol(@aws-cdk/core.DependableTrait): {
                        "dependencyRoots": [
                          [Circular],
                        ],
                      },
                    },
                    "Resource": CfnRole {
                      "_cfnProperties": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "\${Token[lambda.amazonaws.com.11]}",
                              },
                            },
                          ],
                          "Version": "2012-10-17",
                        },
                        "description": "AWS Accelerator assets access role in workload accounts to bootstrap gitops credentials",
                        "managedPolicyArns": [
                          "#{Token[TOKEN.13]}",
                        ],
                        "maxSessionDuration": undefined,
                        "path": undefined,
                        "permissionsBoundary": undefined,
                        "policies": undefined,
                        "roleName": "AWSLambdaBasicExecutionRole-codeCommitSecret",
                      },
                      "assumeRolePolicyDocument": {
                        "Statement": [
                          {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                              "Service": "\${Token[lambda.amazonaws.com.11]}",
                            },
                          },
                        ],
                        "Version": "2012-10-17",
                      },
                      "attrArn": "\${Token[TOKEN.15]}",
                      "attrRoleId": "\${Token[TOKEN.16]}",
                      "cfnOptions": {},
                      "cfnResourceType": "AWS::IAM::Role",
                      "dependsOn": Set {},
                      "description": "AWS Accelerator assets access role in workload accounts to bootstrap gitops credentials",
                      "logicalId": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.Resource.LogicalID.14]}",
                      "managedPolicyArns": [
                        "#{Token[TOKEN.13]}",
                      ],
                      "maxSessionDuration": undefined,
                      "node": Node {
                        "_children": {},
                        "_context": {},
                        "_dependencies": Set {},
                        "_locked": false,
                        "_metadata": [
                          {
                            "data": "\${Token[Default.codeCommitSecret.CreateGitopsSecretLambda.Resource.LogicalID.14]}",
                            "trace": undefined,
                            "type": "aws:cdk:logicalId",
                          },
                        ],
                        "_validations": [],
                        "host": [Circular],
                        "id": "Resource",
                        "scope": [Circular],
                      },
                      "path": undefined,
                      "permissionsBoundary": undefined,
                      "policies": undefined,
                      "rawOverrides": {},
                      "roleName": "AWSLambdaBasicExecutionRole-codeCommitSecret",
                      "stack": [Circular],
                      "tags": TagManager {
                        "initialTagPriority": 50,
                        "priorities": Map {},
                        "renderedTags": "<unresolved-lazy>",
                        "resourceTypeName": "AWS::IAM::Role",
                        "tagFormatter": StandardFormatter {},
                        "tagPropertyName": "tags",
                        "tags": Map {},
                      },
                      Symbol(@aws-cdk/core.DependableTrait): {
                        "dependencyRoots": [
                          [Circular],
                        ],
                      },
                    },
                  },
                  "_context": {},
                  "_dependencies": Set {},
                  "_locked": false,
                  "_metadata": [],
                  "_validations": [
                    {
                      "validate": [Function],
                    },
                  ],
                  "host": [Circular],
                  "id": "CreateGitopsSecretLambda",
                  "scope": [Circular],
                },
                "permissionsBoundary": undefined,
                "physicalName": "AWSLambdaBasicExecutionRole-codeCommitSecret",
                "policyFragment": PrincipalPolicyFragment {
                  "conditions": {},
                  "principalJson": {
                    "AWS": [
                      "\${Token[TOKEN.17]}",
                    ],
                  },
                },
                "principalAccount": "\${Token[AWS.AccountId.2]}",
                "roleArn": "\${Token[TOKEN.17]}",
                "roleName": "\${Token[TOKEN.19]}",
                "stack": [Circular],
                Symbol(@aws-cdk/core.DependableTrait): {
                  "dependencyRoots": [
                    [Circular],
                  ],
                },
              },
              "runtime": Runtime {
                "bundlingDockerImage": "public.ecr.aws/sam/build-nodejs18.x",
                "bundlingImage": "public.ecr.aws/sam/build-nodejs18.x",
                "family": 0,
                "name": "nodejs18.x",
                "supportsCodeGuruProfiling": false,
                "supportsInlineCode": true,
              },
              "stack": [Circular],
              "timeout": Duration {
                "amount": 15,
                "unit": TimeUnit {
                  "inMillis": 60000,
                  "isoLabel": "M",
                  "label": "minutes",
                },
              },
              Symbol(@aws-cdk/core.DependableTrait): {
                "dependencyRoots": [
                  [Circular],
                ],
              },
            },
            "FunctionLogGroup": LogGroup {
              "_allowCrossEnvironment": false,
              "_physicalName": "/aws/lambda/\${Token[TOKEN.657]}",
              "env": {
                "account": "\${Token[AWS.AccountId.2]}",
                "region": "\${Token[AWS.Region.6]}",
              },
              "logGroupArn": "\${Token[TOKEN.661]}",
              "logGroupName": "\${Token[TOKEN.663]}",
              "node": Node {
                "_children": {
                  "Resource": CfnLogGroup {
                    "_cfnProperties": {
                      "kmsKeyId": undefined,
                      "logGroupName": "/aws/lambda/\${Token[TOKEN.657]}",
                      "retentionInDays": 731,
                    },
                    "attrArn": "\${Token[TOKEN.660]}",
                    "cfnOptions": {
                      "deletionPolicy": "Delete",
                      "updateReplacePolicy": "Delete",
                    },
                    "cfnResourceType": "AWS::Logs::LogGroup",
                    "dataProtectionPolicy": undefined,
                    "dependsOn": Set {},
                    "kmsKeyId": undefined,
                    "logGroupName": "/aws/lambda/\${Token[TOKEN.657]}",
                    "logicalId": "\${Token[Default.codeCommitSecret.FunctionLogGroup.Resource.LogicalID.659]}",
                    "node": Node {
                      "_children": {},
                      "_context": {},
                      "_dependencies": Set {},
                      "_locked": false,
                      "_metadata": [
                        {
                          "data": "\${Token[Default.codeCommitSecret.FunctionLogGroup.Resource.LogicalID.659]}",
                          "trace": undefined,
                          "type": "aws:cdk:logicalId",
                        },
                      ],
                      "_validations": [
                        {
                          "validate": [Function],
                        },
                      ],
                      "host": [Circular],
                      "id": "Resource",
                      "scope": [Circular],
                    },
                    "rawOverrides": {},
                    "retentionInDays": 731,
                    "stack": [Circular],
                    "tags": TagManager {
                      "initialTagPriority": 50,
                      "priorities": Map {},
                      "renderedTags": "<unresolved-lazy>",
                      "resourceTypeName": "AWS::Logs::LogGroup",
                      "tagFormatter": StandardFormatter {},
                      "tagPropertyName": "tags",
                      "tags": Map {},
                    },
                    Symbol(@aws-cdk/core.DependableTrait): {
                      "dependencyRoots": [
                        [Circular],
                      ],
                    },
                  },
                },
                "_context": {},
                "_dependencies": Set {},
                "_locked": false,
                "_metadata": [],
                "_validations": [],
                "host": [Circular],
                "id": "FunctionLogGroup",
                "scope": [Circular],
              },
              "physicalName": "/aws/lambda/\${Token[TOKEN.657]}",
              "stack": [Circular],
              Symbol(@aws-cdk/core.DependableTrait): {
                "dependencyRoots": [
                  [Circular],
                ],
              },
            },
            "Resource": CustomResource {
              "_allowCrossEnvironment": false,
              "_physicalName": undefined,
              "env": {
                "account": "\${Token[AWS.AccountId.2]}",
                "region": "\${Token[AWS.Region.6]}",
              },
              "node": Node {
                "_children": {
                  "Default": CfnResource {
                    "_cfnProperties": {
                      "ServiceToken": "\${Token[TOKEN.687]}",
                      "secretName": "demo",
                      "username": "demo",
                    },
                    "cfnOptions": {
                      "deletionPolicy": "Delete",
                      "updateReplacePolicy": "Delete",
                    },
                    "cfnResourceType": "Custom::CodeCommitCredentials",
                    "dependsOn": Set {},
                    "logicalId": "\${Token[Default.codeCommitSecret.Resource.Default.LogicalID.694]}",
                    "node": Node {
                      "_children": {},
                      "_context": {},
                      "_dependencies": Set {},
                      "_locked": false,
                      "_metadata": [
                        {
                          "data": "\${Token[Default.codeCommitSecret.Resource.Default.LogicalID.694]}",
                          "trace": undefined,
                          "type": "aws:cdk:logicalId",
                        },
                      ],
                      "_validations": [],
                      "host": [Circular],
                      "id": "Default",
                      "scope": [Circular],
                    },
                    "rawOverrides": {},
                    "stack": [Circular],
                    Symbol(@aws-cdk/core.DependableTrait): {
                      "dependencyRoots": [
                        [Circular],
                      ],
                    },
                  },
                },
                "_context": {},
                "_dependencies": Set {},
                "_locked": false,
                "_metadata": [],
                "_validations": [],
                "host": [Circular],
                "id": "Resource",
                "scope": [Circular],
              },
              "physicalName": "\${Token[TOKEN.693]}",
              "resource": CfnResource {
                "_cfnProperties": {
                  "ServiceToken": "\${Token[TOKEN.687]}",
                  "secretName": "demo",
                  "username": "demo",
                },
                "cfnOptions": {
                  "deletionPolicy": "Delete",
                  "updateReplacePolicy": "Delete",
                },
                "cfnResourceType": "Custom::CodeCommitCredentials",
                "dependsOn": Set {},
                "logicalId": "\${Token[Default.codeCommitSecret.Resource.Default.LogicalID.694]}",
                "node": Node {
                  "_children": {},
                  "_context": {},
                  "_dependencies": Set {},
                  "_locked": false,
                  "_metadata": [
                    {
                      "data": "\${Token[Default.codeCommitSecret.Resource.Default.LogicalID.694]}",
                      "trace": undefined,
                      "type": "aws:cdk:logicalId",
                    },
                  ],
                  "_validations": [],
                  "host": [Circular],
                  "id": "Default",
                  "scope": [Circular],
                },
                "rawOverrides": {},
                "stack": [Circular],
                Symbol(@aws-cdk/core.DependableTrait): {
                  "dependencyRoots": [
                    [Circular],
                  ],
                },
              },
              "stack": [Circular],
              Symbol(@aws-cdk/core.DependableTrait): {
                "dependencyRoots": [
                  [Circular],
                ],
              },
            },
          },
          "_context": {},
          "_dependencies": Set {},
          "_locked": false,
          "_metadata": [],
          "_validations": [],
          "host": [Circular],
          "id": "codeCommitSecret",
          "scope": [Circular],
        },
        Symbol(@aws-cdk/core.DependableTrait): {
          "dependencyRoots": [
            [Circular],
          ],
        },
      },
    },
    "_context": {},
    "_dependencies": Set {},
    "_locked": false,
    "_metadata": [],
    "_validations": [],
    "host": [Circular],
    "id": "Default",
    "scope": App {
      "_assemblyBuilder": CloudAssemblyBuilder {
        "artifacts": {},
        "assetOutdir": "/private/var/folders/tn/799yyvm92g74fj_thj2z7w140000gr/T/cdk-test-app-WFT8EN",
        "missing": [],
        "outdir": "/private/var/folders/tn/799yyvm92g74fj_thj2z7w140000gr/T/cdk-test-app-WFT8EN",
        "parentBuilder": undefined,
      },
      "_treeMetadata": true,
      "account": undefined,
      "node": Node {
        "_children": {
          "Default": [Circular],
        },
        "_context": {},
        "_dependencies": Set {},
        "_locked": false,
        "_metadata": [],
        "_validations": [],
        "host": [Circular],
        "id": "",
        "scope": undefined,
      },
      "parentStage": undefined,
      "policyValidationBeta1": [],
      "region": undefined,
      "stageName": "",
      Symbol(@aws-cdk/core.DependableTrait): {
        "dependencyRoots": [
          [Circular],
        ],
      },
    },
  },
  "region": "\${Token[AWS.Region.6]}",
  "synthesizer": DefaultStackSynthesizer {
    "_boundStack": [Circular],
    "_cloudFormationExecutionRoleArn": "arn:\${AWS::Partition}:iam::\${AWS::AccountId}:role/cdk-hnb659fds-cfn-exec-role-\${AWS::AccountId}-\${AWS::Region}",
    "_deployRoleArn": "arn:\${AWS::Partition}:iam::\${AWS::AccountId}:role/cdk-hnb659fds-deploy-role-\${AWS::AccountId}-\${AWS::Region}",
    "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version",
    "bucketName": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
    "bucketPrefix": "",
    "dockerTagPrefix": "",
    "fileAssetPublishingRoleArn": "arn:\${AWS::Partition}:iam::\${AWS::AccountId}:role/cdk-hnb659fds-file-publishing-role-\${AWS::AccountId}-\${AWS::Region}",
    "imageAssetPublishingRoleArn": "arn:\${AWS::Partition}:iam::\${AWS::AccountId}:role/cdk-hnb659fds-image-publishing-role-\${AWS::AccountId}-\${AWS::Region}",
    "lookupRoleArn": "arn:\${AWS::Partition}:iam::\${AWS::AccountId}:role/cdk-hnb659fds-lookup-role-\${AWS::AccountId}-\${AWS::Region}",
    "qualifier": "hnb659fds",
    "repositoryName": "cdk-hnb659fds-container-assets-\${AWS::AccountId}-\${AWS::Region}",
  },
  "tags": TagManager {
    "initialTagPriority": 50,
    "priorities": Map {},
    "renderedTags": "<unresolved-lazy>",
    "resourceTypeName": "aws:cdk:stack",
    "tagFormatter": KeyValueFormatter {},
    "tagPropertyName": "tags",
    "tags": Map {},
  },
  "templateFile": "REPLACED-JSON-PATH.json",
  "templateOptions": {},
  "terminationProtection": undefined,
  Symbol(@aws-cdk/core.DependableTrait): {
    "dependencyRoots": [
      [Circular],
    ],
  },
}
`;
