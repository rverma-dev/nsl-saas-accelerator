// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ToolChain Stack 1`] = `
{
  Metadata: {
    cdk_nag: {
      rules_to_suppress: [
        {
          id: AwsSolutions-IAM4,
          reason: Managed IAM Policies,
        },
        {
          id: AwsSolutions-IAM5,
          reason: Wildcard policies for AWS Load Balancer Controller,
        },
        {
          id: AwsSolutions-CB4,
          reason: Public access for demo purposes,
        },
      ],
    },
  },
  Outputs: {
    installpipelineArtifactsBucketOutput718D50F5: {
      Export: {
        Name: toolchainBucket,
      },
      Value: {
        Ref: installpipelineArtifactsBucketBEF15C5E,
      },
    },
    installpipelineCdkCacheBucketOutput954D4B49: {
      Export: {
        Name: cdkCacheBucket,
      },
      Value: {
        Ref: installpipelineCdkCacheBucketC712E0E7,
      },
    },
  },
  Parameters: {
    BootstrapVersion: {
      Default: /cdk-bootstrap/hnb659fds/version,
      Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip],
      Type: AWS::SSM::Parameter::Value<String>,
    },
  },
  Resources: {
    CustomAWSCDKOpenIdConnectProviderCustomResourceProviderHandlerF2C543E0: {
      DependsOn: [
        CustomAWSCDKOpenIdConnectProviderCustomResourceProviderRole517FED65,
      ],
      Properties: {
        Code: {
          S3Bucket: {
            Fn::Sub: cdk-hnb659fds-assets-\${AWS::AccountId}-ap-south-1,
          },
          S3Key: ZIP,
        },
        Handler: __entrypoint__.handler,
        MemorySize: 128,
        Role: {
          Fn::GetAtt: [
            CustomAWSCDKOpenIdConnectProviderCustomResourceProviderRole517FED65,
            Arn,
          ],
        },
        Runtime: nodejs16.x,
        Timeout: 900,
      },
      Type: AWS::Lambda::Function,
    },
    CustomAWSCDKOpenIdConnectProviderCustomResourceProviderRole517FED65: {
      Properties: {
        AssumeRolePolicyDocument: {
          Statement: [
            {
              Action: sts:AssumeRole,
              Effect: Allow,
              Principal: {
                Service: lambda.amazonaws.com,
              },
            },
          ],
          Version: 2012-10-17,
        },
        ManagedPolicyArns: [
          {
            Fn::Sub: arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole,
          },
        ],
        Policies: [
          {
            PolicyDocument: {
              Statement: [
                {
                  Action: [
                    iam:CreateOpenIDConnectProvider,
                    iam:DeleteOpenIDConnectProvider,
                    iam:UpdateOpenIDConnectProviderThumbprint,
                    iam:AddClientIDToOpenIDConnectProvider,
                    iam:RemoveClientIDFromOpenIDConnectProvider,
                  ],
                  Effect: Allow,
                  Resource: *,
                },
              ],
              Version: 2012-10-17,
            },
            PolicyName: Inline,
          },
        ],
      },
      Type: AWS::IAM::Role,
    },
    CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F: {
      DependsOn: [
        CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092,
      ],
      Properties: {
        Code: {
          S3Bucket: {
            Fn::Sub: cdk-hnb659fds-assets-\${AWS::AccountId}-ap-south-1,
          },
          S3Key: ZIP,
        },
        Description: {
          Fn::Join: [
            ,
            [
              Lambda function for auto-deleting objects in ,
              {
                Ref: installpipelineAccessLogsBucketC0C7CACD,
              },
               S3 bucket.,
            ],
          ],
        },
        Handler: __entrypoint__.handler,
        MemorySize: 128,
        Role: {
          Fn::GetAtt: [
            CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092,
            Arn,
          ],
        },
        Runtime: nodejs14.x,
        Timeout: 900,
      },
      Type: AWS::Lambda::Function,
    },
    CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092: {
      Properties: {
        AssumeRolePolicyDocument: {
          Statement: [
            {
              Action: sts:AssumeRole,
              Effect: Allow,
              Principal: {
                Service: lambda.amazonaws.com,
              },
            },
          ],
          Version: 2012-10-17,
        },
        ManagedPolicyArns: [
          {
            Fn::Sub: arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole,
          },
        ],
      },
      Type: AWS::IAM::Role,
    },
    deploymenttableC3BF9083: {
      DeletionPolicy: Delete,
      Properties: {
        AttributeDefinitions: [
          {
            AttributeName: tenantID,
            AttributeType: S,
          },
          {
            AttributeName: id,
            AttributeType: S,
          },
        ],
        BillingMode: PAY_PER_REQUEST,
        KeySchema: [
          {
            AttributeName: tenantID,
            KeyType: HASH,
          },
          {
            AttributeName: id,
            KeyType: RANGE,
          },
        ],
        StreamSpecification: {
          StreamViewType: NEW_AND_OLD_IMAGES,
        },
        TableName: saas-pipelines,
      },
      Type: AWS::DynamoDB::Table,
      UpdateReplacePolicy: Delete,
    },
    gitHubecrpushroleBB7A75BA: {
      Properties: {
        AssumeRolePolicyDocument: {
          Statement: [
            {
              Action: sts:AssumeRoleWithWebIdentity,
              Condition: {
                StringLike: {
                  token.actions.githubusercontent.com:sub: repo:rverma-nsl/nsl-saas-accelerator:*,
                },
              },
              Effect: Allow,
              Principal: {
                Federated: {
                  Ref: gitHubecrpushrolegithuboidcprovider7BAC8B56,
                },
              },
            },
          ],
          Version: 2012-10-17,
        },
        Policies: [
          {
            PolicyDocument: {
              Statement: [
                {
                  Action: [
                    ecr:BatchCheckLayerAvailability,
                    ecr:GetDownloadUrlForLayer,
                    ecr:BatchGetImage,
                    ecr:PutImage,
                    ecr:GetAuthorizationToken,
                  ],
                  Effect: Allow,
                  Resource: {
                    Fn::Join: [
                      ,
                      [
                        arn:aws:ecr:,
                        {
                          Ref: AWS::Region,
                        },
                        :,
                        {
                          Ref: AWS::AccountId,
                        },
                        :repository/rverma-nsl/nsl-saas-accelerator/*,
                      ],
                    ],
                  },
                },
              ],
              Version: 2012-10-17,
            },
            PolicyName: ecr-push,
          },
        ],
        RoleName: gitHubSaasDeployRole,
      },
      Type: AWS::IAM::Role,
    },
    gitHubecrpushrolegithuboidcprovider7BAC8B56: {
      DeletionPolicy: Delete,
      Properties: {
        ClientIDList: [
          sts.amazonaws.com,
        ],
        CodeHash: ASSET_HASH_64,
        ServiceToken: {
          Fn::GetAtt: [
            CustomAWSCDKOpenIdConnectProviderCustomResourceProviderHandlerF2C543E0,
            Arn,
          ],
        },
        Url: https://token.actions.githubusercontent.com,
      },
      Type: Custom::AWSCDKOpenIdConnectProvider,
      UpdateReplacePolicy: Delete,
    },
    installpipelineAccessLogsBucketAutoDeleteObjectsCustomResource44E6A4E7: {
      DeletionPolicy: Delete,
      DependsOn: [
        installpipelineAccessLogsBucketPolicy53F09539,
      ],
      Properties: {
        BucketName: {
          Ref: installpipelineAccessLogsBucketC0C7CACD,
        },
        ServiceToken: {
          Fn::GetAtt: [
            CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F,
            Arn,
          ],
        },
      },
      Type: Custom::S3AutoDeleteObjects,
      UpdateReplacePolicy: Delete,
    },
    installpipelineAccessLogsBucketC0C7CACD: {
      DeletionPolicy: Delete,
      Metadata: {
        cdk_nag: {
          rules_to_suppress: [
            {
              id: AwsSolutions-S1,
              reason: Cache bucket should not have s3 bucket logging,
            },
          ],
        },
      },
      Properties: {
        BucketEncryption: {
          ServerSideEncryptionConfiguration: [
            {
              ServerSideEncryptionByDefault: {
                SSEAlgorithm: AES256,
              },
            },
          ],
        },
        OwnershipControls: {
          Rules: [
            {
              ObjectOwnership: BucketOwnerEnforced,
            },
          ],
        },
        PublicAccessBlockConfiguration: {
          BlockPublicAcls: true,
          BlockPublicPolicy: true,
          IgnorePublicAcls: true,
          RestrictPublicBuckets: true,
        },
        Tags: [
          {
            Key: aws-cdk:auto-delete-objects,
            Value: true,
          },
        ],
      },
      Type: AWS::S3::Bucket,
      UpdateReplacePolicy: Delete,
    },
    installpipelineAccessLogsBucketPolicy53F09539: {
      Properties: {
        Bucket: {
          Ref: installpipelineAccessLogsBucketC0C7CACD,
        },
        PolicyDocument: {
          Statement: [
            {
              Action: s3:*,
              Condition: {
                Bool: {
                  aws:SecureTransport: false,
                },
              },
              Effect: Deny,
              Principal: {
                AWS: *,
              },
              Resource: [
                {
                  Fn::GetAtt: [
                    installpipelineAccessLogsBucketC0C7CACD,
                    Arn,
                  ],
                },
                {
                  Fn::Join: [
                    ,
                    [
                      {
                        Fn::GetAtt: [
                          installpipelineAccessLogsBucketC0C7CACD,
                          Arn,
                        ],
                      },
                      /*,
                    ],
                  ],
                },
              ],
            },
            {
              Action: [
                s3:GetBucket*,
                s3:List*,
                s3:DeleteObject*,
              ],
              Effect: Allow,
              Principal: {
                AWS: {
                  Fn::GetAtt: [
                    CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092,
                    Arn,
                  ],
                },
              },
              Resource: [
                {
                  Fn::GetAtt: [
                    installpipelineAccessLogsBucketC0C7CACD,
                    Arn,
                  ],
                },
                {
                  Fn::Join: [
                    ,
                    [
                      {
                        Fn::GetAtt: [
                          installpipelineAccessLogsBucketC0C7CACD,
                          Arn,
                        ],
                      },
                      /*,
                    ],
                  ],
                },
              ],
            },
            {
              Action: s3:PutObject,
              Condition: {
                ArnLike: {
                  aws:SourceArn: {
                    Fn::GetAtt: [
                      installpipelineArtifactsBucketBEF15C5E,
                      Arn,
                    ],
                  },
                },
                StringEquals: {
                  aws:SourceAccount: {
                    Ref: AWS::AccountId,
                  },
                },
              },
              Effect: Allow,
              Principal: {
                Service: logging.s3.amazonaws.com,
              },
              Resource: {
                Fn::Join: [
                  ,
                  [
                    {
                      Fn::GetAtt: [
                        installpipelineAccessLogsBucketC0C7CACD,
                        Arn,
                      ],
                    },
                    /access-logs*,
                  ],
                ],
              },
            },
          ],
          Version: 2012-10-17,
        },
      },
      Type: AWS::S3::BucketPolicy,
    },
    installpipelineArtifactsBucketAutoDeleteObjectsCustomResourceEC86D026: {
      DeletionPolicy: Delete,
      DependsOn: [
        installpipelineArtifactsBucketPolicy83D44F64,
      ],
      Properties: {
        BucketName: {
          Ref: installpipelineArtifactsBucketBEF15C5E,
        },
        ServiceToken: {
          Fn::GetAtt: [
            CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F,
            Arn,
          ],
        },
      },
      Type: Custom::S3AutoDeleteObjects,
      UpdateReplacePolicy: Delete,
    },
    installpipelineArtifactsBucketBEF15C5E: {
      DeletionPolicy: Delete,
      Properties: {
        BucketEncryption: {
          ServerSideEncryptionConfiguration: [
            {
              ServerSideEncryptionByDefault: {
                SSEAlgorithm: AES256,
              },
            },
          ],
        },
        LoggingConfiguration: {
          DestinationBucketName: {
            Ref: installpipelineAccessLogsBucketC0C7CACD,
          },
          LogFilePrefix: access-logs,
        },
        OwnershipControls: {
          Rules: [
            {
              ObjectOwnership: BucketOwnerEnforced,
            },
          ],
        },
        PublicAccessBlockConfiguration: {
          BlockPublicAcls: true,
          BlockPublicPolicy: true,
          IgnorePublicAcls: true,
          RestrictPublicBuckets: true,
        },
        Tags: [
          {
            Key: aws-cdk:auto-delete-objects,
            Value: true,
          },
        ],
      },
      Type: AWS::S3::Bucket,
      UpdateReplacePolicy: Delete,
    },
    installpipelineArtifactsBucketPolicy83D44F64: {
      Properties: {
        Bucket: {
          Ref: installpipelineArtifactsBucketBEF15C5E,
        },
        PolicyDocument: {
          Statement: [
            {
              Action: s3:*,
              Condition: {
                Bool: {
                  aws:SecureTransport: false,
                },
              },
              Effect: Deny,
              Principal: {
                AWS: *,
              },
              Resource: [
                {
                  Fn::GetAtt: [
                    installpipelineArtifactsBucketBEF15C5E,
                    Arn,
                  ],
                },
                {
                  Fn::Join: [
                    ,
                    [
                      {
                        Fn::GetAtt: [
                          installpipelineArtifactsBucketBEF15C5E,
                          Arn,
                        ],
                      },
                      /*,
                    ],
                  ],
                },
              ],
            },
            {
              Action: [
                s3:GetBucket*,
                s3:List*,
                s3:DeleteObject*,
              ],
              Effect: Allow,
              Principal: {
                AWS: {
                  Fn::GetAtt: [
                    CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092,
                    Arn,
                  ],
                },
              },
              Resource: [
                {
                  Fn::GetAtt: [
                    installpipelineArtifactsBucketBEF15C5E,
                    Arn,
                  ],
                },
                {
                  Fn::Join: [
                    ,
                    [
                      {
                        Fn::GetAtt: [
                          installpipelineArtifactsBucketBEF15C5E,
                          Arn,
                        ],
                      },
                      /*,
                    ],
                  ],
                },
              ],
            },
          ],
          Version: 2012-10-17,
        },
      },
      Type: AWS::S3::BucketPolicy,
    },
    installpipelineCdkCacheBucketAutoDeleteObjectsCustomResource7BD23795: {
      DeletionPolicy: Delete,
      DependsOn: [
        installpipelineCdkCacheBucketPolicyD8C7B901,
      ],
      Properties: {
        BucketName: {
          Ref: installpipelineCdkCacheBucketC712E0E7,
        },
        ServiceToken: {
          Fn::GetAtt: [
            CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F,
            Arn,
          ],
        },
      },
      Type: Custom::S3AutoDeleteObjects,
      UpdateReplacePolicy: Delete,
    },
    installpipelineCdkCacheBucketC712E0E7: {
      DeletionPolicy: Delete,
      Metadata: {
        cdk_nag: {
          rules_to_suppress: [
            {
              id: AwsSolutions-S1,
              reason: Cache bucket should not have s3 bucket logging,
            },
          ],
        },
      },
      Properties: {
        BucketEncryption: {
          ServerSideEncryptionConfiguration: [
            {
              ServerSideEncryptionByDefault: {
                SSEAlgorithm: AES256,
              },
            },
          ],
        },
        OwnershipControls: {
          Rules: [
            {
              ObjectOwnership: BucketOwnerEnforced,
            },
          ],
        },
        PublicAccessBlockConfiguration: {
          BlockPublicAcls: true,
          BlockPublicPolicy: true,
          IgnorePublicAcls: true,
          RestrictPublicBuckets: true,
        },
        Tags: [
          {
            Key: aws-cdk:auto-delete-objects,
            Value: true,
          },
        ],
      },
      Type: AWS::S3::Bucket,
      UpdateReplacePolicy: Delete,
    },
    installpipelineCdkCacheBucketPolicyD8C7B901: {
      Properties: {
        Bucket: {
          Ref: installpipelineCdkCacheBucketC712E0E7,
        },
        PolicyDocument: {
          Statement: [
            {
              Action: s3:*,
              Condition: {
                Bool: {
                  aws:SecureTransport: false,
                },
              },
              Effect: Deny,
              Principal: {
                AWS: *,
              },
              Resource: [
                {
                  Fn::GetAtt: [
                    installpipelineCdkCacheBucketC712E0E7,
                    Arn,
                  ],
                },
                {
                  Fn::Join: [
                    ,
                    [
                      {
                        Fn::GetAtt: [
                          installpipelineCdkCacheBucketC712E0E7,
                          Arn,
                        ],
                      },
                      /*,
                    ],
                  ],
                },
              ],
            },
            {
              Action: [
                s3:GetBucket*,
                s3:List*,
                s3:DeleteObject*,
              ],
              Effect: Allow,
              Principal: {
                AWS: {
                  Fn::GetAtt: [
                    CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092,
                    Arn,
                  ],
                },
              },
              Resource: [
                {
                  Fn::GetAtt: [
                    installpipelineCdkCacheBucketC712E0E7,
                    Arn,
                  ],
                },
                {
                  Fn::Join: [
                    ,
                    [
                      {
                        Fn::GetAtt: [
                          installpipelineCdkCacheBucketC712E0E7,
                          Arn,
                        ],
                      },
                      /*,
                    ],
                  ],
                },
              ],
            },
          ],
          Version: 2012-10-17,
        },
      },
      Type: AWS::S3::BucketPolicy,
    },
    installpipelineCodePipeline1DB150A2: {
      DependsOn: [
        installpipelineCodePipelineRoleDefaultPolicy2CE1856D,
        installpipelineCodePipelineRoleC00CFBC5,
      ],
      Properties: {
        ArtifactStore: {
          Location: {
            Ref: installpipelineArtifactsBucketBEF15C5E,
          },
          Type: S3,
        },
        Name: toolchain,
        RestartExecutionOnUpdate: false,
        RoleArn: {
          Fn::GetAtt: [
            installpipelineCodePipelineRoleC00CFBC5,
            Arn,
          ],
        },
        Stages: [
          {
            Actions: [
              {
                ActionTypeId: {
                  Category: Source,
                  Owner: AWS,
                  Provider: CodeStarSourceConnection,
                  Version: 1,
                },
                Configuration: {
                  BranchName: main,
                  ConnectionArn: arn:aws:codestar-connections:ap-south-1:415505189627:connection/UUID,
                  DetectChanges: false,
                  FullRepositoryId: rverma-nsl/nsl-saas-accelerator,
                },
                Name: rverma-nsl_nsl-saas-accelerator,
                OutputArtifacts: [
                  {
                    Name: rverma_nsl_nsl_saas_accelerator_Source,
                  },
                ],
                RoleArn: {
                  Fn::GetAtt: [
                    installpipelineCodePipelineSourcervermanslnslsaasacceleratorCodePipelineActionRole8E7CC609,
                    Arn,
                  ],
                },
                RunOrder: 1,
              },
            ],
            Name: Source,
          },
          {
            Actions: [
              {
                ActionTypeId: {
                  Category: Build,
                  Owner: AWS,
                  Provider: CodeBuild,
                  Version: 1,
                },
                Configuration: {
                  EnvironmentVariables: [{"name":"_PROJECT_CONFIG_HASH","type":"PLAINTEXT","value":"ASSET_HASH_64"}],
                  ProjectName: {
                    Ref: installpipelineCodePipelineBuildSynthCdkBuildProject95EF92A3,
                  },
                },
                InputArtifacts: [
                  {
                    Name: rverma_nsl_nsl_saas_accelerator_Source,
                  },
                ],
                Name: Synth,
                OutputArtifacts: [
                  {
                    Name: Synth_Output,
                  },
                ],
                RoleArn: {
                  Fn::GetAtt: [
                    installpipelinetoolchainCodeBuildActionRole2A97E1CD,
                    Arn,
                  ],
                },
                RunOrder: 1,
              },
            ],
            Name: Build,
          },
          {
            Actions: [
              {
                ActionTypeId: {
                  Category: Build,
                  Owner: AWS,
                  Provider: CodeBuild,
                  Version: 1,
                },
                Configuration: {
                  EnvironmentVariables: [{"name":"_PROJECT_CONFIG_HASH","type":"PLAINTEXT","value":"ASSET_HASH_64"}],
                  ProjectName: {
                    Ref: installpipelinetoolchainUpdatePipelineSelfMutation97207326,
                  },
                },
                InputArtifacts: [
                  {
                    Name: Synth_Output,
                  },
                ],
                Name: SelfMutate,
                RoleArn: {
                  Fn::GetAtt: [
                    installpipelinetoolchainCodeBuildActionRole2A97E1CD,
                    Arn,
                  ],
                },
                RunOrder: 1,
              },
            ],
            Name: UpdatePipeline,
          },
          {
            Actions: [
              {
                ActionTypeId: {
                  Category: Build,
                  Owner: AWS,
                  Provider: CodeBuild,
                  Version: 1,
                },
                Configuration: {
                  ProjectName: {
                    Ref: installpipelineCodePipelineUpdateDeploymentsupdatedeploymentsF54DFE5E,
                  },
                },
                InputArtifacts: [
                  {
                    Name: rverma_nsl_nsl_saas_accelerator_Source,
                  },
                ],
                Name: update-deployments,
                RoleArn: {
                  Fn::GetAtt: [
                    installpipelinetoolchainCodeBuildActionRole2A97E1CD,
                    Arn,
                  ],
                },
                RunOrder: 1,
              },
            ],
            Name: UpdateDeployments,
          },
        ],
      },
      Type: AWS::CodePipeline::Pipeline,
    },
    installpipelineCodePipelineBuildSynthCdkBuildProject95EF92A3: {
      Properties: {
        Artifacts: {
          Type: CODEPIPELINE,
        },
        Cache: {
          Location: {
            Fn::Join: [
              /,
              [
                {
                  Ref: installpipelineCdkCacheBucketC712E0E7,
                },
                {
                  Ref: AWS::NoValue,
                },
              ],
            ],
          },
          Type: S3,
        },
        Description: Pipeline step toolchain/CodePipeline/Build/Synth,
        EncryptionKey: alias/aws/s3,
        Environment: {
          ComputeType: BUILD_GENERAL1_SMALL,
          Image: aws/codebuild/amazonlinux2-aarch64-standard:3.0,
          ImagePullCredentialsType: CODEBUILD,
          PrivilegedMode: false,
          Type: ARM_CONTAINER,
        },
        ServiceRole: {
          Fn::GetAtt: [
            installpipelineCodePipelineBuildSynthCdkBuildProjectRole852A55C8,
            Arn,
          ],
        },
        Source: {
          BuildSpec: {
  "cache": {
    "paths": [
      ".yarn/cache/**/*",
      "node_modules/**/*"
    ]
  },
  "version": "0.2",
  "phases": {
    "install": {
      "commands": [
        "n 18",
        "corepack enable",
        "corepack prepare yarn@3.5.1 --activate",
        "yarn set version 3.5.1",
        "yarn install --immutable"
      ]
    },
    "build": {
      "commands": [
        "./.yarn/releases/yarn-3.5.1.cjs install --immutable",
        "./.yarn/releases/yarn-3.5.1.cjs synth:silent -y"
      ]
    }
  },
  "artifacts": {
    "base-directory": "cdk.out",
    "files": [
      "**/*"
    ]
  }
},
          Type: CODEPIPELINE,
        },
      },
      Type: AWS::CodeBuild::Project,
    },
    installpipelineCodePipelineBuildSynthCdkBuildProjectRole852A55C8: {
      Properties: {
        AssumeRolePolicyDocument: {
          Statement: [
            {
              Action: sts:AssumeRole,
              Effect: Allow,
              Principal: {
                Service: codebuild.amazonaws.com,
              },
            },
          ],
          Version: 2012-10-17,
        },
      },
      Type: AWS::IAM::Role,
    },
    installpipelineCodePipelineBuildSynthCdkBuildProjectRoleDefaultPolicy14CD4300: {
      Properties: {
        PolicyDocument: {
          Statement: [
            {
              Action: [
                s3:GetObject*,
                s3:GetBucket*,
                s3:List*,
                s3:DeleteObject*,
                s3:PutObject,
                s3:PutObjectLegalHold,
                s3:PutObjectRetention,
                s3:PutObjectTagging,
                s3:PutObjectVersionTagging,
                s3:Abort*,
              ],
              Effect: Allow,
              Resource: [
                {
                  Fn::GetAtt: [
                    installpipelineCdkCacheBucketC712E0E7,
                    Arn,
                  ],
                },
                {
                  Fn::Join: [
                    ,
                    [
                      {
                        Fn::GetAtt: [
                          installpipelineCdkCacheBucketC712E0E7,
                          Arn,
                        ],
                      },
                      /*,
                    ],
                  ],
                },
              ],
            },
            {
              Action: [
                logs:CreateLogGroup,
                logs:CreateLogStream,
                logs:PutLogEvents,
              ],
              Effect: Allow,
              Resource: [
                {
                  Fn::Join: [
                    ,
                    [
                      arn:,
                      {
                        Ref: AWS::Partition,
                      },
                      :logs:ap-south-1:,
                      {
                        Ref: AWS::AccountId,
                      },
                      :log-group:/aws/codebuild/,
                      {
                        Ref: installpipelineCodePipelineBuildSynthCdkBuildProject95EF92A3,
                      },
                    ],
                  ],
                },
                {
                  Fn::Join: [
                    ,
                    [
                      arn:,
                      {
                        Ref: AWS::Partition,
                      },
                      :logs:ap-south-1:,
                      {
                        Ref: AWS::AccountId,
                      },
                      :log-group:/aws/codebuild/,
                      {
                        Ref: installpipelineCodePipelineBuildSynthCdkBuildProject95EF92A3,
                      },
                      :*,
                    ],
                  ],
                },
              ],
            },
            {
              Action: [
                codebuild:CreateReportGroup,
                codebuild:CreateReport,
                codebuild:UpdateReport,
                codebuild:BatchPutTestCases,
                codebuild:BatchPutCodeCoverages,
              ],
              Effect: Allow,
              Resource: {
                Fn::Join: [
                  ,
                  [
                    arn:,
                    {
                      Ref: AWS::Partition,
                    },
                    :codebuild:ap-south-1:,
                    {
                      Ref: AWS::AccountId,
                    },
                    :report-group/,
                    {
                      Ref: installpipelineCodePipelineBuildSynthCdkBuildProject95EF92A3,
                    },
                    -*,
                  ],
                ],
              },
            },
            {
              Action: [
                s3:GetObject*,
                s3:GetBucket*,
                s3:List*,
                s3:DeleteObject*,
                s3:PutObject,
                s3:PutObjectLegalHold,
                s3:PutObjectRetention,
                s3:PutObjectTagging,
                s3:PutObjectVersionTagging,
                s3:Abort*,
              ],
              Effect: Allow,
              Resource: [
                {
                  Fn::GetAtt: [
                    installpipelineArtifactsBucketBEF15C5E,
                    Arn,
                  ],
                },
                {
                  Fn::Join: [
                    ,
                    [
                      {
                        Fn::GetAtt: [
                          installpipelineArtifactsBucketBEF15C5E,
                          Arn,
                        ],
                      },
                      /*,
                    ],
                  ],
                },
              ],
            },
          ],
          Version: 2012-10-17,
        },
        PolicyName: installpipelineCodePipelineBuildSynthCdkBuildProjectRoleDefaultPolicy14CD4300,
        Roles: [
          {
            Ref: installpipelineCodePipelineBuildSynthCdkBuildProjectRole852A55C8,
          },
        ],
      },
      Type: AWS::IAM::Policy,
    },
    installpipelineCodePipelineRoleC00CFBC5: {
      Properties: {
        AssumeRolePolicyDocument: {
          Statement: [
            {
              Action: sts:AssumeRole,
              Effect: Allow,
              Principal: {
                Service: codepipeline.amazonaws.com,
              },
            },
          ],
          Version: 2012-10-17,
        },
      },
      Type: AWS::IAM::Role,
    },
    installpipelineCodePipelineRoleDefaultPolicy2CE1856D: {
      Properties: {
        PolicyDocument: {
          Statement: [
            {
              Action: [
                s3:GetObject*,
                s3:GetBucket*,
                s3:List*,
                s3:DeleteObject*,
                s3:PutObject,
                s3:PutObjectLegalHold,
                s3:PutObjectRetention,
                s3:PutObjectTagging,
                s3:PutObjectVersionTagging,
                s3:Abort*,
              ],
              Effect: Allow,
              Resource: [
                {
                  Fn::GetAtt: [
                    installpipelineArtifactsBucketBEF15C5E,
                    Arn,
                  ],
                },
                {
                  Fn::Join: [
                    ,
                    [
                      {
                        Fn::GetAtt: [
                          installpipelineArtifactsBucketBEF15C5E,
                          Arn,
                        ],
                      },
                      /*,
                    ],
                  ],
                },
              ],
            },
            {
              Action: sts:AssumeRole,
              Effect: Allow,
              Resource: {
                Fn::GetAtt: [
                  installpipelineCodePipelineSourcervermanslnslsaasacceleratorCodePipelineActionRole8E7CC609,
                  Arn,
                ],
              },
            },
            {
              Action: sts:AssumeRole,
              Effect: Allow,
              Resource: {
                Fn::GetAtt: [
                  installpipelinetoolchainCodeBuildActionRole2A97E1CD,
                  Arn,
                ],
              },
            },
          ],
          Version: 2012-10-17,
        },
        PolicyName: installpipelineCodePipelineRoleDefaultPolicy2CE1856D,
        Roles: [
          {
            Ref: installpipelineCodePipelineRoleC00CFBC5,
          },
        ],
      },
      Type: AWS::IAM::Policy,
    },
    installpipelineCodePipelineSourcervermanslnslsaasacceleratorCodePipelineActionRole8E7CC609: {
      Properties: {
        AssumeRolePolicyDocument: {
          Statement: [
            {
              Action: sts:AssumeRole,
              Effect: Allow,
              Principal: {
                AWS: {
                  Fn::Join: [
                    ,
                    [
                      arn:,
                      {
                        Ref: AWS::Partition,
                      },
                      :iam::,
                      {
                        Ref: AWS::AccountId,
                      },
                      :root,
                    ],
                  ],
                },
              },
            },
          ],
          Version: 2012-10-17,
        },
      },
      Type: AWS::IAM::Role,
    },
    installpipelineCodePipelineSourcervermanslnslsaasacceleratorCodePipelineActionRoleDefaultPolicy29AD1EF5: {
      Properties: {
        PolicyDocument: {
          Statement: [
            {
              Action: codestar-connections:UseConnection,
              Effect: Allow,
              Resource: arn:aws:codestar-connections:ap-south-1:415505189627:connection/UUID,
            },
            {
              Action: [
                s3:GetObject*,
                s3:GetBucket*,
                s3:List*,
                s3:DeleteObject*,
                s3:PutObject,
                s3:PutObjectLegalHold,
                s3:PutObjectRetention,
                s3:PutObjectTagging,
                s3:PutObjectVersionTagging,
                s3:Abort*,
              ],
              Effect: Allow,
              Resource: [
                {
                  Fn::GetAtt: [
                    installpipelineArtifactsBucketBEF15C5E,
                    Arn,
                  ],
                },
                {
                  Fn::Join: [
                    ,
                    [
                      {
                        Fn::GetAtt: [
                          installpipelineArtifactsBucketBEF15C5E,
                          Arn,
                        ],
                      },
                      /*,
                    ],
                  ],
                },
              ],
            },
            {
              Action: [
                s3:PutObjectAcl,
                s3:PutObjectVersionAcl,
              ],
              Effect: Allow,
              Resource: {
                Fn::Join: [
                  ,
                  [
                    {
                      Fn::GetAtt: [
                        installpipelineArtifactsBucketBEF15C5E,
                        Arn,
                      ],
                    },
                    /*,
                  ],
                ],
              },
            },
          ],
          Version: 2012-10-17,
        },
        PolicyName: installpipelineCodePipelineSourcervermanslnslsaasacceleratorCodePipelineActionRoleDefaultPolicy29AD1EF5,
        Roles: [
          {
            Ref: installpipelineCodePipelineSourcervermanslnslsaasacceleratorCodePipelineActionRole8E7CC609,
          },
        ],
      },
      Type: AWS::IAM::Policy,
    },
    installpipelineCodePipelineUpdateDeploymentsupdatedeploymentsF54DFE5E: {
      Properties: {
        Artifacts: {
          Type: CODEPIPELINE,
        },
        Cache: {
          Location: {
            Fn::Join: [
              /,
              [
                {
                  Ref: installpipelineCdkCacheBucketC712E0E7,
                },
                {
                  Ref: AWS::NoValue,
                },
              ],
            ],
          },
          Type: S3,
        },
        Description: Pipeline step toolchain/CodePipeline/UpdateDeployments/update-deployments,
        EncryptionKey: alias/aws/s3,
        Environment: {
          ComputeType: BUILD_GENERAL1_SMALL,
          Image: aws/codebuild/amazonlinux2-aarch64-standard:3.0,
          ImagePullCredentialsType: CODEBUILD,
          PrivilegedMode: false,
          Type: ARM_CONTAINER,
        },
        ServiceRole: {
          Fn::GetAtt: [
            updatedeploymentsrole044C7611,
            Arn,
          ],
        },
        Source: {
          BuildSpec: {
  "cache": {
    "paths": [
      ".yarn/cache/**/*",
      "node_modules/**/*"
    ]
  },
  "version": "0.2",
  "phases": {
    "install": {
      "commands": [
        "n 18"
      ]
    },
    "build": {
      "commands": [
        "./.yarn/releases/yarn-3.5.1.cjs install --immutable",
        "./.yarn/releases/yarn-3.5.1.cjs} ts-node src/installer/get-deployments.ts",
        "./.yarn/releases/yarn-3.5.1.cjs} ts-node src/installer/update-deployments.ts"
      ]
    }
  }
},
          Type: CODEPIPELINE,
        },
      },
      Type: AWS::CodeBuild::Project,
    },
    installpipelinetoolchainCodeBuildActionRole2A97E1CD: {
      Properties: {
        AssumeRolePolicyDocument: {
          Statement: [
            {
              Action: sts:AssumeRole,
              Condition: {
                Bool: {
                  aws:ViaAWSService: codepipeline.amazonaws.com,
                },
              },
              Effect: Allow,
              Principal: {
                AWS: {
                  Fn::Join: [
                    ,
                    [
                      arn:,
                      {
                        Ref: AWS::Partition,
                      },
                      :iam::,
                      {
                        Ref: AWS::AccountId,
                      },
                      :root,
                    ],
                  ],
                },
              },
            },
          ],
          Version: 2012-10-17,
        },
      },
      Type: AWS::IAM::Role,
    },
    installpipelinetoolchainCodeBuildActionRoleDefaultPolicyD3DD34BD: {
      Properties: {
        PolicyDocument: {
          Statement: [
            {
              Action: [
                codebuild:BatchGetBuilds,
                codebuild:StartBuild,
                codebuild:StopBuild,
              ],
              Effect: Allow,
              Resource: {
                Fn::GetAtt: [
                  installpipelineCodePipelineBuildSynthCdkBuildProject95EF92A3,
                  Arn,
                ],
              },
            },
            {
              Action: [
                codebuild:BatchGetBuilds,
                codebuild:StartBuild,
                codebuild:StopBuild,
              ],
              Effect: Allow,
              Resource: {
                Fn::GetAtt: [
                  installpipelinetoolchainUpdatePipelineSelfMutation97207326,
                  Arn,
                ],
              },
            },
            {
              Action: [
                codebuild:BatchGetBuilds,
                codebuild:StartBuild,
                codebuild:StopBuild,
              ],
              Effect: Allow,
              Resource: {
                Fn::GetAtt: [
                  installpipelineCodePipelineUpdateDeploymentsupdatedeploymentsF54DFE5E,
                  Arn,
                ],
              },
            },
          ],
          Version: 2012-10-17,
        },
        PolicyName: installpipelinetoolchainCodeBuildActionRoleDefaultPolicyD3DD34BD,
        Roles: [
          {
            Ref: installpipelinetoolchainCodeBuildActionRole2A97E1CD,
          },
        ],
      },
      Type: AWS::IAM::Policy,
    },
    installpipelinetoolchainUpdatePipelineSelfMutation97207326: {
      Properties: {
        Artifacts: {
          Type: CODEPIPELINE,
        },
        Cache: {
          Type: NO_CACHE,
        },
        Description: Pipeline step toolchain/CodePipeline/UpdatePipeline/SelfMutate,
        EncryptionKey: alias/aws/s3,
        Environment: {
          ComputeType: BUILD_GENERAL1_SMALL,
          Image: aws/codebuild/amazonlinux2-aarch64-standard:3.0,
          ImagePullCredentialsType: CODEBUILD,
          PrivilegedMode: false,
          Type: ARM_CONTAINER,
        },
        ServiceRole: {
          Fn::GetAtt: [
            installpipelinetoolchainUpdatePipelineSelfMutationRoleE76165C3,
            Arn,
          ],
        },
        Source: {
          BuildSpec: {
  "version": "0.2",
  "phases": {
    "install": {
      "commands": [
        "npm install -g aws-cdk@2.76.0"
      ]
    },
    "build": {
      "commands": [
        "cdk -a . deploy toolchain --require-approval=never --verbose"
      ]
    }
  }
},
          Type: CODEPIPELINE,
        },
      },
      Type: AWS::CodeBuild::Project,
    },
    installpipelinetoolchainUpdatePipelineSelfMutationRoleDefaultPolicy744FEDD1: {
      Properties: {
        PolicyDocument: {
          Statement: [
            {
              Action: [
                logs:CreateLogGroup,
                logs:CreateLogStream,
                logs:PutLogEvents,
              ],
              Effect: Allow,
              Resource: [
                {
                  Fn::Join: [
                    ,
                    [
                      arn:,
                      {
                        Ref: AWS::Partition,
                      },
                      :logs:ap-south-1:,
                      {
                        Ref: AWS::AccountId,
                      },
                      :log-group:/aws/codebuild/,
                      {
                        Ref: installpipelinetoolchainUpdatePipelineSelfMutation97207326,
                      },
                    ],
                  ],
                },
                {
                  Fn::Join: [
                    ,
                    [
                      arn:,
                      {
                        Ref: AWS::Partition,
                      },
                      :logs:ap-south-1:,
                      {
                        Ref: AWS::AccountId,
                      },
                      :log-group:/aws/codebuild/,
                      {
                        Ref: installpipelinetoolchainUpdatePipelineSelfMutation97207326,
                      },
                      :*,
                    ],
                  ],
                },
              ],
            },
            {
              Action: [
                codebuild:CreateReportGroup,
                codebuild:CreateReport,
                codebuild:UpdateReport,
                codebuild:BatchPutTestCases,
                codebuild:BatchPutCodeCoverages,
              ],
              Effect: Allow,
              Resource: {
                Fn::Join: [
                  ,
                  [
                    arn:,
                    {
                      Ref: AWS::Partition,
                    },
                    :codebuild:ap-south-1:,
                    {
                      Ref: AWS::AccountId,
                    },
                    :report-group/,
                    {
                      Ref: installpipelinetoolchainUpdatePipelineSelfMutation97207326,
                    },
                    -*,
                  ],
                ],
              },
            },
            {
              Action: sts:AssumeRole,
              Condition: {
                ForAnyValue:StringEquals: {
                  iam:ResourceTag/aws-cdk:bootstrap-role: [
                    image-publishing,
                    file-publishing,
                    deploy,
                  ],
                },
              },
              Effect: Allow,
              Resource: {
                Fn::Join: [
                  ,
                  [
                    arn:*:iam::,
                    {
                      Ref: AWS::AccountId,
                    },
                    :role/*,
                  ],
                ],
              },
            },
            {
              Action: cloudformation:DescribeStacks,
              Effect: Allow,
              Resource: *,
            },
            {
              Action: s3:ListBucket,
              Effect: Allow,
              Resource: *,
            },
            {
              Action: [
                s3:GetObject*,
                s3:GetBucket*,
                s3:List*,
              ],
              Effect: Allow,
              Resource: [
                {
                  Fn::GetAtt: [
                    installpipelineArtifactsBucketBEF15C5E,
                    Arn,
                  ],
                },
                {
                  Fn::Join: [
                    ,
                    [
                      {
                        Fn::GetAtt: [
                          installpipelineArtifactsBucketBEF15C5E,
                          Arn,
                        ],
                      },
                      /*,
                    ],
                  ],
                },
              ],
            },
          ],
          Version: 2012-10-17,
        },
        PolicyName: installpipelinetoolchainUpdatePipelineSelfMutationRoleDefaultPolicy744FEDD1,
        Roles: [
          {
            Ref: installpipelinetoolchainUpdatePipelineSelfMutationRoleE76165C3,
          },
        ],
      },
      Type: AWS::IAM::Policy,
    },
    installpipelinetoolchainUpdatePipelineSelfMutationRoleE76165C3: {
      Properties: {
        AssumeRolePolicyDocument: {
          Statement: [
            {
              Action: sts:AssumeRole,
              Effect: Allow,
              Principal: {
                Service: codebuild.amazonaws.com,
              },
            },
          ],
          Version: 2012-10-17,
        },
      },
      Type: AWS::IAM::Role,
    },
    provisioningproject7C320C04: {
      Properties: {
        Artifacts: {
          Type: NO_ARTIFACTS,
        },
        Cache: {
          Location: {
            Fn::Join: [
              /,
              [
                {
                  Ref: installpipelineCdkCacheBucketC712E0E7,
                },
                {
                  Ref: AWS::NoValue,
                },
              ],
            ],
          },
          Type: S3,
        },
        EncryptionKey: alias/aws/s3,
        Environment: {
          ComputeType: BUILD_GENERAL1_SMALL,
          Image: aws/codebuild/standard:1.0,
          ImagePullCredentialsType: CODEBUILD,
          PrivilegedMode: false,
          Type: LINUX_CONTAINER,
        },
        Name: provisioning-project,
        ServiceRole: {
          Fn::GetAtt: [
            provisioningprojectRole5F1DD74A,
            Arn,
          ],
        },
        Source: {
          BuildSpec: {
  "version": "0.2",
  "phases": {
    "install": {
      "commands": [
        "n 18"
      ]
    },
    "build": {
      "commands": [
        "./.yarn/releases/yarn-3.5.1.cjs install --immutable",
        "./.yarn/releases/yarn-3.5.1.cjs synth:silent -y"
      ]
    }
  },
  "cache": {
    "paths": [
      ".yarn/cache/**/*",
      "node_modules/**/*"
    ]
  }
},
          GitCloneDepth: 1,
          Location: https://github.com/rverma-nsl/nsl-saas-accelerator.git,
          ReportBuildStatus: true,
          Type: GITHUB,
        },
        SourceVersion: main,
      },
      Type: AWS::CodeBuild::Project,
    },
    provisioningprojectRole5F1DD74A: {
      Properties: {
        AssumeRolePolicyDocument: {
          Statement: [
            {
              Action: sts:AssumeRole,
              Effect: Allow,
              Principal: {
                Service: codebuild.amazonaws.com,
              },
            },
          ],
          Version: 2012-10-17,
        },
      },
      Type: AWS::IAM::Role,
    },
    provisioningprojectRoleDefaultPolicyFDADEBE8: {
      Properties: {
        PolicyDocument: {
          Statement: [
            {
              Action: [
                s3:GetObject*,
                s3:GetBucket*,
                s3:List*,
                s3:DeleteObject*,
                s3:PutObject,
                s3:PutObjectLegalHold,
                s3:PutObjectRetention,
                s3:PutObjectTagging,
                s3:PutObjectVersionTagging,
                s3:Abort*,
              ],
              Effect: Allow,
              Resource: [
                {
                  Fn::GetAtt: [
                    installpipelineCdkCacheBucketC712E0E7,
                    Arn,
                  ],
                },
                {
                  Fn::Join: [
                    ,
                    [
                      {
                        Fn::GetAtt: [
                          installpipelineCdkCacheBucketC712E0E7,
                          Arn,
                        ],
                      },
                      /*,
                    ],
                  ],
                },
              ],
            },
            {
              Action: [
                logs:CreateLogGroup,
                logs:CreateLogStream,
                logs:PutLogEvents,
              ],
              Effect: Allow,
              Resource: [
                {
                  Fn::Join: [
                    ,
                    [
                      arn:,
                      {
                        Ref: AWS::Partition,
                      },
                      :logs:ap-south-1:,
                      {
                        Ref: AWS::AccountId,
                      },
                      :log-group:/aws/codebuild/,
                      {
                        Ref: provisioningproject7C320C04,
                      },
                    ],
                  ],
                },
                {
                  Fn::Join: [
                    ,
                    [
                      arn:,
                      {
                        Ref: AWS::Partition,
                      },
                      :logs:ap-south-1:,
                      {
                        Ref: AWS::AccountId,
                      },
                      :log-group:/aws/codebuild/,
                      {
                        Ref: provisioningproject7C320C04,
                      },
                      :*,
                    ],
                  ],
                },
              ],
            },
            {
              Action: [
                codebuild:CreateReportGroup,
                codebuild:CreateReport,
                codebuild:UpdateReport,
                codebuild:BatchPutTestCases,
                codebuild:BatchPutCodeCoverages,
              ],
              Effect: Allow,
              Resource: {
                Fn::Join: [
                  ,
                  [
                    arn:,
                    {
                      Ref: AWS::Partition,
                    },
                    :codebuild:ap-south-1:,
                    {
                      Ref: AWS::AccountId,
                    },
                    :report-group/,
                    {
                      Ref: provisioningproject7C320C04,
                    },
                    -*,
                  ],
                ],
              },
            },
            {
              Action: sts:AssumeRole,
              Effect: Allow,
              Resource: [
                {
                  Fn::Join: [
                    ,
                    [
                      arn:aws:iam::,
                      {
                        Ref: AWS::AccountId,
                      },
                      :role/cdk-hnb659fds-deploy-role-,
                      {
                        Ref: AWS::AccountId,
                      },
                      -,
                      {
                        Ref: AWS::Region,
                      },
                      },
                    ],
                  ],
                },
                {
                  Fn::Join: [
                    ,
                    [
                      arn:aws:iam::,
                      {
                        Ref: AWS::AccountId,
                      },
                      :role/cdk-hnb659fds-file-publishing-role-,
                      {
                        Ref: AWS::AccountId,
                      },
                      -,
                      {
                        Ref: AWS::Region,
                      },
                      },
                    ],
                  ],
                },
                {
                  Fn::Join: [
                    ,
                    [
                      arn:aws:iam::,
                      {
                        Ref: AWS::AccountId,
                      },
                      :role/cdk-hnb659fds-image-publishing-role-,
                      {
                        Ref: AWS::AccountId,
                      },
                      -,
                      {
                        Ref: AWS::Region,
                      },
                      },
                    ],
                  ],
                },
              ],
            },
            {
              Action: ec2:DescribeRegions,
              Effect: Allow,
              Resource: *,
            },
          ],
          Version: 2012-10-17,
        },
        PolicyName: provisioningprojectRoleDefaultPolicyFDADEBE8,
        Roles: [
          {
            Ref: provisioningprojectRole5F1DD74A,
          },
        ],
      },
      Type: AWS::IAM::Policy,
    },
    provisioningprojectaddtenantfunctionADF4D121: {
      DependsOn: [
        provisioningprojectaddtenantfunctionServiceRoleDefaultPolicy9BC5D474,
        provisioningprojectaddtenantfunctionServiceRole550D119D,
      ],
      Properties: {
        Code: {
          S3Bucket: {
            Fn::Sub: cdk-hnb659fds-assets-\${AWS::AccountId}-ap-south-1,
          },
          S3Key: ZIP,
        },
        Description: src/installer/ddb-stream/add-tenant.lambda.ts,
        Environment: {
          Variables: {
            AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1,
            PROJECT_NAME: provisioning-project,
          },
        },
        Handler: index.handler,
        Role: {
          Fn::GetAtt: [
            provisioningprojectaddtenantfunctionServiceRole550D119D,
            Arn,
          ],
        },
        Runtime: nodejs18.x,
      },
      Type: AWS::Lambda::Function,
    },
    provisioningprojectaddtenantfunctionDynamoDBEventSourcetoolchaindeploymenttable3225D94FAFF39FD6: {
      Properties: {
        BatchSize: 100,
        EventSourceArn: {
          Fn::GetAtt: [
            deploymenttableC3BF9083,
            StreamArn,
          ],
        },
        FunctionName: {
          Ref: provisioningprojectaddtenantfunctionADF4D121,
        },
        StartingPosition: LATEST,
      },
      Type: AWS::Lambda::EventSourceMapping,
    },
    provisioningprojectaddtenantfunctionServiceRole550D119D: {
      Properties: {
        AssumeRolePolicyDocument: {
          Statement: [
            {
              Action: sts:AssumeRole,
              Effect: Allow,
              Principal: {
                Service: lambda.amazonaws.com,
              },
            },
          ],
          Version: 2012-10-17,
        },
        ManagedPolicyArns: [
          {
            Fn::Join: [
              ,
              [
                arn:,
                {
                  Ref: AWS::Partition,
                },
                :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole,
              ],
            ],
          },
        ],
      },
      Type: AWS::IAM::Role,
    },
    provisioningprojectaddtenantfunctionServiceRoleDefaultPolicy9BC5D474: {
      Properties: {
        PolicyDocument: {
          Statement: [
            {
              Action: dynamodb:ListStreams,
              Effect: Allow,
              Resource: *,
            },
            {
              Action: [
                dynamodb:DescribeStream,
                dynamodb:GetRecords,
                dynamodb:GetShardIterator,
              ],
              Effect: Allow,
              Resource: {
                Fn::GetAtt: [
                  deploymenttableC3BF9083,
                  StreamArn,
                ],
              },
            },
          ],
          Version: 2012-10-17,
        },
        PolicyName: provisioningprojectaddtenantfunctionServiceRoleDefaultPolicy9BC5D474,
        Roles: [
          {
            Ref: provisioningprojectaddtenantfunctionServiceRole550D119D,
          },
        ],
      },
      Type: AWS::IAM::Policy,
    },
    provisioningprojectstartpipelinepolicy08AF93E3: {
      Properties: {
        PolicyDocument: {
          Statement: [
            {
              Action: codebuild:StartBuild,
              Effect: Allow,
              Resource: {
                Fn::GetAtt: [
                  provisioningproject7C320C04,
                  Arn,
                ],
              },
            },
          ],
          Version: 2012-10-17,
        },
        PolicyName: provisioningprojectstartpipelinepolicy08AF93E3,
        Roles: [
          {
            Ref: provisioningprojectaddtenantfunctionServiceRole550D119D,
          },
        ],
      },
      Type: AWS::IAM::Policy,
    },
    updatedeploymentsrole044C7611: {
      Properties: {
        AssumeRolePolicyDocument: {
          Statement: [
            {
              Action: sts:AssumeRole,
              Effect: Allow,
              Principal: {
                Service: codebuild.amazonaws.com,
              },
            },
          ],
          Version: 2012-10-17,
        },
        Policies: [
          {
            PolicyDocument: {
              Statement: [
                {
                  Action: [
                    codepipeline:StartPipelineExecution,
                    codepipeline:GetPipelineExecution,
                    codepipeline:GetPipelineState,
                  ],
                  Effect: Allow,
                  Resource: [
                    {
                      Fn::Join: [
                        ,
                        [
                          arn:aws:codepipeline:,
                          {
                            Ref: AWS::Region,
                          },
                          :,
                          {
                            Ref: AWS::AccountId,
                          },
                          :*-silo-pipeline,
                        ],
                      ],
                    },
                    {
                      Fn::Join: [
                        ,
                        [
                          arn:aws:codepipeline:,
                          {
                            Ref: AWS::Region,
                          },
                          :,
                          {
                            Ref: AWS::AccountId,
                          },
                          :*-pool-pipeline,
                        ],
                      ],
                    },
                    {
                      Fn::Join: [
                        ,
                        [
                          arn:aws:codepipeline:,
                          {
                            Ref: AWS::Region,
                          },
                          :,
                          {
                            Ref: AWS::AccountId,
                          },
                          :*-demo-pipeline,
                        ],
                      ],
                    },
                  ],
                },
                {
                  Action: cloudformation:ListStacks,
                  Effect: Allow,
                  Resource: *,
                },
                {
                  Action: [
                    dynamodb:Query,
                    dynamodb:Scan,
                  ],
                  Effect: Allow,
                  Resource: [
                    {
                      Fn::GetAtt: [
                        deploymenttableC3BF9083,
                        Arn,
                      ],
                    },
                    {
                      Fn::Join: [
                        ,
                        [
                          {
                            Fn::GetAtt: [
                              deploymenttableC3BF9083,
                              Arn,
                            ],
                          },
                          /index/*,
                        ],
                      ],
                    },
                  ],
                },
                {
                  Action: ec2:DescribeRegions,
                  Effect: Allow,
                  Resource: *,
                },
              ],
              Version: 2012-10-17,
            },
            PolicyName: deployment-policy,
          },
        ],
      },
      Type: AWS::IAM::Role,
    },
    updatedeploymentsroleDefaultPolicyE6382A1D: {
      Properties: {
        PolicyDocument: {
          Statement: [
            {
              Action: [
                s3:GetObject*,
                s3:GetBucket*,
                s3:List*,
                s3:DeleteObject*,
                s3:PutObject,
                s3:PutObjectLegalHold,
                s3:PutObjectRetention,
                s3:PutObjectTagging,
                s3:PutObjectVersionTagging,
                s3:Abort*,
              ],
              Effect: Allow,
              Resource: [
                {
                  Fn::GetAtt: [
                    installpipelineCdkCacheBucketC712E0E7,
                    Arn,
                  ],
                },
                {
                  Fn::Join: [
                    ,
                    [
                      {
                        Fn::GetAtt: [
                          installpipelineCdkCacheBucketC712E0E7,
                          Arn,
                        ],
                      },
                      /*,
                    ],
                  ],
                },
              ],
            },
            {
              Action: [
                logs:CreateLogGroup,
                logs:CreateLogStream,
                logs:PutLogEvents,
              ],
              Effect: Allow,
              Resource: [
                {
                  Fn::Join: [
                    ,
                    [
                      arn:,
                      {
                        Ref: AWS::Partition,
                      },
                      :logs:ap-south-1:,
                      {
                        Ref: AWS::AccountId,
                      },
                      :log-group:/aws/codebuild/,
                      {
                        Ref: installpipelineCodePipelineUpdateDeploymentsupdatedeploymentsF54DFE5E,
                      },
                    ],
                  ],
                },
                {
                  Fn::Join: [
                    ,
                    [
                      arn:,
                      {
                        Ref: AWS::Partition,
                      },
                      :logs:ap-south-1:,
                      {
                        Ref: AWS::AccountId,
                      },
                      :log-group:/aws/codebuild/,
                      {
                        Ref: installpipelineCodePipelineUpdateDeploymentsupdatedeploymentsF54DFE5E,
                      },
                      :*,
                    ],
                  ],
                },
              ],
            },
            {
              Action: [
                codebuild:CreateReportGroup,
                codebuild:CreateReport,
                codebuild:UpdateReport,
                codebuild:BatchPutTestCases,
                codebuild:BatchPutCodeCoverages,
              ],
              Effect: Allow,
              Resource: {
                Fn::Join: [
                  ,
                  [
                    arn:,
                    {
                      Ref: AWS::Partition,
                    },
                    :codebuild:ap-south-1:,
                    {
                      Ref: AWS::AccountId,
                    },
                    :report-group/,
                    {
                      Ref: installpipelineCodePipelineUpdateDeploymentsupdatedeploymentsF54DFE5E,
                    },
                    -*,
                  ],
                ],
              },
            },
            {
              Action: [
                s3:GetObject*,
                s3:GetBucket*,
                s3:List*,
              ],
              Effect: Allow,
              Resource: [
                {
                  Fn::GetAtt: [
                    installpipelineArtifactsBucketBEF15C5E,
                    Arn,
                  ],
                },
                {
                  Fn::Join: [
                    ,
                    [
                      {
                        Fn::GetAtt: [
                          installpipelineArtifactsBucketBEF15C5E,
                          Arn,
                        ],
                      },
                      /*,
                    ],
                  ],
                },
              ],
            },
          ],
          Version: 2012-10-17,
        },
        PolicyName: updatedeploymentsroleDefaultPolicyE6382A1D,
        Roles: [
          {
            Ref: updatedeploymentsrole044C7611,
          },
        ],
      },
      Type: AWS::IAM::Policy,
    },
  },
  Rules: {
    CheckBootstrapVersion: {
      Assertions: [
        {
          Assert: {
            Fn::Not: [
              {
                Fn::Contains: [
                  [
                    1,
                    2,
                    3,
                    4,
                    5,
                  ],
                  {
                    Ref: BootstrapVersion,
                  },
                ],
              },
            ],
          },
          AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.,
        },
      ],
    },
  },
}
`;

exports[`Workload DEMO Stack 1`] = `
{
  Parameters: {
    BootstrapVersion: {
      Default: /cdk-bootstrap/hnb659fds/version,
      Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip],
      Type: AWS::SSM::Parameter::Value<String>,
    },
  },
  Resources: {
    workloadAssetsFileAsset1376C31D3: {
      Properties: {
        Artifacts: {
          Type: CODEPIPELINE,
        },
        Cache: {
          Type: NO_CACHE,
        },
        Description: Pipeline step workload/CodePipeline/Assets/FileAsset1,
        EncryptionKey: alias/aws/s3,
        Environment: {
          ComputeType: BUILD_GENERAL1_SMALL,
          Image: aws/codebuild/amazonlinux2-aarch64-standard:3.0,
          ImagePullCredentialsType: CODEBUILD,
          PrivilegedMode: false,
          Type: ARM_CONTAINER,
        },
        ServiceRole: {
          Fn::GetAtt: [
            workloadAssetsFileRoleF9D3DB43,
            Arn,
          ],
        },
        Source: {
          BuildSpec: {
  "version": "0.2",
  "phases": {
    "install": {
      "commands": [
        "npm install -g cdk-assets@2.76.0"
      ]
    },
    "build": {
      "commands": [
        "cdk-assets --path \\"assembly-workload-workload-S3Site/workloadS3Sitetest91595348.GREEDY_JSON\\" --verbose publish \\"ASSET_HASH_64:current_account-ap-south-1\\""
      ]
    }
  }
},
          Type: CODEPIPELINE,
        },
      },
      Type: AWS::CodeBuild::Project,
    },
    workloadAssetsFileAsset2BFC1CD83: {
      Properties: {
        Artifacts: {
          Type: CODEPIPELINE,
        },
        Cache: {
          Type: NO_CACHE,
        },
        Description: Pipeline step workload/CodePipeline/Assets/FileAsset2,
        EncryptionKey: alias/aws/s3,
        Environment: {
          ComputeType: BUILD_GENERAL1_SMALL,
          Image: aws/codebuild/amazonlinux2-aarch64-standard:3.0,
          ImagePullCredentialsType: CODEBUILD,
          PrivilegedMode: false,
          Type: ARM_CONTAINER,
        },
        ServiceRole: {
          Fn::GetAtt: [
            workloadAssetsFileRoleF9D3DB43,
            Arn,
          ],
        },
        Source: {
          BuildSpec: {
  "version": "0.2",
  "phases": {
    "install": {
      "commands": [
        "npm install -g cdk-assets@2.76.0"
      ]
    },
    "build": {
      "commands": [
        "cdk-assets --path \\"assembly-workload-workload-S3Site/workloadS3Sitetest91595348.GREEDY_JSON\\" --verbose publish \\"ASSET_HASH_64:current_account-ap-south-1\\""
      ]
    }
  }
},
          Type: CODEPIPELINE,
        },
      },
      Type: AWS::CodeBuild::Project,
    },
    workloadAssetsFileAsset3D01038B4: {
      Properties: {
        Artifacts: {
          Type: CODEPIPELINE,
        },
        Cache: {
          Type: NO_CACHE,
        },
        Description: Pipeline step workload/CodePipeline/Assets/FileAsset3,
        EncryptionKey: alias/aws/s3,
        Environment: {
          ComputeType: BUILD_GENERAL1_SMALL,
          Image: aws/codebuild/amazonlinux2-aarch64-standard:3.0,
          ImagePullCredentialsType: CODEBUILD,
          PrivilegedMode: false,
          Type: ARM_CONTAINER,
        },
        ServiceRole: {
          Fn::GetAtt: [
            workloadAssetsFileRoleF9D3DB43,
            Arn,
          ],
        },
        Source: {
          BuildSpec: {
  "version": "0.2",
  "phases": {
    "install": {
      "commands": [
        "npm install -g cdk-assets@2.76.0"
      ]
    },
    "build": {
      "commands": [
        "cdk-assets --path \\"assembly-workload-workload-S3Site/workloadS3Sitetest91595348.GREEDY_JSON\\" --verbose publish \\"ASSET_HASH_64:current_account-ap-south-1\\""
      ]
    }
  }
},
          Type: CODEPIPELINE,
        },
      },
      Type: AWS::CodeBuild::Project,
    },
    workloadAssetsFileAsset420AE620E: {
      Properties: {
        Artifacts: {
          Type: CODEPIPELINE,
        },
        Cache: {
          Type: NO_CACHE,
        },
        Description: Pipeline step workload/CodePipeline/Assets/FileAsset4,
        EncryptionKey: alias/aws/s3,
        Environment: {
          ComputeType: BUILD_GENERAL1_SMALL,
          Image: aws/codebuild/amazonlinux2-aarch64-standard:3.0,
          ImagePullCredentialsType: CODEBUILD,
          PrivilegedMode: false,
          Type: ARM_CONTAINER,
        },
        ServiceRole: {
          Fn::GetAtt: [
            workloadAssetsFileRoleF9D3DB43,
            Arn,
          ],
        },
        Source: {
          BuildSpec: {
  "version": "0.2",
  "phases": {
    "install": {
      "commands": [
        "npm install -g cdk-assets@2.76.0"
      ]
    },
    "build": {
      "commands": [
        "cdk-assets --path \\"assembly-workload-workload-S3Site/workloadS3Sitetest91595348.GREEDY_JSON\\" --verbose publish \\"ASSET_HASH_64:current_account-ap-south-1\\""
      ]
    }
  }
},
          Type: CODEPIPELINE,
        },
      },
      Type: AWS::CodeBuild::Project,
    },
    workloadAssetsFileAsset53FE3925A: {
      Properties: {
        Artifacts: {
          Type: CODEPIPELINE,
        },
        Cache: {
          Type: NO_CACHE,
        },
        Description: Pipeline step workload/CodePipeline/Assets/FileAsset5,
        EncryptionKey: alias/aws/s3,
        Environment: {
          ComputeType: BUILD_GENERAL1_SMALL,
          Image: aws/codebuild/amazonlinux2-aarch64-standard:3.0,
          ImagePullCredentialsType: CODEBUILD,
          PrivilegedMode: false,
          Type: ARM_CONTAINER,
        },
        ServiceRole: {
          Fn::GetAtt: [
            workloadAssetsFileRoleF9D3DB43,
            Arn,
          ],
        },
        Source: {
          BuildSpec: {
  "version": "0.2",
  "phases": {
    "install": {
      "commands": [
        "npm install -g cdk-assets@2.76.0"
      ]
    },
    "build": {
      "commands": [
        "cdk-assets --path \\"assembly-workload-workload-S3Site/workloadS3Sitetest91595348.GREEDY_JSON\\" --verbose publish \\"ASSET_HASH_64:current_account-ap-south-1\\""
      ]
    }
  }
},
          Type: CODEPIPELINE,
        },
      },
      Type: AWS::CodeBuild::Project,
    },
    workloadAssetsFileAsset6BA9827AD: {
      Properties: {
        Artifacts: {
          Type: CODEPIPELINE,
        },
        Cache: {
          Type: NO_CACHE,
        },
        Description: Pipeline step workload/CodePipeline/Assets/FileAsset6,
        EncryptionKey: alias/aws/s3,
        Environment: {
          ComputeType: BUILD_GENERAL1_SMALL,
          Image: aws/codebuild/amazonlinux2-aarch64-standard:3.0,
          ImagePullCredentialsType: CODEBUILD,
          PrivilegedMode: false,
          Type: ARM_CONTAINER,
        },
        ServiceRole: {
          Fn::GetAtt: [
            workloadAssetsFileRoleF9D3DB43,
            Arn,
          ],
        },
        Source: {
          BuildSpec: {
  "version": "0.2",
  "phases": {
    "install": {
      "commands": [
        "npm install -g cdk-assets@2.76.0"
      ]
    },
    "build": {
      "commands": [
        "cdk-assets --path \\"assembly-workload-workload-S3Site/workloadS3Sitetest91595348.GREEDY_JSON\\" --verbose publish \\"ASSET_HASH_64:current_account-ap-south-1\\""
      ]
    }
  }
},
          Type: CODEPIPELINE,
        },
      },
      Type: AWS::CodeBuild::Project,
    },
    workloadAssetsFileAsset77B1A9064: {
      Properties: {
        Artifacts: {
          Type: CODEPIPELINE,
        },
        Cache: {
          Type: NO_CACHE,
        },
        Description: Pipeline step workload/CodePipeline/Assets/FileAsset7,
        EncryptionKey: alias/aws/s3,
        Environment: {
          ComputeType: BUILD_GENERAL1_SMALL,
          Image: aws/codebuild/amazonlinux2-aarch64-standard:3.0,
          ImagePullCredentialsType: CODEBUILD,
          PrivilegedMode: false,
          Type: ARM_CONTAINER,
        },
        ServiceRole: {
          Fn::GetAtt: [
            workloadAssetsFileRoleF9D3DB43,
            Arn,
          ],
        },
        Source: {
          BuildSpec: {
  "version": "0.2",
  "phases": {
    "install": {
      "commands": [
        "npm install -g cdk-assets@2.76.0"
      ]
    },
    "build": {
      "commands": [
        "cdk-assets --path \\"assembly-workload-workload-S3Site/workloadS3Sitetest91595348.GREEDY_JSON\\" --verbose publish \\"ASSET_HASH_64:current_account-ap-south-1\\""
      ]
    }
  }
},
          Type: CODEPIPELINE,
        },
      },
      Type: AWS::CodeBuild::Project,
    },
    workloadAssetsFileRoleDefaultPolicyBF836F94: {
      Properties: {
        PolicyDocument: {
          Statement: [
            {
              Action: [
                logs:CreateLogGroup,
                logs:CreateLogStream,
                logs:PutLogEvents,
              ],
              Effect: Allow,
              Resource: {
                Fn::Join: [
                  ,
                  [
                    arn:,
                    {
                      Ref: AWS::Partition,
                    },
                    :logs:ap-south-1:,
                    {
                      Ref: AWS::AccountId,
                    },
                    :log-group:/aws/codebuild/*,
                  ],
                ],
              },
            },
            {
              Action: [
                codebuild:CreateReportGroup,
                codebuild:CreateReport,
                codebuild:UpdateReport,
                codebuild:BatchPutTestCases,
                codebuild:BatchPutCodeCoverages,
              ],
              Effect: Allow,
              Resource: {
                Fn::Join: [
                  ,
                  [
                    arn:,
                    {
                      Ref: AWS::Partition,
                    },
                    :codebuild:ap-south-1:,
                    {
                      Ref: AWS::AccountId,
                    },
                    :report-group/*,
                  ],
                ],
              },
            },
            {
              Action: [
                codebuild:BatchGetBuilds,
                codebuild:StartBuild,
                codebuild:StopBuild,
              ],
              Effect: Allow,
              Resource: *,
            },
            {
              Action: sts:AssumeRole,
              Effect: Allow,
              Resource: {
                Fn::Sub: arn:\${AWS::Partition}:iam::\${AWS::AccountId}:role/cdk-hnb659fds-file-publishing-role-\${AWS::AccountId}-ap-south-1,
              },
            },
            {
              Action: [
                s3:GetObject*,
                s3:GetBucket*,
                s3:List*,
              ],
              Effect: Allow,
              Resource: [
                {
                  Fn::Join: [
                    ,
                    [
                      arn:,
                      {
                        Ref: AWS::Partition,
                      },
                      :s3:::,
                      {
                        Fn::ImportValue: toolchainBucket,
                      },
                    ],
                  ],
                },
                {
                  Fn::Join: [
                    ,
                    [
                      arn:,
                      {
                        Ref: AWS::Partition,
                      },
                      :s3:::,
                      {
                        Fn::ImportValue: toolchainBucket,
                      },
                      /*,
                    ],
                  ],
                },
              ],
            },
          ],
          Version: 2012-10-17,
        },
        PolicyName: workloadAssetsFileRoleDefaultPolicyBF836F94,
        Roles: [
          {
            Ref: workloadAssetsFileRoleF9D3DB43,
          },
        ],
      },
      Type: AWS::IAM::Policy,
    },
    workloadAssetsFileRoleF9D3DB43: {
      Properties: {
        AssumeRolePolicyDocument: {
          Statement: [
            {
              Action: sts:AssumeRole,
              Effect: Allow,
              Principal: {
                Service: codebuild.amazonaws.com,
              },
            },
            {
              Action: sts:AssumeRole,
              Effect: Allow,
              Principal: {
                AWS: {
                  Fn::Join: [
                    ,
                    [
                      arn:,
                      {
                        Ref: AWS::Partition,
                      },
                      :iam::,
                      {
                        Ref: AWS::AccountId,
                      },
                      :root,
                    ],
                  ],
                },
              },
            },
          ],
          Version: 2012-10-17,
        },
      },
      Type: AWS::IAM::Role,
    },
    workloadCodeBuildActionRole6C3D131A: {
      Properties: {
        AssumeRolePolicyDocument: {
          Statement: [
            {
              Action: sts:AssumeRole,
              Condition: {
                Bool: {
                  aws:ViaAWSService: codepipeline.amazonaws.com,
                },
              },
              Effect: Allow,
              Principal: {
                AWS: {
                  Fn::Join: [
                    ,
                    [
                      arn:,
                      {
                        Ref: AWS::Partition,
                      },
                      :iam::,
                      {
                        Ref: AWS::AccountId,
                      },
                      :root,
                    ],
                  ],
                },
              },
            },
          ],
          Version: 2012-10-17,
        },
      },
      Type: AWS::IAM::Role,
    },
    workloadCodeBuildActionRoleDefaultPolicyA8B93142: {
      Properties: {
        PolicyDocument: {
          Statement: [
            {
              Action: [
                codebuild:BatchGetBuilds,
                codebuild:StartBuild,
                codebuild:StopBuild,
              ],
              Effect: Allow,
              Resource: {
                Fn::GetAtt: [
                  workloadCodePipelineBuildSynthCdkBuildProjectCE5FD61B,
                  Arn,
                ],
              },
            },
            {
              Action: [
                codebuild:BatchGetBuilds,
                codebuild:StartBuild,
                codebuild:StopBuild,
              ],
              Effect: Allow,
              Resource: {
                Fn::GetAtt: [
                  workloadAssetsFileAsset1376C31D3,
                  Arn,
                ],
              },
            },
            {
              Action: [
                codebuild:BatchGetBuilds,
                codebuild:StartBuild,
                codebuild:StopBuild,
              ],
              Effect: Allow,
              Resource: {
                Fn::GetAtt: [
                  workloadAssetsFileAsset2BFC1CD83,
                  Arn,
                ],
              },
            },
            {
              Action: [
                codebuild:BatchGetBuilds,
                codebuild:StartBuild,
                codebuild:StopBuild,
              ],
              Effect: Allow,
              Resource: {
                Fn::GetAtt: [
                  workloadAssetsFileAsset3D01038B4,
                  Arn,
                ],
              },
            },
            {
              Action: [
                codebuild:BatchGetBuilds,
                codebuild:StartBuild,
                codebuild:StopBuild,
              ],
              Effect: Allow,
              Resource: {
                Fn::GetAtt: [
                  workloadAssetsFileAsset420AE620E,
                  Arn,
                ],
              },
            },
            {
              Action: [
                codebuild:BatchGetBuilds,
                codebuild:StartBuild,
                codebuild:StopBuild,
              ],
              Effect: Allow,
              Resource: {
                Fn::GetAtt: [
                  workloadAssetsFileAsset53FE3925A,
                  Arn,
                ],
              },
            },
            {
              Action: [
                codebuild:BatchGetBuilds,
                codebuild:StartBuild,
                codebuild:StopBuild,
              ],
              Effect: Allow,
              Resource: {
                Fn::GetAtt: [
                  workloadAssetsFileAsset6BA9827AD,
                  Arn,
                ],
              },
            },
            {
              Action: [
                codebuild:BatchGetBuilds,
                codebuild:StartBuild,
                codebuild:StopBuild,
              ],
              Effect: Allow,
              Resource: {
                Fn::GetAtt: [
                  workloadAssetsFileAsset77B1A9064,
                  Arn,
                ],
              },
            },
          ],
          Version: 2012-10-17,
        },
        PolicyName: workloadCodeBuildActionRoleDefaultPolicyA8B93142,
        Roles: [
          {
            Ref: workloadCodeBuildActionRole6C3D131A,
          },
        ],
      },
      Type: AWS::IAM::Policy,
    },
    workloadCodePipeline1D826696: {
      DependsOn: [
        workloadCodePipelineRoleDefaultPolicyE4529485,
        workloadCodePipelineRole40DCE8D3,
      ],
      Properties: {
        ArtifactStore: {
          Location: {
            Fn::ImportValue: toolchainBucket,
          },
          Type: S3,
        },
        Name: workload,
        RestartExecutionOnUpdate: false,
        RoleArn: {
          Fn::GetAtt: [
            workloadCodePipelineRole40DCE8D3,
            Arn,
          ],
        },
        Stages: [
          {
            Actions: [
              {
                ActionTypeId: {
                  Category: Source,
                  Owner: AWS,
                  Provider: CodeStarSourceConnection,
                  Version: 1,
                },
                Configuration: {
                  BranchName: main,
                  ConnectionArn: arn:aws:codestar-connections:ap-south-1:415505189627:connection/UUID,
                  DetectChanges: false,
                  FullRepositoryId: rverma-nsl/nsl-saas-accelerator,
                },
                Name: rverma-nsl_nsl-saas-accelerator,
                OutputArtifacts: [
                  {
                    Name: rverma_nsl_nsl_saas_accelerator_Source,
                  },
                ],
                RoleArn: {
                  Fn::GetAtt: [
                    workloadCodePipelineSourcervermanslnslsaasacceleratorCodePipelineActionRoleCA12EEFB,
                    Arn,
                  ],
                },
                RunOrder: 1,
              },
            ],
            Name: Source,
          },
          {
            Actions: [
              {
                ActionTypeId: {
                  Category: Build,
                  Owner: AWS,
                  Provider: CodeBuild,
                  Version: 1,
                },
                Configuration: {
                  ProjectName: {
                    Ref: workloadCodePipelineBuildSynthCdkBuildProjectCE5FD61B,
                  },
                },
                InputArtifacts: [
                  {
                    Name: rverma_nsl_nsl_saas_accelerator_Source,
                  },
                ],
                Name: Synth,
                OutputArtifacts: [
                  {
                    Name: Synth_Output,
                  },
                ],
                RoleArn: {
                  Fn::GetAtt: [
                    workloadCodeBuildActionRole6C3D131A,
                    Arn,
                  ],
                },
                RunOrder: 1,
              },
            ],
            Name: Build,
          },
          {
            Actions: [
              {
                ActionTypeId: {
                  Category: Build,
                  Owner: AWS,
                  Provider: CodeBuild,
                  Version: 1,
                },
                Configuration: {
                  ProjectName: {
                    Ref: workloadAssetsFileAsset1376C31D3,
                  },
                },
                InputArtifacts: [
                  {
                    Name: Synth_Output,
                  },
                ],
                Name: FileAsset1,
                RoleArn: {
                  Fn::GetAtt: [
                    workloadCodeBuildActionRole6C3D131A,
                    Arn,
                  ],
                },
                RunOrder: 1,
              },
              {
                ActionTypeId: {
                  Category: Build,
                  Owner: AWS,
                  Provider: CodeBuild,
                  Version: 1,
                },
                Configuration: {
                  ProjectName: {
                    Ref: workloadAssetsFileAsset2BFC1CD83,
                  },
                },
                InputArtifacts: [
                  {
                    Name: Synth_Output,
                  },
                ],
                Name: FileAsset2,
                RoleArn: {
                  Fn::GetAtt: [
                    workloadCodeBuildActionRole6C3D131A,
                    Arn,
                  ],
                },
                RunOrder: 1,
              },
              {
                ActionTypeId: {
                  Category: Build,
                  Owner: AWS,
                  Provider: CodeBuild,
                  Version: 1,
                },
                Configuration: {
                  ProjectName: {
                    Ref: workloadAssetsFileAsset3D01038B4,
                  },
                },
                InputArtifacts: [
                  {
                    Name: Synth_Output,
                  },
                ],
                Name: FileAsset3,
                RoleArn: {
                  Fn::GetAtt: [
                    workloadCodeBuildActionRole6C3D131A,
                    Arn,
                  ],
                },
                RunOrder: 1,
              },
              {
                ActionTypeId: {
                  Category: Build,
                  Owner: AWS,
                  Provider: CodeBuild,
                  Version: 1,
                },
                Configuration: {
                  ProjectName: {
                    Ref: workloadAssetsFileAsset420AE620E,
                  },
                },
                InputArtifacts: [
                  {
                    Name: Synth_Output,
                  },
                ],
                Name: FileAsset4,
                RoleArn: {
                  Fn::GetAtt: [
                    workloadCodeBuildActionRole6C3D131A,
                    Arn,
                  ],
                },
                RunOrder: 1,
              },
              {
                ActionTypeId: {
                  Category: Build,
                  Owner: AWS,
                  Provider: CodeBuild,
                  Version: 1,
                },
                Configuration: {
                  ProjectName: {
                    Ref: workloadAssetsFileAsset53FE3925A,
                  },
                },
                InputArtifacts: [
                  {
                    Name: Synth_Output,
                  },
                ],
                Name: FileAsset5,
                RoleArn: {
                  Fn::GetAtt: [
                    workloadCodeBuildActionRole6C3D131A,
                    Arn,
                  ],
                },
                RunOrder: 1,
              },
              {
                ActionTypeId: {
                  Category: Build,
                  Owner: AWS,
                  Provider: CodeBuild,
                  Version: 1,
                },
                Configuration: {
                  ProjectName: {
                    Ref: workloadAssetsFileAsset6BA9827AD,
                  },
                },
                InputArtifacts: [
                  {
                    Name: Synth_Output,
                  },
                ],
                Name: FileAsset6,
                RoleArn: {
                  Fn::GetAtt: [
                    workloadCodeBuildActionRole6C3D131A,
                    Arn,
                  ],
                },
                RunOrder: 1,
              },
              {
                ActionTypeId: {
                  Category: Build,
                  Owner: AWS,
                  Provider: CodeBuild,
                  Version: 1,
                },
                Configuration: {
                  ProjectName: {
                    Ref: workloadAssetsFileAsset77B1A9064,
                  },
                },
                InputArtifacts: [
                  {
                    Name: Synth_Output,
                  },
                ],
                Name: FileAsset7,
                RoleArn: {
                  Fn::GetAtt: [
                    workloadCodeBuildActionRole6C3D131A,
                    Arn,
                  ],
                },
                RunOrder: 1,
              },
            ],
            Name: Assets,
          },
          {
            Actions: [
              {
                ActionTypeId: {
                  Category: Deploy,
                  Owner: AWS,
                  Provider: CloudFormation,
                  Version: 1,
                },
                Configuration: {
                  ActionMode: CHANGE_SET_REPLACE,
                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND,
                  ChangeSetName: PipelineChange,
                  RoleArn: {
                    Fn::Join: [
                      ,
                      [
                        arn:,
                        {
                          Ref: AWS::Partition,
                        },
                        :iam::,
                        {
                          Ref: AWS::AccountId,
                        },
                        :role/cdk-hnb659fds-cfn-exec-role-,
                        {
                          Ref: AWS::AccountId,
                        },
                        -ap-south-1,
                      ],
                    ],
                  },
                  StackName: S3Site-test,
                  TemplatePath: Synth_Output::assembly-workload-workload-S3Site/workloadS3Sitetest91595348.GREEDY_JSON,
                },
                InputArtifacts: [
                  {
                    Name: Synth_Output,
                  },
                ],
                Name: Prepare,
                RoleArn: {
                  Fn::Join: [
                    ,
                    [
                      arn:,
                      {
                        Ref: AWS::Partition,
                      },
                      :iam::,
                      {
                        Ref: AWS::AccountId,
                      },
                      :role/cdk-hnb659fds-deploy-role-,
                      {
                        Ref: AWS::AccountId,
                      },
                      -ap-south-1,
                    ],
                  ],
                },
                RunOrder: 1,
              },
              {
                ActionTypeId: {
                  Category: Deploy,
                  Owner: AWS,
                  Provider: CloudFormation,
                  Version: 1,
                },
                Configuration: {
                  ActionMode: CHANGE_SET_EXECUTE,
                  ChangeSetName: PipelineChange,
                  StackName: S3Site-test,
                },
                Name: Deploy,
                RoleArn: {
                  Fn::Join: [
                    ,
                    [
                      arn:,
                      {
                        Ref: AWS::Partition,
                      },
                      :iam::,
                      {
                        Ref: AWS::AccountId,
                      },
                      :role/cdk-hnb659fds-deploy-role-,
                      {
                        Ref: AWS::AccountId,
                      },
                      -ap-south-1,
                    ],
                  ],
                },
                RunOrder: 2,
              },
            ],
            Name: S3Site,
          },
        ],
      },
      Type: AWS::CodePipeline::Pipeline,
    },
    workloadCodePipelineBuildSynthCdkBuildProjectCE5FD61B: {
      Properties: {
        Artifacts: {
          Type: CODEPIPELINE,
        },
        Cache: {
          Location: {
            Fn::Join: [
              /,
              [
                {
                  Fn::ImportValue: cdkCacheBucket,
                },
                {
                  Ref: AWS::NoValue,
                },
              ],
            ],
          },
          Type: S3,
        },
        Description: Pipeline step workload/CodePipeline/Build/Synth,
        EncryptionKey: alias/aws/s3,
        Environment: {
          ComputeType: BUILD_GENERAL1_SMALL,
          Image: aws/codebuild/amazonlinux2-aarch64-standard:3.0,
          ImagePullCredentialsType: CODEBUILD,
          PrivilegedMode: false,
          Type: ARM_CONTAINER,
        },
        ServiceRole: {
          Fn::GetAtt: [
            workloadCodePipelineBuildSynthCdkBuildProjectRole11AA1585,
            Arn,
          ],
        },
        Source: {
          BuildSpec: {
  "cache": {
    "paths": [
      ".yarn/cache/**/*",
      "node_modules/**/*"
    ]
  },
  "version": "0.2",
  "phases": {
    "install": {
      "commands": [
        "n 18",
        "corepack enable",
        "corepack prepare yarn@3.5.1 --activate",
        "yarn set version 3.5.1",
        "yarn install --immutable"
      ]
    },
    "build": {
      "commands": [
        "./.yarn/releases/yarn-3.5.1.cjs install --immutable",
        "./.yarn/releases/yarn-3.5.1.cjs cdk synth -q --verbose -y  -c tenant_id=demo -c deployment_tier=small     -c deployment_type=demo -c deployment_id=dev-001 -c component_account=undefined -c component_region=ap-south-1"
      ]
    }
  },
  "artifacts": {
    "base-directory": "cdk.out",
    "files": [
      "**/*"
    ]
  }
},
          Type: CODEPIPELINE,
        },
      },
      Type: AWS::CodeBuild::Project,
    },
    workloadCodePipelineBuildSynthCdkBuildProjectRole11AA1585: {
      Properties: {
        AssumeRolePolicyDocument: {
          Statement: [
            {
              Action: sts:AssumeRole,
              Effect: Allow,
              Principal: {
                Service: codebuild.amazonaws.com,
              },
            },
          ],
          Version: 2012-10-17,
        },
      },
      Type: AWS::IAM::Role,
    },
    workloadCodePipelineBuildSynthCdkBuildProjectRoleDefaultPolicy2C20BD9F: {
      Properties: {
        PolicyDocument: {
          Statement: [
            {
              Action: [
                s3:GetObject*,
                s3:GetBucket*,
                s3:List*,
                s3:DeleteObject*,
                s3:PutObject,
                s3:PutObjectLegalHold,
                s3:PutObjectRetention,
                s3:PutObjectTagging,
                s3:PutObjectVersionTagging,
                s3:Abort*,
              ],
              Effect: Allow,
              Resource: [
                {
                  Fn::Join: [
                    ,
                    [
                      arn:,
                      {
                        Ref: AWS::Partition,
                      },
                      :s3:::,
                      {
                        Fn::ImportValue: cdkCacheBucket,
                      },
                    ],
                  ],
                },
                {
                  Fn::Join: [
                    ,
                    [
                      arn:,
                      {
                        Ref: AWS::Partition,
                      },
                      :s3:::,
                      {
                        Fn::ImportValue: cdkCacheBucket,
                      },
                      /*,
                    ],
                  ],
                },
              ],
            },
            {
              Action: [
                logs:CreateLogGroup,
                logs:CreateLogStream,
                logs:PutLogEvents,
              ],
              Effect: Allow,
              Resource: [
                {
                  Fn::Join: [
                    ,
                    [
                      arn:,
                      {
                        Ref: AWS::Partition,
                      },
                      :logs:ap-south-1:,
                      {
                        Ref: AWS::AccountId,
                      },
                      :log-group:/aws/codebuild/,
                      {
                        Ref: workloadCodePipelineBuildSynthCdkBuildProjectCE5FD61B,
                      },
                    ],
                  ],
                },
                {
                  Fn::Join: [
                    ,
                    [
                      arn:,
                      {
                        Ref: AWS::Partition,
                      },
                      :logs:ap-south-1:,
                      {
                        Ref: AWS::AccountId,
                      },
                      :log-group:/aws/codebuild/,
                      {
                        Ref: workloadCodePipelineBuildSynthCdkBuildProjectCE5FD61B,
                      },
                      :*,
                    ],
                  ],
                },
              ],
            },
            {
              Action: [
                codebuild:CreateReportGroup,
                codebuild:CreateReport,
                codebuild:UpdateReport,
                codebuild:BatchPutTestCases,
                codebuild:BatchPutCodeCoverages,
              ],
              Effect: Allow,
              Resource: {
                Fn::Join: [
                  ,
                  [
                    arn:,
                    {
                      Ref: AWS::Partition,
                    },
                    :codebuild:ap-south-1:,
                    {
                      Ref: AWS::AccountId,
                    },
                    :report-group/,
                    {
                      Ref: workloadCodePipelineBuildSynthCdkBuildProjectCE5FD61B,
                    },
                    -*,
                  ],
                ],
              },
            },
            {
              Action: [
                s3:GetObject*,
                s3:GetBucket*,
                s3:List*,
                s3:DeleteObject*,
                s3:PutObject,
                s3:PutObjectLegalHold,
                s3:PutObjectRetention,
                s3:PutObjectTagging,
                s3:PutObjectVersionTagging,
                s3:Abort*,
              ],
              Effect: Allow,
              Resource: [
                {
                  Fn::Join: [
                    ,
                    [
                      arn:,
                      {
                        Ref: AWS::Partition,
                      },
                      :s3:::,
                      {
                        Fn::ImportValue: toolchainBucket,
                      },
                    ],
                  ],
                },
                {
                  Fn::Join: [
                    ,
                    [
                      arn:,
                      {
                        Ref: AWS::Partition,
                      },
                      :s3:::,
                      {
                        Fn::ImportValue: toolchainBucket,
                      },
                      /*,
                    ],
                  ],
                },
              ],
            },
          ],
          Version: 2012-10-17,
        },
        PolicyName: workloadCodePipelineBuildSynthCdkBuildProjectRoleDefaultPolicy2C20BD9F,
        Roles: [
          {
            Ref: workloadCodePipelineBuildSynthCdkBuildProjectRole11AA1585,
          },
        ],
      },
      Type: AWS::IAM::Policy,
    },
    workloadCodePipelineRole40DCE8D3: {
      Properties: {
        AssumeRolePolicyDocument: {
          Statement: [
            {
              Action: sts:AssumeRole,
              Effect: Allow,
              Principal: {
                Service: codepipeline.amazonaws.com,
              },
            },
          ],
          Version: 2012-10-17,
        },
      },
      Type: AWS::IAM::Role,
    },
    workloadCodePipelineRoleDefaultPolicyE4529485: {
      Properties: {
        PolicyDocument: {
          Statement: [
            {
              Action: [
                s3:GetObject*,
                s3:GetBucket*,
                s3:List*,
                s3:DeleteObject*,
                s3:PutObject,
                s3:PutObjectLegalHold,
                s3:PutObjectRetention,
                s3:PutObjectTagging,
                s3:PutObjectVersionTagging,
                s3:Abort*,
              ],
              Effect: Allow,
              Resource: [
                {
                  Fn::Join: [
                    ,
                    [
                      arn:,
                      {
                        Ref: AWS::Partition,
                      },
                      :s3:::,
                      {
                        Fn::ImportValue: toolchainBucket,
                      },
                    ],
                  ],
                },
                {
                  Fn::Join: [
                    ,
                    [
                      arn:,
                      {
                        Ref: AWS::Partition,
                      },
                      :s3:::,
                      {
                        Fn::ImportValue: toolchainBucket,
                      },
                      /*,
                    ],
                  ],
                },
              ],
            },
            {
              Action: sts:AssumeRole,
              Effect: Allow,
              Resource: {
                Fn::GetAtt: [
                  workloadCodePipelineSourcervermanslnslsaasacceleratorCodePipelineActionRoleCA12EEFB,
                  Arn,
                ],
              },
            },
            {
              Action: sts:AssumeRole,
              Effect: Allow,
              Resource: {
                Fn::GetAtt: [
                  workloadCodeBuildActionRole6C3D131A,
                  Arn,
                ],
              },
            },
            {
              Action: sts:AssumeRole,
              Effect: Allow,
              Resource: {
                Fn::Join: [
                  ,
                  [
                    arn:,
                    {
                      Ref: AWS::Partition,
                    },
                    :iam::,
                    {
                      Ref: AWS::AccountId,
                    },
                    :role/cdk-hnb659fds-deploy-role-,
                    {
                      Ref: AWS::AccountId,
                    },
                    -ap-south-1,
                  ],
                ],
              },
            },
          ],
          Version: 2012-10-17,
        },
        PolicyName: workloadCodePipelineRoleDefaultPolicyE4529485,
        Roles: [
          {
            Ref: workloadCodePipelineRole40DCE8D3,
          },
        ],
      },
      Type: AWS::IAM::Policy,
    },
    workloadCodePipelineSourcervermanslnslsaasacceleratorCodePipelineActionRoleCA12EEFB: {
      Properties: {
        AssumeRolePolicyDocument: {
          Statement: [
            {
              Action: sts:AssumeRole,
              Effect: Allow,
              Principal: {
                AWS: {
                  Fn::Join: [
                    ,
                    [
                      arn:,
                      {
                        Ref: AWS::Partition,
                      },
                      :iam::,
                      {
                        Ref: AWS::AccountId,
                      },
                      :root,
                    ],
                  ],
                },
              },
            },
          ],
          Version: 2012-10-17,
        },
      },
      Type: AWS::IAM::Role,
    },
    workloadCodePipelineSourcervermanslnslsaasacceleratorCodePipelineActionRoleDefaultPolicy30252708: {
      Properties: {
        PolicyDocument: {
          Statement: [
            {
              Action: codestar-connections:UseConnection,
              Effect: Allow,
              Resource: arn:aws:codestar-connections:ap-south-1:415505189627:connection/UUID,
            },
            {
              Action: [
                s3:GetObject*,
                s3:GetBucket*,
                s3:List*,
                s3:DeleteObject*,
                s3:PutObject,
                s3:PutObjectLegalHold,
                s3:PutObjectRetention,
                s3:PutObjectTagging,
                s3:PutObjectVersionTagging,
                s3:Abort*,
              ],
              Effect: Allow,
              Resource: [
                {
                  Fn::Join: [
                    ,
                    [
                      arn:,
                      {
                        Ref: AWS::Partition,
                      },
                      :s3:::,
                      {
                        Fn::ImportValue: toolchainBucket,
                      },
                    ],
                  ],
                },
                {
                  Fn::Join: [
                    ,
                    [
                      arn:,
                      {
                        Ref: AWS::Partition,
                      },
                      :s3:::,
                      {
                        Fn::ImportValue: toolchainBucket,
                      },
                      /*,
                    ],
                  ],
                },
              ],
            },
            {
              Action: [
                s3:PutObjectAcl,
                s3:PutObjectVersionAcl,
              ],
              Effect: Allow,
              Resource: {
                Fn::Join: [
                  ,
                  [
                    arn:,
                    {
                      Ref: AWS::Partition,
                    },
                    :s3:::,
                    {
                      Fn::ImportValue: toolchainBucket,
                    },
                    /*,
                  ],
                ],
              },
            },
          ],
          Version: 2012-10-17,
        },
        PolicyName: workloadCodePipelineSourcervermanslnslsaasacceleratorCodePipelineActionRoleDefaultPolicy30252708,
        Roles: [
          {
            Ref: workloadCodePipelineSourcervermanslnslsaasacceleratorCodePipelineActionRoleCA12EEFB,
          },
        ],
      },
      Type: AWS::IAM::Policy,
    },
  },
  Rules: {
    CheckBootstrapVersion: {
      Assertions: [
        {
          Assert: {
            Fn::Not: [
              {
                Fn::Contains: [
                  [
                    1,
                    2,
                    3,
                    4,
                    5,
                  ],
                  {
                    Ref: BootstrapVersion,
                  },
                ],
              },
            ],
          },
          AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.,
        },
      ],
    },
  },
}
`;

exports[`Workload POOL Stack 1`] = `
{
  Parameters: {
    BootstrapVersion: {
      Default: /cdk-bootstrap/hnb659fds/version,
      Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip],
      Type: AWS::SSM::Parameter::Value<String>,
    },
  },
  Resources: {
    workloadCodeBuildActionRole6C3D131A: {
      Properties: {
        AssumeRolePolicyDocument: {
          Statement: [
            {
              Action: sts:AssumeRole,
              Condition: {
                Bool: {
                  aws:ViaAWSService: codepipeline.amazonaws.com,
                },
              },
              Effect: Allow,
              Principal: {
                AWS: {
                  Fn::Join: [
                    ,
                    [
                      arn:,
                      {
                        Ref: AWS::Partition,
                      },
                      :iam::,
                      {
                        Ref: AWS::AccountId,
                      },
                      :root,
                    ],
                  ],
                },
              },
            },
          ],
          Version: 2012-10-17,
        },
      },
      Type: AWS::IAM::Role,
    },
    workloadCodeBuildActionRoleDefaultPolicyA8B93142: {
      Properties: {
        PolicyDocument: {
          Statement: [
            {
              Action: [
                codebuild:BatchGetBuilds,
                codebuild:StartBuild,
                codebuild:StopBuild,
              ],
              Effect: Allow,
              Resource: {
                Fn::GetAtt: [
                  workloadCodePipelineBuildSynthCdkBuildProjectCE5FD61B,
                  Arn,
                ],
              },
            },
          ],
          Version: 2012-10-17,
        },
        PolicyName: workloadCodeBuildActionRoleDefaultPolicyA8B93142,
        Roles: [
          {
            Ref: workloadCodeBuildActionRole6C3D131A,
          },
        ],
      },
      Type: AWS::IAM::Policy,
    },
    workloadCodePipeline1D826696: {
      DependsOn: [
        workloadCodePipelineRoleDefaultPolicyE4529485,
        workloadCodePipelineRole40DCE8D3,
      ],
      Properties: {
        ArtifactStore: {
          Location: {
            Fn::ImportValue: toolchainBucket,
          },
          Type: S3,
        },
        Name: workload,
        RestartExecutionOnUpdate: false,
        RoleArn: {
          Fn::GetAtt: [
            workloadCodePipelineRole40DCE8D3,
            Arn,
          ],
        },
        Stages: [
          {
            Actions: [
              {
                ActionTypeId: {
                  Category: Source,
                  Owner: AWS,
                  Provider: CodeStarSourceConnection,
                  Version: 1,
                },
                Configuration: {
                  BranchName: main,
                  ConnectionArn: arn:aws:codestar-connections:ap-south-1:415505189627:connection/UUID,
                  DetectChanges: false,
                  FullRepositoryId: rverma-nsl/nsl-saas-accelerator,
                },
                Name: rverma-nsl_nsl-saas-accelerator,
                OutputArtifacts: [
                  {
                    Name: rverma_nsl_nsl_saas_accelerator_Source,
                  },
                ],
                RoleArn: {
                  Fn::GetAtt: [
                    workloadCodePipelineSourcervermanslnslsaasacceleratorCodePipelineActionRoleCA12EEFB,
                    Arn,
                  ],
                },
                RunOrder: 1,
              },
            ],
            Name: Source,
          },
          {
            Actions: [
              {
                ActionTypeId: {
                  Category: Build,
                  Owner: AWS,
                  Provider: CodeBuild,
                  Version: 1,
                },
                Configuration: {
                  ProjectName: {
                    Ref: workloadCodePipelineBuildSynthCdkBuildProjectCE5FD61B,
                  },
                },
                InputArtifacts: [
                  {
                    Name: rverma_nsl_nsl_saas_accelerator_Source,
                  },
                ],
                Name: Synth,
                OutputArtifacts: [
                  {
                    Name: Synth_Output,
                  },
                ],
                RoleArn: {
                  Fn::GetAtt: [
                    workloadCodeBuildActionRole6C3D131A,
                    Arn,
                  ],
                },
                RunOrder: 1,
              },
            ],
            Name: Build,
          },
          {
            Actions: [
              {
                ActionTypeId: {
                  Category: Deploy,
                  Owner: AWS,
                  Provider: CloudFormation,
                  Version: 1,
                },
                Configuration: {
                  ActionMode: CHANGE_SET_REPLACE,
                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND,
                  ChangeSetName: PipelineChange,
                  RoleArn: {
                    Fn::Join: [
                      ,
                      [
                        arn:,
                        {
                          Ref: AWS::Partition,
                        },
                        :iam::,
                        {
                          Ref: AWS::AccountId,
                        },
                        :role/cdk-hnb659fds-cfn-exec-role-,
                        {
                          Ref: AWS::AccountId,
                        },
                        -ap-south-1,
                      ],
                    ],
                  },
                  StackName: Namespace-NslApplication,
                  TemplatePath: Synth_Output::assembly-workload-workload-Namespace/workloadNamespaceNslApplicationFA3F20EB.GREEDY_JSON,
                },
                InputArtifacts: [
                  {
                    Name: Synth_Output,
                  },
                ],
                Name: Prepare,
                RoleArn: {
                  Fn::Join: [
                    ,
                    [
                      arn:,
                      {
                        Ref: AWS::Partition,
                      },
                      :iam::,
                      {
                        Ref: AWS::AccountId,
                      },
                      :role/cdk-hnb659fds-deploy-role-,
                      {
                        Ref: AWS::AccountId,
                      },
                      -ap-south-1,
                    ],
                  ],
                },
                RunOrder: 1,
              },
              {
                ActionTypeId: {
                  Category: Deploy,
                  Owner: AWS,
                  Provider: CloudFormation,
                  Version: 1,
                },
                Configuration: {
                  ActionMode: CHANGE_SET_EXECUTE,
                  ChangeSetName: PipelineChange,
                  StackName: Namespace-NslApplication,
                },
                Name: Deploy,
                RoleArn: {
                  Fn::Join: [
                    ,
                    [
                      arn:,
                      {
                        Ref: AWS::Partition,
                      },
                      :iam::,
                      {
                        Ref: AWS::AccountId,
                      },
                      :role/cdk-hnb659fds-deploy-role-,
                      {
                        Ref: AWS::AccountId,
                      },
                      -ap-south-1,
                    ],
                  ],
                },
                RunOrder: 2,
              },
            ],
            Name: Namespace,
          },
        ],
      },
      Type: AWS::CodePipeline::Pipeline,
    },
    workloadCodePipelineBuildSynthCdkBuildProjectCE5FD61B: {
      Properties: {
        Artifacts: {
          Type: CODEPIPELINE,
        },
        Cache: {
          Location: {
            Fn::Join: [
              /,
              [
                {
                  Fn::ImportValue: cdkCacheBucket,
                },
                {
                  Ref: AWS::NoValue,
                },
              ],
            ],
          },
          Type: S3,
        },
        Description: Pipeline step workload/CodePipeline/Build/Synth,
        EncryptionKey: alias/aws/s3,
        Environment: {
          ComputeType: BUILD_GENERAL1_SMALL,
          Image: aws/codebuild/amazonlinux2-aarch64-standard:3.0,
          ImagePullCredentialsType: CODEBUILD,
          PrivilegedMode: false,
          Type: ARM_CONTAINER,
        },
        ServiceRole: {
          Fn::GetAtt: [
            workloadCodePipelineBuildSynthCdkBuildProjectRole11AA1585,
            Arn,
          ],
        },
        Source: {
          BuildSpec: {
  "cache": {
    "paths": [
      ".yarn/cache/**/*",
      "node_modules/**/*"
    ]
  },
  "version": "0.2",
  "phases": {
    "install": {
      "commands": [
        "n 18",
        "corepack enable",
        "corepack prepare yarn@3.5.1 --activate",
        "yarn set version 3.5.1",
        "yarn install --immutable"
      ]
    },
    "build": {
      "commands": [
        "./.yarn/releases/yarn-3.5.1.cjs install --immutable",
        "./.yarn/releases/yarn-3.5.1.cjs cdk synth -q --verbose -y  -c tenant_id=demo -c deployment_tier=small     -c deployment_type=pool -c deployment_id=dev-001 -c component_account=undefined -c component_region=ap-south-1"
      ]
    }
  },
  "artifacts": {
    "base-directory": "cdk.out",
    "files": [
      "**/*"
    ]
  }
},
          Type: CODEPIPELINE,
        },
      },
      Type: AWS::CodeBuild::Project,
    },
    workloadCodePipelineBuildSynthCdkBuildProjectRole11AA1585: {
      Properties: {
        AssumeRolePolicyDocument: {
          Statement: [
            {
              Action: sts:AssumeRole,
              Effect: Allow,
              Principal: {
                Service: codebuild.amazonaws.com,
              },
            },
          ],
          Version: 2012-10-17,
        },
      },
      Type: AWS::IAM::Role,
    },
    workloadCodePipelineBuildSynthCdkBuildProjectRoleDefaultPolicy2C20BD9F: {
      Properties: {
        PolicyDocument: {
          Statement: [
            {
              Action: [
                s3:GetObject*,
                s3:GetBucket*,
                s3:List*,
                s3:DeleteObject*,
                s3:PutObject,
                s3:PutObjectLegalHold,
                s3:PutObjectRetention,
                s3:PutObjectTagging,
                s3:PutObjectVersionTagging,
                s3:Abort*,
              ],
              Effect: Allow,
              Resource: [
                {
                  Fn::Join: [
                    ,
                    [
                      arn:,
                      {
                        Ref: AWS::Partition,
                      },
                      :s3:::,
                      {
                        Fn::ImportValue: cdkCacheBucket,
                      },
                    ],
                  ],
                },
                {
                  Fn::Join: [
                    ,
                    [
                      arn:,
                      {
                        Ref: AWS::Partition,
                      },
                      :s3:::,
                      {
                        Fn::ImportValue: cdkCacheBucket,
                      },
                      /*,
                    ],
                  ],
                },
              ],
            },
            {
              Action: [
                logs:CreateLogGroup,
                logs:CreateLogStream,
                logs:PutLogEvents,
              ],
              Effect: Allow,
              Resource: [
                {
                  Fn::Join: [
                    ,
                    [
                      arn:,
                      {
                        Ref: AWS::Partition,
                      },
                      :logs:ap-south-1:,
                      {
                        Ref: AWS::AccountId,
                      },
                      :log-group:/aws/codebuild/,
                      {
                        Ref: workloadCodePipelineBuildSynthCdkBuildProjectCE5FD61B,
                      },
                    ],
                  ],
                },
                {
                  Fn::Join: [
                    ,
                    [
                      arn:,
                      {
                        Ref: AWS::Partition,
                      },
                      :logs:ap-south-1:,
                      {
                        Ref: AWS::AccountId,
                      },
                      :log-group:/aws/codebuild/,
                      {
                        Ref: workloadCodePipelineBuildSynthCdkBuildProjectCE5FD61B,
                      },
                      :*,
                    ],
                  ],
                },
              ],
            },
            {
              Action: [
                codebuild:CreateReportGroup,
                codebuild:CreateReport,
                codebuild:UpdateReport,
                codebuild:BatchPutTestCases,
                codebuild:BatchPutCodeCoverages,
              ],
              Effect: Allow,
              Resource: {
                Fn::Join: [
                  ,
                  [
                    arn:,
                    {
                      Ref: AWS::Partition,
                    },
                    :codebuild:ap-south-1:,
                    {
                      Ref: AWS::AccountId,
                    },
                    :report-group/,
                    {
                      Ref: workloadCodePipelineBuildSynthCdkBuildProjectCE5FD61B,
                    },
                    -*,
                  ],
                ],
              },
            },
            {
              Action: [
                s3:GetObject*,
                s3:GetBucket*,
                s3:List*,
                s3:DeleteObject*,
                s3:PutObject,
                s3:PutObjectLegalHold,
                s3:PutObjectRetention,
                s3:PutObjectTagging,
                s3:PutObjectVersionTagging,
                s3:Abort*,
              ],
              Effect: Allow,
              Resource: [
                {
                  Fn::Join: [
                    ,
                    [
                      arn:,
                      {
                        Ref: AWS::Partition,
                      },
                      :s3:::,
                      {
                        Fn::ImportValue: toolchainBucket,
                      },
                    ],
                  ],
                },
                {
                  Fn::Join: [
                    ,
                    [
                      arn:,
                      {
                        Ref: AWS::Partition,
                      },
                      :s3:::,
                      {
                        Fn::ImportValue: toolchainBucket,
                      },
                      /*,
                    ],
                  ],
                },
              ],
            },
          ],
          Version: 2012-10-17,
        },
        PolicyName: workloadCodePipelineBuildSynthCdkBuildProjectRoleDefaultPolicy2C20BD9F,
        Roles: [
          {
            Ref: workloadCodePipelineBuildSynthCdkBuildProjectRole11AA1585,
          },
        ],
      },
      Type: AWS::IAM::Policy,
    },
    workloadCodePipelineRole40DCE8D3: {
      Properties: {
        AssumeRolePolicyDocument: {
          Statement: [
            {
              Action: sts:AssumeRole,
              Effect: Allow,
              Principal: {
                Service: codepipeline.amazonaws.com,
              },
            },
          ],
          Version: 2012-10-17,
        },
      },
      Type: AWS::IAM::Role,
    },
    workloadCodePipelineRoleDefaultPolicyE4529485: {
      Properties: {
        PolicyDocument: {
          Statement: [
            {
              Action: [
                s3:GetObject*,
                s3:GetBucket*,
                s3:List*,
                s3:DeleteObject*,
                s3:PutObject,
                s3:PutObjectLegalHold,
                s3:PutObjectRetention,
                s3:PutObjectTagging,
                s3:PutObjectVersionTagging,
                s3:Abort*,
              ],
              Effect: Allow,
              Resource: [
                {
                  Fn::Join: [
                    ,
                    [
                      arn:,
                      {
                        Ref: AWS::Partition,
                      },
                      :s3:::,
                      {
                        Fn::ImportValue: toolchainBucket,
                      },
                    ],
                  ],
                },
                {
                  Fn::Join: [
                    ,
                    [
                      arn:,
                      {
                        Ref: AWS::Partition,
                      },
                      :s3:::,
                      {
                        Fn::ImportValue: toolchainBucket,
                      },
                      /*,
                    ],
                  ],
                },
              ],
            },
            {
              Action: sts:AssumeRole,
              Effect: Allow,
              Resource: {
                Fn::GetAtt: [
                  workloadCodePipelineSourcervermanslnslsaasacceleratorCodePipelineActionRoleCA12EEFB,
                  Arn,
                ],
              },
            },
            {
              Action: sts:AssumeRole,
              Effect: Allow,
              Resource: {
                Fn::GetAtt: [
                  workloadCodeBuildActionRole6C3D131A,
                  Arn,
                ],
              },
            },
            {
              Action: sts:AssumeRole,
              Effect: Allow,
              Resource: {
                Fn::Join: [
                  ,
                  [
                    arn:,
                    {
                      Ref: AWS::Partition,
                    },
                    :iam::,
                    {
                      Ref: AWS::AccountId,
                    },
                    :role/cdk-hnb659fds-deploy-role-,
                    {
                      Ref: AWS::AccountId,
                    },
                    -ap-south-1,
                  ],
                ],
              },
            },
          ],
          Version: 2012-10-17,
        },
        PolicyName: workloadCodePipelineRoleDefaultPolicyE4529485,
        Roles: [
          {
            Ref: workloadCodePipelineRole40DCE8D3,
          },
        ],
      },
      Type: AWS::IAM::Policy,
    },
    workloadCodePipelineSourcervermanslnslsaasacceleratorCodePipelineActionRoleCA12EEFB: {
      Properties: {
        AssumeRolePolicyDocument: {
          Statement: [
            {
              Action: sts:AssumeRole,
              Effect: Allow,
              Principal: {
                AWS: {
                  Fn::Join: [
                    ,
                    [
                      arn:,
                      {
                        Ref: AWS::Partition,
                      },
                      :iam::,
                      {
                        Ref: AWS::AccountId,
                      },
                      :root,
                    ],
                  ],
                },
              },
            },
          ],
          Version: 2012-10-17,
        },
      },
      Type: AWS::IAM::Role,
    },
    workloadCodePipelineSourcervermanslnslsaasacceleratorCodePipelineActionRoleDefaultPolicy30252708: {
      Properties: {
        PolicyDocument: {
          Statement: [
            {
              Action: codestar-connections:UseConnection,
              Effect: Allow,
              Resource: arn:aws:codestar-connections:ap-south-1:415505189627:connection/UUID,
            },
            {
              Action: [
                s3:GetObject*,
                s3:GetBucket*,
                s3:List*,
                s3:DeleteObject*,
                s3:PutObject,
                s3:PutObjectLegalHold,
                s3:PutObjectRetention,
                s3:PutObjectTagging,
                s3:PutObjectVersionTagging,
                s3:Abort*,
              ],
              Effect: Allow,
              Resource: [
                {
                  Fn::Join: [
                    ,
                    [
                      arn:,
                      {
                        Ref: AWS::Partition,
                      },
                      :s3:::,
                      {
                        Fn::ImportValue: toolchainBucket,
                      },
                    ],
                  ],
                },
                {
                  Fn::Join: [
                    ,
                    [
                      arn:,
                      {
                        Ref: AWS::Partition,
                      },
                      :s3:::,
                      {
                        Fn::ImportValue: toolchainBucket,
                      },
                      /*,
                    ],
                  ],
                },
              ],
            },
            {
              Action: [
                s3:PutObjectAcl,
                s3:PutObjectVersionAcl,
              ],
              Effect: Allow,
              Resource: {
                Fn::Join: [
                  ,
                  [
                    arn:,
                    {
                      Ref: AWS::Partition,
                    },
                    :s3:::,
                    {
                      Fn::ImportValue: toolchainBucket,
                    },
                    /*,
                  ],
                ],
              },
            },
          ],
          Version: 2012-10-17,
        },
        PolicyName: workloadCodePipelineSourcervermanslnslsaasacceleratorCodePipelineActionRoleDefaultPolicy30252708,
        Roles: [
          {
            Ref: workloadCodePipelineSourcervermanslnslsaasacceleratorCodePipelineActionRoleCA12EEFB,
          },
        ],
      },
      Type: AWS::IAM::Policy,
    },
  },
  Rules: {
    CheckBootstrapVersion: {
      Assertions: [
        {
          Assert: {
            Fn::Not: [
              {
                Fn::Contains: [
                  [
                    1,
                    2,
                    3,
                    4,
                    5,
                  ],
                  {
                    Ref: BootstrapVersion,
                  },
                ],
              },
            ],
          },
          AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.,
        },
      ],
    },
  },
}
`;

exports[`Workload SILO Stack 1`] = `
{
  Parameters: {
    BootstrapVersion: {
      Default: /cdk-bootstrap/hnb659fds/version,
      Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip],
      Type: AWS::SSM::Parameter::Value<String>,
    },
  },
  Resources: {
    workloadAssetsFileAsset10ADDA3900: {
      Properties: {
        Artifacts: {
          Type: CODEPIPELINE,
        },
        Cache: {
          Type: NO_CACHE,
        },
        Description: Pipeline step workload/CodePipeline/Assets/FileAsset10,
        EncryptionKey: alias/aws/s3,
        Environment: {
          ComputeType: BUILD_GENERAL1_SMALL,
          Image: aws/codebuild/amazonlinux2-aarch64-standard:3.0,
          ImagePullCredentialsType: CODEBUILD,
          PrivilegedMode: false,
          Type: ARM_CONTAINER,
        },
        ServiceRole: {
          Fn::GetAtt: [
            workloadAssetsFileRoleF9D3DB43,
            Arn,
          ],
        },
        Source: {
          BuildSpec: {
  "version": "0.2",
  "phases": {
    "install": {
      "commands": [
        "npm install -g cdk-assets@2.76.0"
      ]
    },
    "build": {
      "commands": [
        "cdk-assets --path \\"assembly-workload-workload-silo-app/workloadsiloappblueprintsiloapp3CF5334E.GREEDY_JSON\\" --verbose publish \\"ASSET_HASH_64:current_account-ap-south-1\\""
      ]
    }
  }
},
          Type: CODEPIPELINE,
        },
      },
      Type: AWS::CodeBuild::Project,
    },
    workloadAssetsFileAsset1196430E2E: {
      Properties: {
        Artifacts: {
          Type: CODEPIPELINE,
        },
        Cache: {
          Type: NO_CACHE,
        },
        Description: Pipeline step workload/CodePipeline/Assets/FileAsset11,
        EncryptionKey: alias/aws/s3,
        Environment: {
          ComputeType: BUILD_GENERAL1_SMALL,
          Image: aws/codebuild/amazonlinux2-aarch64-standard:3.0,
          ImagePullCredentialsType: CODEBUILD,
          PrivilegedMode: false,
          Type: ARM_CONTAINER,
        },
        ServiceRole: {
          Fn::GetAtt: [
            workloadAssetsFileRoleF9D3DB43,
            Arn,
          ],
        },
        Source: {
          BuildSpec: {
  "version": "0.2",
  "phases": {
    "install": {
      "commands": [
        "npm install -g cdk-assets@2.76.0"
      ]
    },
    "build": {
      "commands": [
        "cdk-assets --path \\"assembly-workload-workload-silo-app/workloadsiloappblueprintsiloapp3CF5334E.GREEDY_JSON\\" --verbose publish \\"ASSET_HASH_64:current_account-ap-south-1\\""
      ]
    }
  }
},
          Type: CODEPIPELINE,
        },
      },
      Type: AWS::CodeBuild::Project,
    },
    workloadAssetsFileAsset1376C31D3: {
      Properties: {
        Artifacts: {
          Type: CODEPIPELINE,
        },
        Cache: {
          Type: NO_CACHE,
        },
        Description: Pipeline step workload/CodePipeline/Assets/FileAsset1,
        EncryptionKey: alias/aws/s3,
        Environment: {
          ComputeType: BUILD_GENERAL1_SMALL,
          Image: aws/codebuild/amazonlinux2-aarch64-standard:3.0,
          ImagePullCredentialsType: CODEBUILD,
          PrivilegedMode: false,
          Type: ARM_CONTAINER,
        },
        ServiceRole: {
          Fn::GetAtt: [
            workloadAssetsFileRoleF9D3DB43,
            Arn,
          ],
        },
        Source: {
          BuildSpec: {
  "version": "0.2",
  "phases": {
    "install": {
      "commands": [
        "npm install -g cdk-assets@2.76.0"
      ]
    },
    "build": {
      "commands": [
        "cdk-assets --path \\"assembly-workload-workload-silo-app/workloadsiloappblueprintsiloapp3CF5334E.GREEDY_JSON\\" --verbose publish \\"ASSET_HASH_64:current_account-ap-south-1\\""
      ]
    }
  }
},
          Type: CODEPIPELINE,
        },
      },
      Type: AWS::CodeBuild::Project,
    },
    workloadAssetsFileAsset2BFC1CD83: {
      Properties: {
        Artifacts: {
          Type: CODEPIPELINE,
        },
        Cache: {
          Type: NO_CACHE,
        },
        Description: Pipeline step workload/CodePipeline/Assets/FileAsset2,
        EncryptionKey: alias/aws/s3,
        Environment: {
          ComputeType: BUILD_GENERAL1_SMALL,
          Image: aws/codebuild/amazonlinux2-aarch64-standard:3.0,
          ImagePullCredentialsType: CODEBUILD,
          PrivilegedMode: false,
          Type: ARM_CONTAINER,
        },
        ServiceRole: {
          Fn::GetAtt: [
            workloadAssetsFileRoleF9D3DB43,
            Arn,
          ],
        },
        Source: {
          BuildSpec: {
  "version": "0.2",
  "phases": {
    "install": {
      "commands": [
        "npm install -g cdk-assets@2.76.0"
      ]
    },
    "build": {
      "commands": [
        "cdk-assets --path \\"assembly-workload-workload-silo-app/workloadsiloappblueprintsiloapp3CF5334E.GREEDY_JSON\\" --verbose publish \\"ASSET_HASH_64:current_account-ap-south-1\\""
      ]
    }
  }
},
          Type: CODEPIPELINE,
        },
      },
      Type: AWS::CodeBuild::Project,
    },
    workloadAssetsFileAsset3D01038B4: {
      Properties: {
        Artifacts: {
          Type: CODEPIPELINE,
        },
        Cache: {
          Type: NO_CACHE,
        },
        Description: Pipeline step workload/CodePipeline/Assets/FileAsset3,
        EncryptionKey: alias/aws/s3,
        Environment: {
          ComputeType: BUILD_GENERAL1_SMALL,
          Image: aws/codebuild/amazonlinux2-aarch64-standard:3.0,
          ImagePullCredentialsType: CODEBUILD,
          PrivilegedMode: false,
          Type: ARM_CONTAINER,
        },
        ServiceRole: {
          Fn::GetAtt: [
            workloadAssetsFileRoleF9D3DB43,
            Arn,
          ],
        },
        Source: {
          BuildSpec: {
  "version": "0.2",
  "phases": {
    "install": {
      "commands": [
        "npm install -g cdk-assets@2.76.0"
      ]
    },
    "build": {
      "commands": [
        "cdk-assets --path \\"assembly-workload-workload-silo-app/workloadsiloappblueprintsiloapp3CF5334E.GREEDY_JSON\\" --verbose publish \\"ASSET_HASH_64:current_account-ap-south-1\\""
      ]
    }
  }
},
          Type: CODEPIPELINE,
        },
      },
      Type: AWS::CodeBuild::Project,
    },
    workloadAssetsFileAsset420AE620E: {
      Properties: {
        Artifacts: {
          Type: CODEPIPELINE,
        },
        Cache: {
          Type: NO_CACHE,
        },
        Description: Pipeline step workload/CodePipeline/Assets/FileAsset4,
        EncryptionKey: alias/aws/s3,
        Environment: {
          ComputeType: BUILD_GENERAL1_SMALL,
          Image: aws/codebuild/amazonlinux2-aarch64-standard:3.0,
          ImagePullCredentialsType: CODEBUILD,
          PrivilegedMode: false,
          Type: ARM_CONTAINER,
        },
        ServiceRole: {
          Fn::GetAtt: [
            workloadAssetsFileRoleF9D3DB43,
            Arn,
          ],
        },
        Source: {
          BuildSpec: {
  "version": "0.2",
  "phases": {
    "install": {
      "commands": [
        "npm install -g cdk-assets@2.76.0"
      ]
    },
    "build": {
      "commands": [
        "cdk-assets --path \\"assembly-workload-workload-silo-app/workloadsiloappblueprintsiloapp3CF5334E.GREEDY_JSON\\" --verbose publish \\"ASSET_HASH_64:current_account-ap-south-1\\""
      ]
    }
  }
},
          Type: CODEPIPELINE,
        },
      },
      Type: AWS::CodeBuild::Project,
    },
    workloadAssetsFileAsset53FE3925A: {
      Properties: {
        Artifacts: {
          Type: CODEPIPELINE,
        },
        Cache: {
          Type: NO_CACHE,
        },
        Description: Pipeline step workload/CodePipeline/Assets/FileAsset5,
        EncryptionKey: alias/aws/s3,
        Environment: {
          ComputeType: BUILD_GENERAL1_SMALL,
          Image: aws/codebuild/amazonlinux2-aarch64-standard:3.0,
          ImagePullCredentialsType: CODEBUILD,
          PrivilegedMode: false,
          Type: ARM_CONTAINER,
        },
        ServiceRole: {
          Fn::GetAtt: [
            workloadAssetsFileRoleF9D3DB43,
            Arn,
          ],
        },
        Source: {
          BuildSpec: {
  "version": "0.2",
  "phases": {
    "install": {
      "commands": [
        "npm install -g cdk-assets@2.76.0"
      ]
    },
    "build": {
      "commands": [
        "cdk-assets --path \\"assembly-workload-workload-silo-app/workloadsiloappblueprintsiloapp3CF5334E.GREEDY_JSON\\" --verbose publish \\"ASSET_HASH_64:current_account-ap-south-1\\""
      ]
    }
  }
},
          Type: CODEPIPELINE,
        },
      },
      Type: AWS::CodeBuild::Project,
    },
    workloadAssetsFileAsset6BA9827AD: {
      Properties: {
        Artifacts: {
          Type: CODEPIPELINE,
        },
        Cache: {
          Type: NO_CACHE,
        },
        Description: Pipeline step workload/CodePipeline/Assets/FileAsset6,
        EncryptionKey: alias/aws/s3,
        Environment: {
          ComputeType: BUILD_GENERAL1_SMALL,
          Image: aws/codebuild/amazonlinux2-aarch64-standard:3.0,
          ImagePullCredentialsType: CODEBUILD,
          PrivilegedMode: false,
          Type: ARM_CONTAINER,
        },
        ServiceRole: {
          Fn::GetAtt: [
            workloadAssetsFileRoleF9D3DB43,
            Arn,
          ],
        },
        Source: {
          BuildSpec: {
  "version": "0.2",
  "phases": {
    "install": {
      "commands": [
        "npm install -g cdk-assets@2.76.0"
      ]
    },
    "build": {
      "commands": [
        "cdk-assets --path \\"assembly-workload-workload-silo-app/workloadsiloappblueprintsiloapp3CF5334E.GREEDY_JSON\\" --verbose publish \\"ASSET_HASH_64:current_account-ap-south-1\\""
      ]
    }
  }
},
          Type: CODEPIPELINE,
        },
      },
      Type: AWS::CodeBuild::Project,
    },
    workloadAssetsFileAsset77B1A9064: {
      Properties: {
        Artifacts: {
          Type: CODEPIPELINE,
        },
        Cache: {
          Type: NO_CACHE,
        },
        Description: Pipeline step workload/CodePipeline/Assets/FileAsset7,
        EncryptionKey: alias/aws/s3,
        Environment: {
          ComputeType: BUILD_GENERAL1_SMALL,
          Image: aws/codebuild/amazonlinux2-aarch64-standard:3.0,
          ImagePullCredentialsType: CODEBUILD,
          PrivilegedMode: false,
          Type: ARM_CONTAINER,
        },
        ServiceRole: {
          Fn::GetAtt: [
            workloadAssetsFileRoleF9D3DB43,
            Arn,
          ],
        },
        Source: {
          BuildSpec: {
  "version": "0.2",
  "phases": {
    "install": {
      "commands": [
        "npm install -g cdk-assets@2.76.0"
      ]
    },
    "build": {
      "commands": [
        "cdk-assets --path \\"assembly-workload-workload-silo-app/workloadsiloappblueprintsiloapp3CF5334E.GREEDY_JSON\\" --verbose publish \\"ASSET_HASH_64:current_account-ap-south-1\\""
      ]
    }
  }
},
          Type: CODEPIPELINE,
        },
      },
      Type: AWS::CodeBuild::Project,
    },
    workloadAssetsFileAsset899CF498A: {
      Properties: {
        Artifacts: {
          Type: CODEPIPELINE,
        },
        Cache: {
          Type: NO_CACHE,
        },
        Description: Pipeline step workload/CodePipeline/Assets/FileAsset8,
        EncryptionKey: alias/aws/s3,
        Environment: {
          ComputeType: BUILD_GENERAL1_SMALL,
          Image: aws/codebuild/amazonlinux2-aarch64-standard:3.0,
          ImagePullCredentialsType: CODEBUILD,
          PrivilegedMode: false,
          Type: ARM_CONTAINER,
        },
        ServiceRole: {
          Fn::GetAtt: [
            workloadAssetsFileRoleF9D3DB43,
            Arn,
          ],
        },
        Source: {
          BuildSpec: {
  "version": "0.2",
  "phases": {
    "install": {
      "commands": [
        "npm install -g cdk-assets@2.76.0"
      ]
    },
    "build": {
      "commands": [
        "cdk-assets --path \\"assembly-workload-workload-silo-app/workloadsiloappblueprintsiloapp3CF5334E.GREEDY_JSON\\" --verbose publish \\"ASSET_HASH_64:current_account-ap-south-1\\""
      ]
    }
  }
},
          Type: CODEPIPELINE,
        },
      },
      Type: AWS::CodeBuild::Project,
    },
    workloadAssetsFileAsset9B17A13C2: {
      Properties: {
        Artifacts: {
          Type: CODEPIPELINE,
        },
        Cache: {
          Type: NO_CACHE,
        },
        Description: Pipeline step workload/CodePipeline/Assets/FileAsset9,
        EncryptionKey: alias/aws/s3,
        Environment: {
          ComputeType: BUILD_GENERAL1_SMALL,
          Image: aws/codebuild/amazonlinux2-aarch64-standard:3.0,
          ImagePullCredentialsType: CODEBUILD,
          PrivilegedMode: false,
          Type: ARM_CONTAINER,
        },
        ServiceRole: {
          Fn::GetAtt: [
            workloadAssetsFileRoleF9D3DB43,
            Arn,
          ],
        },
        Source: {
          BuildSpec: {
  "version": "0.2",
  "phases": {
    "install": {
      "commands": [
        "npm install -g cdk-assets@2.76.0"
      ]
    },
    "build": {
      "commands": [
        "cdk-assets --path \\"assembly-workload-workload-silo-app/workloadsiloappblueprintsiloapp3CF5334E.GREEDY_JSON\\" --verbose publish \\"ASSET_HASH_64:current_account-ap-south-1\\""
      ]
    }
  }
},
          Type: CODEPIPELINE,
        },
      },
      Type: AWS::CodeBuild::Project,
    },
    workloadAssetsFileRoleDefaultPolicyBF836F94: {
      Properties: {
        PolicyDocument: {
          Statement: [
            {
              Action: [
                logs:CreateLogGroup,
                logs:CreateLogStream,
                logs:PutLogEvents,
              ],
              Effect: Allow,
              Resource: {
                Fn::Join: [
                  ,
                  [
                    arn:,
                    {
                      Ref: AWS::Partition,
                    },
                    :logs:ap-south-1:,
                    {
                      Ref: AWS::AccountId,
                    },
                    :log-group:/aws/codebuild/*,
                  ],
                ],
              },
            },
            {
              Action: [
                codebuild:CreateReportGroup,
                codebuild:CreateReport,
                codebuild:UpdateReport,
                codebuild:BatchPutTestCases,
                codebuild:BatchPutCodeCoverages,
              ],
              Effect: Allow,
              Resource: {
                Fn::Join: [
                  ,
                  [
                    arn:,
                    {
                      Ref: AWS::Partition,
                    },
                    :codebuild:ap-south-1:,
                    {
                      Ref: AWS::AccountId,
                    },
                    :report-group/*,
                  ],
                ],
              },
            },
            {
              Action: [
                codebuild:BatchGetBuilds,
                codebuild:StartBuild,
                codebuild:StopBuild,
              ],
              Effect: Allow,
              Resource: *,
            },
            {
              Action: sts:AssumeRole,
              Effect: Allow,
              Resource: {
                Fn::Sub: arn:\${AWS::Partition}:iam::\${AWS::AccountId}:role/cdk-hnb659fds-file-publishing-role-\${AWS::AccountId}-ap-south-1,
              },
            },
            {
              Action: [
                s3:GetObject*,
                s3:GetBucket*,
                s3:List*,
              ],
              Effect: Allow,
              Resource: [
                {
                  Fn::Join: [
                    ,
                    [
                      arn:,
                      {
                        Ref: AWS::Partition,
                      },
                      :s3:::,
                      {
                        Fn::ImportValue: toolchainBucket,
                      },
                    ],
                  ],
                },
                {
                  Fn::Join: [
                    ,
                    [
                      arn:,
                      {
                        Ref: AWS::Partition,
                      },
                      :s3:::,
                      {
                        Fn::ImportValue: toolchainBucket,
                      },
                      /*,
                    ],
                  ],
                },
              ],
            },
          ],
          Version: 2012-10-17,
        },
        PolicyName: workloadAssetsFileRoleDefaultPolicyBF836F94,
        Roles: [
          {
            Ref: workloadAssetsFileRoleF9D3DB43,
          },
        ],
      },
      Type: AWS::IAM::Policy,
    },
    workloadAssetsFileRoleF9D3DB43: {
      Properties: {
        AssumeRolePolicyDocument: {
          Statement: [
            {
              Action: sts:AssumeRole,
              Effect: Allow,
              Principal: {
                Service: codebuild.amazonaws.com,
              },
            },
            {
              Action: sts:AssumeRole,
              Effect: Allow,
              Principal: {
                AWS: {
                  Fn::Join: [
                    ,
                    [
                      arn:,
                      {
                        Ref: AWS::Partition,
                      },
                      :iam::,
                      {
                        Ref: AWS::AccountId,
                      },
                      :root,
                    ],
                  ],
                },
              },
            },
          ],
          Version: 2012-10-17,
        },
      },
      Type: AWS::IAM::Role,
    },
    workloadCodeBuildActionRole6C3D131A: {
      Properties: {
        AssumeRolePolicyDocument: {
          Statement: [
            {
              Action: sts:AssumeRole,
              Condition: {
                Bool: {
                  aws:ViaAWSService: codepipeline.amazonaws.com,
                },
              },
              Effect: Allow,
              Principal: {
                AWS: {
                  Fn::Join: [
                    ,
                    [
                      arn:,
                      {
                        Ref: AWS::Partition,
                      },
                      :iam::,
                      {
                        Ref: AWS::AccountId,
                      },
                      :root,
                    ],
                  ],
                },
              },
            },
          ],
          Version: 2012-10-17,
        },
      },
      Type: AWS::IAM::Role,
    },
    workloadCodeBuildActionRoleDefaultPolicyA8B93142: {
      Properties: {
        PolicyDocument: {
          Statement: [
            {
              Action: [
                codebuild:BatchGetBuilds,
                codebuild:StartBuild,
                codebuild:StopBuild,
              ],
              Effect: Allow,
              Resource: {
                Fn::GetAtt: [
                  workloadCodePipelineBuildSynthCdkBuildProjectCE5FD61B,
                  Arn,
                ],
              },
            },
            {
              Action: [
                codebuild:BatchGetBuilds,
                codebuild:StartBuild,
                codebuild:StopBuild,
              ],
              Effect: Allow,
              Resource: {
                Fn::GetAtt: [
                  workloadAssetsFileAsset1376C31D3,
                  Arn,
                ],
              },
            },
            {
              Action: [
                codebuild:BatchGetBuilds,
                codebuild:StartBuild,
                codebuild:StopBuild,
              ],
              Effect: Allow,
              Resource: {
                Fn::GetAtt: [
                  workloadAssetsFileAsset10ADDA3900,
                  Arn,
                ],
              },
            },
            {
              Action: [
                codebuild:BatchGetBuilds,
                codebuild:StartBuild,
                codebuild:StopBuild,
              ],
              Effect: Allow,
              Resource: {
                Fn::GetAtt: [
                  workloadAssetsFileAsset1196430E2E,
                  Arn,
                ],
              },
            },
            {
              Action: [
                codebuild:BatchGetBuilds,
                codebuild:StartBuild,
                codebuild:StopBuild,
              ],
              Effect: Allow,
              Resource: {
                Fn::GetAtt: [
                  workloadAssetsFileAsset2BFC1CD83,
                  Arn,
                ],
              },
            },
            {
              Action: [
                codebuild:BatchGetBuilds,
                codebuild:StartBuild,
                codebuild:StopBuild,
              ],
              Effect: Allow,
              Resource: {
                Fn::GetAtt: [
                  workloadAssetsFileAsset3D01038B4,
                  Arn,
                ],
              },
            },
            {
              Action: [
                codebuild:BatchGetBuilds,
                codebuild:StartBuild,
                codebuild:StopBuild,
              ],
              Effect: Allow,
              Resource: {
                Fn::GetAtt: [
                  workloadAssetsFileAsset420AE620E,
                  Arn,
                ],
              },
            },
            {
              Action: [
                codebuild:BatchGetBuilds,
                codebuild:StartBuild,
                codebuild:StopBuild,
              ],
              Effect: Allow,
              Resource: {
                Fn::GetAtt: [
                  workloadAssetsFileAsset53FE3925A,
                  Arn,
                ],
              },
            },
            {
              Action: [
                codebuild:BatchGetBuilds,
                codebuild:StartBuild,
                codebuild:StopBuild,
              ],
              Effect: Allow,
              Resource: {
                Fn::GetAtt: [
                  workloadAssetsFileAsset6BA9827AD,
                  Arn,
                ],
              },
            },
            {
              Action: [
                codebuild:BatchGetBuilds,
                codebuild:StartBuild,
                codebuild:StopBuild,
              ],
              Effect: Allow,
              Resource: {
                Fn::GetAtt: [
                  workloadAssetsFileAsset77B1A9064,
                  Arn,
                ],
              },
            },
            {
              Action: [
                codebuild:BatchGetBuilds,
                codebuild:StartBuild,
                codebuild:StopBuild,
              ],
              Effect: Allow,
              Resource: {
                Fn::GetAtt: [
                  workloadAssetsFileAsset899CF498A,
                  Arn,
                ],
              },
            },
            {
              Action: [
                codebuild:BatchGetBuilds,
                codebuild:StartBuild,
                codebuild:StopBuild,
              ],
              Effect: Allow,
              Resource: {
                Fn::GetAtt: [
                  workloadAssetsFileAsset9B17A13C2,
                  Arn,
                ],
              },
            },
          ],
          Version: 2012-10-17,
        },
        PolicyName: workloadCodeBuildActionRoleDefaultPolicyA8B93142,
        Roles: [
          {
            Ref: workloadCodeBuildActionRole6C3D131A,
          },
        ],
      },
      Type: AWS::IAM::Policy,
    },
    workloadCodePipeline1D826696: {
      DependsOn: [
        workloadCodePipelineRoleDefaultPolicyE4529485,
        workloadCodePipelineRole40DCE8D3,
      ],
      Properties: {
        ArtifactStore: {
          Location: {
            Fn::ImportValue: toolchainBucket,
          },
          Type: S3,
        },
        Name: workload,
        RestartExecutionOnUpdate: false,
        RoleArn: {
          Fn::GetAtt: [
            workloadCodePipelineRole40DCE8D3,
            Arn,
          ],
        },
        Stages: [
          {
            Actions: [
              {
                ActionTypeId: {
                  Category: Source,
                  Owner: AWS,
                  Provider: CodeStarSourceConnection,
                  Version: 1,
                },
                Configuration: {
                  BranchName: main,
                  ConnectionArn: arn:aws:codestar-connections:ap-south-1:415505189627:connection/UUID,
                  DetectChanges: false,
                  FullRepositoryId: rverma-nsl/nsl-saas-accelerator,
                },
                Name: rverma-nsl_nsl-saas-accelerator,
                OutputArtifacts: [
                  {
                    Name: rverma_nsl_nsl_saas_accelerator_Source,
                  },
                ],
                RoleArn: {
                  Fn::GetAtt: [
                    workloadCodePipelineSourcervermanslnslsaasacceleratorCodePipelineActionRoleCA12EEFB,
                    Arn,
                  ],
                },
                RunOrder: 1,
              },
            ],
            Name: Source,
          },
          {
            Actions: [
              {
                ActionTypeId: {
                  Category: Build,
                  Owner: AWS,
                  Provider: CodeBuild,
                  Version: 1,
                },
                Configuration: {
                  ProjectName: {
                    Ref: workloadCodePipelineBuildSynthCdkBuildProjectCE5FD61B,
                  },
                },
                InputArtifacts: [
                  {
                    Name: rverma_nsl_nsl_saas_accelerator_Source,
                  },
                ],
                Name: Synth,
                OutputArtifacts: [
                  {
                    Name: Synth_Output,
                  },
                ],
                RoleArn: {
                  Fn::GetAtt: [
                    workloadCodeBuildActionRole6C3D131A,
                    Arn,
                  ],
                },
                RunOrder: 1,
              },
            ],
            Name: Build,
          },
          {
            Actions: [
              {
                ActionTypeId: {
                  Category: Build,
                  Owner: AWS,
                  Provider: CodeBuild,
                  Version: 1,
                },
                Configuration: {
                  ProjectName: {
                    Ref: workloadAssetsFileAsset1376C31D3,
                  },
                },
                InputArtifacts: [
                  {
                    Name: Synth_Output,
                  },
                ],
                Name: FileAsset1,
                RoleArn: {
                  Fn::GetAtt: [
                    workloadCodeBuildActionRole6C3D131A,
                    Arn,
                  ],
                },
                RunOrder: 1,
              },
              {
                ActionTypeId: {
                  Category: Build,
                  Owner: AWS,
                  Provider: CodeBuild,
                  Version: 1,
                },
                Configuration: {
                  ProjectName: {
                    Ref: workloadAssetsFileAsset10ADDA3900,
                  },
                },
                InputArtifacts: [
                  {
                    Name: Synth_Output,
                  },
                ],
                Name: FileAsset10,
                RoleArn: {
                  Fn::GetAtt: [
                    workloadCodeBuildActionRole6C3D131A,
                    Arn,
                  ],
                },
                RunOrder: 1,
              },
              {
                ActionTypeId: {
                  Category: Build,
                  Owner: AWS,
                  Provider: CodeBuild,
                  Version: 1,
                },
                Configuration: {
                  ProjectName: {
                    Ref: workloadAssetsFileAsset1196430E2E,
                  },
                },
                InputArtifacts: [
                  {
                    Name: Synth_Output,
                  },
                ],
                Name: FileAsset11,
                RoleArn: {
                  Fn::GetAtt: [
                    workloadCodeBuildActionRole6C3D131A,
                    Arn,
                  ],
                },
                RunOrder: 1,
              },
              {
                ActionTypeId: {
                  Category: Build,
                  Owner: AWS,
                  Provider: CodeBuild,
                  Version: 1,
                },
                Configuration: {
                  ProjectName: {
                    Ref: workloadAssetsFileAsset2BFC1CD83,
                  },
                },
                InputArtifacts: [
                  {
                    Name: Synth_Output,
                  },
                ],
                Name: FileAsset2,
                RoleArn: {
                  Fn::GetAtt: [
                    workloadCodeBuildActionRole6C3D131A,
                    Arn,
                  ],
                },
                RunOrder: 1,
              },
              {
                ActionTypeId: {
                  Category: Build,
                  Owner: AWS,
                  Provider: CodeBuild,
                  Version: 1,
                },
                Configuration: {
                  ProjectName: {
                    Ref: workloadAssetsFileAsset3D01038B4,
                  },
                },
                InputArtifacts: [
                  {
                    Name: Synth_Output,
                  },
                ],
                Name: FileAsset3,
                RoleArn: {
                  Fn::GetAtt: [
                    workloadCodeBuildActionRole6C3D131A,
                    Arn,
                  ],
                },
                RunOrder: 1,
              },
              {
                ActionTypeId: {
                  Category: Build,
                  Owner: AWS,
                  Provider: CodeBuild,
                  Version: 1,
                },
                Configuration: {
                  ProjectName: {
                    Ref: workloadAssetsFileAsset420AE620E,
                  },
                },
                InputArtifacts: [
                  {
                    Name: Synth_Output,
                  },
                ],
                Name: FileAsset4,
                RoleArn: {
                  Fn::GetAtt: [
                    workloadCodeBuildActionRole6C3D131A,
                    Arn,
                  ],
                },
                RunOrder: 1,
              },
              {
                ActionTypeId: {
                  Category: Build,
                  Owner: AWS,
                  Provider: CodeBuild,
                  Version: 1,
                },
                Configuration: {
                  ProjectName: {
                    Ref: workloadAssetsFileAsset53FE3925A,
                  },
                },
                InputArtifacts: [
                  {
                    Name: Synth_Output,
                  },
                ],
                Name: FileAsset5,
                RoleArn: {
                  Fn::GetAtt: [
                    workloadCodeBuildActionRole6C3D131A,
                    Arn,
                  ],
                },
                RunOrder: 1,
              },
              {
                ActionTypeId: {
                  Category: Build,
                  Owner: AWS,
                  Provider: CodeBuild,
                  Version: 1,
                },
                Configuration: {
                  ProjectName: {
                    Ref: workloadAssetsFileAsset6BA9827AD,
                  },
                },
                InputArtifacts: [
                  {
                    Name: Synth_Output,
                  },
                ],
                Name: FileAsset6,
                RoleArn: {
                  Fn::GetAtt: [
                    workloadCodeBuildActionRole6C3D131A,
                    Arn,
                  ],
                },
                RunOrder: 1,
              },
              {
                ActionTypeId: {
                  Category: Build,
                  Owner: AWS,
                  Provider: CodeBuild,
                  Version: 1,
                },
                Configuration: {
                  ProjectName: {
                    Ref: workloadAssetsFileAsset77B1A9064,
                  },
                },
                InputArtifacts: [
                  {
                    Name: Synth_Output,
                  },
                ],
                Name: FileAsset7,
                RoleArn: {
                  Fn::GetAtt: [
                    workloadCodeBuildActionRole6C3D131A,
                    Arn,
                  ],
                },
                RunOrder: 1,
              },
              {
                ActionTypeId: {
                  Category: Build,
                  Owner: AWS,
                  Provider: CodeBuild,
                  Version: 1,
                },
                Configuration: {
                  ProjectName: {
                    Ref: workloadAssetsFileAsset899CF498A,
                  },
                },
                InputArtifacts: [
                  {
                    Name: Synth_Output,
                  },
                ],
                Name: FileAsset8,
                RoleArn: {
                  Fn::GetAtt: [
                    workloadCodeBuildActionRole6C3D131A,
                    Arn,
                  ],
                },
                RunOrder: 1,
              },
              {
                ActionTypeId: {
                  Category: Build,
                  Owner: AWS,
                  Provider: CodeBuild,
                  Version: 1,
                },
                Configuration: {
                  ProjectName: {
                    Ref: workloadAssetsFileAsset9B17A13C2,
                  },
                },
                InputArtifacts: [
                  {
                    Name: Synth_Output,
                  },
                ],
                Name: FileAsset9,
                RoleArn: {
                  Fn::GetAtt: [
                    workloadCodeBuildActionRole6C3D131A,
                    Arn,
                  ],
                },
                RunOrder: 1,
              },
            ],
            Name: Assets,
          },
          {
            Actions: [
              {
                ActionTypeId: {
                  Category: Deploy,
                  Owner: AWS,
                  Provider: CloudFormation,
                  Version: 1,
                },
                Configuration: {
                  ActionMode: CHANGE_SET_REPLACE,
                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND,
                  ChangeSetName: PipelineChange,
                  RoleArn: {
                    Fn::Join: [
                      ,
                      [
                        arn:,
                        {
                          Ref: AWS::Partition,
                        },
                        :iam::,
                        {
                          Ref: AWS::AccountId,
                        },
                        :role/cdk-hnb659fds-cfn-exec-role-,
                        {
                          Ref: AWS::AccountId,
                        },
                        -ap-south-1,
                      ],
                    ],
                  },
                  StackName: silo-app-blueprint-silo-app,
                  TemplatePath: Synth_Output::assembly-workload-workload-silo-app/workloadsiloappblueprintsiloapp3CF5334E.GREEDY_JSON,
                },
                InputArtifacts: [
                  {
                    Name: Synth_Output,
                  },
                ],
                Name: blueprint-silo-app.Prepare,
                RoleArn: {
                  Fn::Join: [
                    ,
                    [
                      arn:,
                      {
                        Ref: AWS::Partition,
                      },
                      :iam::,
                      {
                        Ref: AWS::AccountId,
                      },
                      :role/cdk-hnb659fds-deploy-role-,
                      {
                        Ref: AWS::AccountId,
                      },
                      -ap-south-1,
                    ],
                  ],
                },
                RunOrder: 1,
              },
              {
                ActionTypeId: {
                  Category: Deploy,
                  Owner: AWS,
                  Provider: CloudFormation,
                  Version: 1,
                },
                Configuration: {
                  ActionMode: CHANGE_SET_REPLACE,
                  Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND,
                  ChangeSetName: PipelineChange,
                  RoleArn: {
                    Fn::Join: [
                      ,
                      [
                        arn:,
                        {
                          Ref: AWS::Partition,
                        },
                        :iam::,
                        {
                          Ref: AWS::AccountId,
                        },
                        :role/cdk-hnb659fds-cfn-exec-role-,
                        {
                          Ref: AWS::AccountId,
                        },
                        -ap-south-1,
                      ],
                    ],
                  },
                  StackName: silo-app-gitops-eks,
                  TemplatePath: Synth_Output::assembly-workload-workload-silo-app/workloadsiloappgitopseksC3CB985D.GREEDY_JSON,
                },
                InputArtifacts: [
                  {
                    Name: Synth_Output,
                  },
                ],
                Name: gitops-eks.Prepare,
                RoleArn: {
                  Fn::Join: [
                    ,
                    [
                      arn:,
                      {
                        Ref: AWS::Partition,
                      },
                      :iam::,
                      {
                        Ref: AWS::AccountId,
                      },
                      :role/cdk-hnb659fds-deploy-role-,
                      {
                        Ref: AWS::AccountId,
                      },
                      -ap-south-1,
                    ],
                  ],
                },
                RunOrder: 1,
              },
              {
                ActionTypeId: {
                  Category: Deploy,
                  Owner: AWS,
                  Provider: CloudFormation,
                  Version: 1,
                },
                Configuration: {
                  ActionMode: CHANGE_SET_EXECUTE,
                  ChangeSetName: PipelineChange,
                  StackName: silo-app-blueprint-silo-app,
                },
                Name: blueprint-silo-app.Deploy,
                RoleArn: {
                  Fn::Join: [
                    ,
                    [
                      arn:,
                      {
                        Ref: AWS::Partition,
                      },
                      :iam::,
                      {
                        Ref: AWS::AccountId,
                      },
                      :role/cdk-hnb659fds-deploy-role-,
                      {
                        Ref: AWS::AccountId,
                      },
                      -ap-south-1,
                    ],
                  ],
                },
                RunOrder: 2,
              },
              {
                ActionTypeId: {
                  Category: Deploy,
                  Owner: AWS,
                  Provider: CloudFormation,
                  Version: 1,
                },
                Configuration: {
                  ActionMode: CHANGE_SET_EXECUTE,
                  ChangeSetName: PipelineChange,
                  StackName: silo-app-gitops-eks,
                },
                Name: gitops-eks.Deploy,
                RoleArn: {
                  Fn::Join: [
                    ,
                    [
                      arn:,
                      {
                        Ref: AWS::Partition,
                      },
                      :iam::,
                      {
                        Ref: AWS::AccountId,
                      },
                      :role/cdk-hnb659fds-deploy-role-,
                      {
                        Ref: AWS::AccountId,
                      },
                      -ap-south-1,
                    ],
                  ],
                },
                RunOrder: 2,
              },
            ],
            Name: silo-app,
          },
        ],
      },
      Type: AWS::CodePipeline::Pipeline,
    },
    workloadCodePipelineBuildSynthCdkBuildProjectCE5FD61B: {
      Properties: {
        Artifacts: {
          Type: CODEPIPELINE,
        },
        Cache: {
          Location: {
            Fn::Join: [
              /,
              [
                {
                  Fn::ImportValue: cdkCacheBucket,
                },
                {
                  Ref: AWS::NoValue,
                },
              ],
            ],
          },
          Type: S3,
        },
        Description: Pipeline step workload/CodePipeline/Build/Synth,
        EncryptionKey: alias/aws/s3,
        Environment: {
          ComputeType: BUILD_GENERAL1_SMALL,
          Image: aws/codebuild/amazonlinux2-aarch64-standard:3.0,
          ImagePullCredentialsType: CODEBUILD,
          PrivilegedMode: false,
          Type: ARM_CONTAINER,
        },
        ServiceRole: {
          Fn::GetAtt: [
            workloadCodePipelineBuildSynthCdkBuildProjectRole11AA1585,
            Arn,
          ],
        },
        Source: {
          BuildSpec: {
  "cache": {
    "paths": [
      ".yarn/cache/**/*",
      "node_modules/**/*"
    ]
  },
  "version": "0.2",
  "phases": {
    "install": {
      "commands": [
        "n 18",
        "corepack enable",
        "corepack prepare yarn@3.5.1 --activate",
        "yarn set version 3.5.1",
        "yarn install --immutable"
      ]
    },
    "build": {
      "commands": [
        "./.yarn/releases/yarn-3.5.1.cjs install --immutable",
        "./.yarn/releases/yarn-3.5.1.cjs cdk synth -q --verbose -y  -c tenant_id=demo -c deployment_tier=small     -c deployment_type=silo -c deployment_id=dev-001 -c component_account=undefined -c component_region=ap-south-1"
      ]
    }
  },
  "artifacts": {
    "base-directory": "cdk.out",
    "files": [
      "**/*"
    ]
  }
},
          Type: CODEPIPELINE,
        },
      },
      Type: AWS::CodeBuild::Project,
    },
    workloadCodePipelineBuildSynthCdkBuildProjectRole11AA1585: {
      Properties: {
        AssumeRolePolicyDocument: {
          Statement: [
            {
              Action: sts:AssumeRole,
              Effect: Allow,
              Principal: {
                Service: codebuild.amazonaws.com,
              },
            },
          ],
          Version: 2012-10-17,
        },
      },
      Type: AWS::IAM::Role,
    },
    workloadCodePipelineBuildSynthCdkBuildProjectRoleDefaultPolicy2C20BD9F: {
      Properties: {
        PolicyDocument: {
          Statement: [
            {
              Action: [
                s3:GetObject*,
                s3:GetBucket*,
                s3:List*,
                s3:DeleteObject*,
                s3:PutObject,
                s3:PutObjectLegalHold,
                s3:PutObjectRetention,
                s3:PutObjectTagging,
                s3:PutObjectVersionTagging,
                s3:Abort*,
              ],
              Effect: Allow,
              Resource: [
                {
                  Fn::Join: [
                    ,
                    [
                      arn:,
                      {
                        Ref: AWS::Partition,
                      },
                      :s3:::,
                      {
                        Fn::ImportValue: cdkCacheBucket,
                      },
                    ],
                  ],
                },
                {
                  Fn::Join: [
                    ,
                    [
                      arn:,
                      {
                        Ref: AWS::Partition,
                      },
                      :s3:::,
                      {
                        Fn::ImportValue: cdkCacheBucket,
                      },
                      /*,
                    ],
                  ],
                },
              ],
            },
            {
              Action: [
                logs:CreateLogGroup,
                logs:CreateLogStream,
                logs:PutLogEvents,
              ],
              Effect: Allow,
              Resource: [
                {
                  Fn::Join: [
                    ,
                    [
                      arn:,
                      {
                        Ref: AWS::Partition,
                      },
                      :logs:ap-south-1:,
                      {
                        Ref: AWS::AccountId,
                      },
                      :log-group:/aws/codebuild/,
                      {
                        Ref: workloadCodePipelineBuildSynthCdkBuildProjectCE5FD61B,
                      },
                    ],
                  ],
                },
                {
                  Fn::Join: [
                    ,
                    [
                      arn:,
                      {
                        Ref: AWS::Partition,
                      },
                      :logs:ap-south-1:,
                      {
                        Ref: AWS::AccountId,
                      },
                      :log-group:/aws/codebuild/,
                      {
                        Ref: workloadCodePipelineBuildSynthCdkBuildProjectCE5FD61B,
                      },
                      :*,
                    ],
                  ],
                },
              ],
            },
            {
              Action: [
                codebuild:CreateReportGroup,
                codebuild:CreateReport,
                codebuild:UpdateReport,
                codebuild:BatchPutTestCases,
                codebuild:BatchPutCodeCoverages,
              ],
              Effect: Allow,
              Resource: {
                Fn::Join: [
                  ,
                  [
                    arn:,
                    {
                      Ref: AWS::Partition,
                    },
                    :codebuild:ap-south-1:,
                    {
                      Ref: AWS::AccountId,
                    },
                    :report-group/,
                    {
                      Ref: workloadCodePipelineBuildSynthCdkBuildProjectCE5FD61B,
                    },
                    -*,
                  ],
                ],
              },
            },
            {
              Action: [
                s3:GetObject*,
                s3:GetBucket*,
                s3:List*,
                s3:DeleteObject*,
                s3:PutObject,
                s3:PutObjectLegalHold,
                s3:PutObjectRetention,
                s3:PutObjectTagging,
                s3:PutObjectVersionTagging,
                s3:Abort*,
              ],
              Effect: Allow,
              Resource: [
                {
                  Fn::Join: [
                    ,
                    [
                      arn:,
                      {
                        Ref: AWS::Partition,
                      },
                      :s3:::,
                      {
                        Fn::ImportValue: toolchainBucket,
                      },
                    ],
                  ],
                },
                {
                  Fn::Join: [
                    ,
                    [
                      arn:,
                      {
                        Ref: AWS::Partition,
                      },
                      :s3:::,
                      {
                        Fn::ImportValue: toolchainBucket,
                      },
                      /*,
                    ],
                  ],
                },
              ],
            },
          ],
          Version: 2012-10-17,
        },
        PolicyName: workloadCodePipelineBuildSynthCdkBuildProjectRoleDefaultPolicy2C20BD9F,
        Roles: [
          {
            Ref: workloadCodePipelineBuildSynthCdkBuildProjectRole11AA1585,
          },
        ],
      },
      Type: AWS::IAM::Policy,
    },
    workloadCodePipelineRole40DCE8D3: {
      Properties: {
        AssumeRolePolicyDocument: {
          Statement: [
            {
              Action: sts:AssumeRole,
              Effect: Allow,
              Principal: {
                Service: codepipeline.amazonaws.com,
              },
            },
          ],
          Version: 2012-10-17,
        },
      },
      Type: AWS::IAM::Role,
    },
    workloadCodePipelineRoleDefaultPolicyE4529485: {
      Properties: {
        PolicyDocument: {
          Statement: [
            {
              Action: [
                s3:GetObject*,
                s3:GetBucket*,
                s3:List*,
                s3:DeleteObject*,
                s3:PutObject,
                s3:PutObjectLegalHold,
                s3:PutObjectRetention,
                s3:PutObjectTagging,
                s3:PutObjectVersionTagging,
                s3:Abort*,
              ],
              Effect: Allow,
              Resource: [
                {
                  Fn::Join: [
                    ,
                    [
                      arn:,
                      {
                        Ref: AWS::Partition,
                      },
                      :s3:::,
                      {
                        Fn::ImportValue: toolchainBucket,
                      },
                    ],
                  ],
                },
                {
                  Fn::Join: [
                    ,
                    [
                      arn:,
                      {
                        Ref: AWS::Partition,
                      },
                      :s3:::,
                      {
                        Fn::ImportValue: toolchainBucket,
                      },
                      /*,
                    ],
                  ],
                },
              ],
            },
            {
              Action: sts:AssumeRole,
              Effect: Allow,
              Resource: {
                Fn::GetAtt: [
                  workloadCodePipelineSourcervermanslnslsaasacceleratorCodePipelineActionRoleCA12EEFB,
                  Arn,
                ],
              },
            },
            {
              Action: sts:AssumeRole,
              Effect: Allow,
              Resource: {
                Fn::GetAtt: [
                  workloadCodeBuildActionRole6C3D131A,
                  Arn,
                ],
              },
            },
            {
              Action: sts:AssumeRole,
              Effect: Allow,
              Resource: {
                Fn::Join: [
                  ,
                  [
                    arn:,
                    {
                      Ref: AWS::Partition,
                    },
                    :iam::,
                    {
                      Ref: AWS::AccountId,
                    },
                    :role/cdk-hnb659fds-deploy-role-,
                    {
                      Ref: AWS::AccountId,
                    },
                    -ap-south-1,
                  ],
                ],
              },
            },
          ],
          Version: 2012-10-17,
        },
        PolicyName: workloadCodePipelineRoleDefaultPolicyE4529485,
        Roles: [
          {
            Ref: workloadCodePipelineRole40DCE8D3,
          },
        ],
      },
      Type: AWS::IAM::Policy,
    },
    workloadCodePipelineSourcervermanslnslsaasacceleratorCodePipelineActionRoleCA12EEFB: {
      Properties: {
        AssumeRolePolicyDocument: {
          Statement: [
            {
              Action: sts:AssumeRole,
              Effect: Allow,
              Principal: {
                AWS: {
                  Fn::Join: [
                    ,
                    [
                      arn:,
                      {
                        Ref: AWS::Partition,
                      },
                      :iam::,
                      {
                        Ref: AWS::AccountId,
                      },
                      :root,
                    ],
                  ],
                },
              },
            },
          ],
          Version: 2012-10-17,
        },
      },
      Type: AWS::IAM::Role,
    },
    workloadCodePipelineSourcervermanslnslsaasacceleratorCodePipelineActionRoleDefaultPolicy30252708: {
      Properties: {
        PolicyDocument: {
          Statement: [
            {
              Action: codestar-connections:UseConnection,
              Effect: Allow,
              Resource: arn:aws:codestar-connections:ap-south-1:415505189627:connection/UUID,
            },
            {
              Action: [
                s3:GetObject*,
                s3:GetBucket*,
                s3:List*,
                s3:DeleteObject*,
                s3:PutObject,
                s3:PutObjectLegalHold,
                s3:PutObjectRetention,
                s3:PutObjectTagging,
                s3:PutObjectVersionTagging,
                s3:Abort*,
              ],
              Effect: Allow,
              Resource: [
                {
                  Fn::Join: [
                    ,
                    [
                      arn:,
                      {
                        Ref: AWS::Partition,
                      },
                      :s3:::,
                      {
                        Fn::ImportValue: toolchainBucket,
                      },
                    ],
                  ],
                },
                {
                  Fn::Join: [
                    ,
                    [
                      arn:,
                      {
                        Ref: AWS::Partition,
                      },
                      :s3:::,
                      {
                        Fn::ImportValue: toolchainBucket,
                      },
                      /*,
                    ],
                  ],
                },
              ],
            },
            {
              Action: [
                s3:PutObjectAcl,
                s3:PutObjectVersionAcl,
              ],
              Effect: Allow,
              Resource: {
                Fn::Join: [
                  ,
                  [
                    arn:,
                    {
                      Ref: AWS::Partition,
                    },
                    :s3:::,
                    {
                      Fn::ImportValue: toolchainBucket,
                    },
                    /*,
                  ],
                ],
              },
            },
          ],
          Version: 2012-10-17,
        },
        PolicyName: workloadCodePipelineSourcervermanslnslsaasacceleratorCodePipelineActionRoleDefaultPolicy30252708,
        Roles: [
          {
            Ref: workloadCodePipelineSourcervermanslnslsaasacceleratorCodePipelineActionRoleCA12EEFB,
          },
        ],
      },
      Type: AWS::IAM::Policy,
    },
  },
  Rules: {
    CheckBootstrapVersion: {
      Assertions: [
        {
          Assert: {
            Fn::Not: [
              {
                Fn::Contains: [
                  [
                    1,
                    2,
                    3,
                    4,
                    5,
                  ],
                  {
                    Ref: BootstrapVersion,
                  },
                ],
              },
            ],
          },
          AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.,
        },
      ],
    },
  },
}
`;
